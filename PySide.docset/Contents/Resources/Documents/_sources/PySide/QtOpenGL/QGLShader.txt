.. module:: PySide.QtOpenGL
.. _QGLShader:

QGLShader
*********

.. inheritance-diagram:: QGLShader
    :parts: 2

.. note:: This class was introduced in Qt 4.6
Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`compileSourceCode<PySide.QtOpenGL.QGLShader.compileSourceCode>` (source)
*    def :meth:`compileSourceCode<PySide.QtOpenGL.QGLShader.compileSourceCode>` (source)
*    def :meth:`compileSourceCode<PySide.QtOpenGL.QGLShader.compileSourceCode>` (source)
*    def :meth:`compileSourceFile<PySide.QtOpenGL.QGLShader.compileSourceFile>` (fileName)
*    def :meth:`isCompiled<PySide.QtOpenGL.QGLShader.isCompiled>` ()
*    def :meth:`log<PySide.QtOpenGL.QGLShader.log>` ()
*    def :meth:`shaderId<PySide.QtOpenGL.QGLShader.shaderId>` ()
*    def :meth:`shaderType<PySide.QtOpenGL.QGLShader.shaderType>` ()
*    def :meth:`sourceCode<PySide.QtOpenGL.QGLShader.sourceCode>` ()


Static functions
^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`hasOpenGLShaders<PySide.QtOpenGL.QGLShader.hasOpenGLShaders>` (type[, context=None])


Detailed Description
--------------------



    The :class:`PySide.QtOpenGL.QGLShader` class allows OpenGL shaders to be compiled.

    This class supports shaders written in the OpenGL Shading Language (GLSL) and in the OpenGL/ES Shading Language (GLSL/ES).

    :class:`PySide.QtOpenGL.QGLShader` and :class:`PySide.QtOpenGL.QGLShaderProgram` shelter the programmer from the details of compiling and linking vertex and fragment shaders.

    .. seealso::  :class:`PySide.QtOpenGL.QGLShaderProgram` 

.. class:: QGLShader(type[, parent=None])
           QGLShader(type, context[, parent=None])

    :param type: :class:`PySide.QtOpenGL.QGLShader.ShaderType`
    :param parent: :class:`PySide.QtCore.QObject`
    :param context: :class:`PySide.QtOpenGL.QGLContext`





.. attribute:: PySide.QtOpenGL.QGLShader.ShaderTypeBit

    This enum specifies the type of :class:`PySide.QtOpenGL.QGLShader` that is being created.

    +------------------+------------------------------------------------------------------------------------------------------------------+
    |Constant          |Description                                                                                                       |
    +==================+==================================================================================================================+
    |QGLShader.Vertex  |Vertex shader written in the OpenGL Shading Language (GLSL).                                                      |
    +------------------+------------------------------------------------------------------------------------------------------------------+
    |QGLShader.Fragment|Fragment shader written in the OpenGL Shading Language (GLSL).                                                    |
    +------------------+------------------------------------------------------------------------------------------------------------------+
    |QGLShader.Geometry|Geometry shaders written in the OpenGL Shading Language (GLSL), based on the GL\_EXT\_geometry\_shader4 extension.|
    +------------------+------------------------------------------------------------------------------------------------------------------+


.. method:: PySide.QtOpenGL.QGLShader.compileSourceCode(source)


    :param source: str
    :rtype: :class:`PySide.QtCore.bool`




    Sets the ``source`` code for this shader and compiles it. Returns true if the source was successfully compiled, false otherwise.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceFile` 


.. method:: PySide.QtOpenGL.QGLShader.compileSourceCode(source)


    :param source: :class:`PySide.QtCore.QByteArray`
    :rtype: :class:`PySide.QtCore.bool`




    This is an overloaded function.

    Sets the ``source`` code for this shader and compiles it. Returns true if the source was successfully compiled, false otherwise.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceFile` 


.. method:: PySide.QtOpenGL.QGLShader.compileSourceCode(source)


    :param source: unicode
    :rtype: :class:`PySide.QtCore.bool`




    This is an overloaded function.

    Sets the ``source`` code for this shader and compiles it. Returns true if the source was successfully compiled, false otherwise.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceFile` 


.. method:: PySide.QtOpenGL.QGLShader.compileSourceFile(fileName)


    :param fileName: unicode
    :rtype: :class:`PySide.QtCore.bool`




    Sets the source code for this shader to the contents of ``fileName`` and compiles it. Returns true if the file could be opened and the source compiled, false otherwise.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceCode` 


.. staticmethod:: PySide.QtOpenGL.QGLShader.hasOpenGLShaders(type[, context=None])


    :param type: :class:`PySide.QtOpenGL.QGLShader.ShaderType`
    :param context: :class:`PySide.QtOpenGL.QGLContext`
    :rtype: :class:`PySide.QtCore.bool`







.. method:: PySide.QtOpenGL.QGLShader.isCompiled()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this shader has been compiled; false otherwise.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceCode`  :meth:`PySide.QtOpenGL.QGLShader.compileSourceFile` 


.. method:: PySide.QtOpenGL.QGLShader.log()


    :rtype: unicode




    Returns the errors and warnings that occurred during the last compile.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceCode`  :meth:`PySide.QtOpenGL.QGLShader.compileSourceFile` 


.. method:: PySide.QtOpenGL.QGLShader.shaderId()


    :rtype: :class:`PySide.QtOpenGL.GLuint`




    Returns the OpenGL identifier associated with this shader.

    .. seealso::  :meth:`QGLShaderProgram.programId()<PySide.QtOpenGL.QGLShaderProgram.programId>` 


.. method:: PySide.QtOpenGL.QGLShader.shaderType()


    :rtype: :class:`PySide.QtOpenGL.QGLShader.ShaderType`




    Returns the type of this shader.



.. method:: PySide.QtOpenGL.QGLShader.sourceCode()


    :rtype: :class:`PySide.QtCore.QByteArray`




    Returns the source code for this shader.

    .. seealso::  :meth:`PySide.QtOpenGL.QGLShader.compileSourceCode` 



