.. module:: PySide.QtGui
.. _QGraphicsScale:

QGraphicsScale
**************

.. inheritance-diagram:: QGraphicsScale
    :parts: 2

.. note:: This class was introduced in Qt 4.6
Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`origin<PySide.QtGui.QGraphicsScale.origin>` ()
*    def :meth:`setOrigin<PySide.QtGui.QGraphicsScale.setOrigin>` (point)
*    def :meth:`setXScale<PySide.QtGui.QGraphicsScale.setXScale>` (arg__1)
*    def :meth:`setYScale<PySide.QtGui.QGraphicsScale.setYScale>` (arg__1)
*    def :meth:`setZScale<PySide.QtGui.QGraphicsScale.setZScale>` (arg__1)
*    def :meth:`xScale<PySide.QtGui.QGraphicsScale.xScale>` ()
*    def :meth:`yScale<PySide.QtGui.QGraphicsScale.yScale>` ()
*    def :meth:`zScale<PySide.QtGui.QGraphicsScale.zScale>` ()


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`originChanged<PySide.QtGui.QGraphicsScale.originChanged>` ()
*    def :meth:`scaleChanged<PySide.QtGui.QGraphicsScale.scaleChanged>` ()
*    def :meth:`xScaleChanged<PySide.QtGui.QGraphicsScale.xScaleChanged>` ()
*    def :meth:`yScaleChanged<PySide.QtGui.QGraphicsScale.yScaleChanged>` ()
*    def :meth:`zScaleChanged<PySide.QtGui.QGraphicsScale.zScaleChanged>` ()


Detailed Description
--------------------



    The :class:`PySide.QtGui.QGraphicsScale` class provides a scale transformation.

    :class:`PySide.QtGui.QGraphicsScene` provides certain parameters to help control how the scale should be applied.

    The origin is the point that the item is scaled from (i.e., it stays fixed relative to the parent as the rest of the item grows). By default the origin is :class:`PySide.QtCore.QPointF` (0, 0).

    The parameters :meth:`PySide.QtGui.QGraphicsScale.xScale` , :meth:`PySide.QtGui.QGraphicsScale.yScale` , and :meth:`PySide.QtGui.QGraphicsScale.zScale` describe the scale factors to apply in horizontal, vertical, and depth directions. They can take on any value, including 0 (to collapse the item to a point) or negative value. A negative :meth:`PySide.QtGui.QGraphicsScale.xScale` value will mirror the item horizontally. A negative :meth:`PySide.QtGui.QGraphicsScale.yScale` value will flip the item vertically. A negative :meth:`PySide.QtGui.QGraphicsScale.zScale` will flip the item end for end.

    .. seealso::  :class:`PySide.QtGui.QGraphicsTransform`  :meth:`QGraphicsItem.setScale()<PySide.QtGui.QGraphicsItem.setScale>`  :meth:`QTransform.scale()<PySide.QtGui.QTransform.scale>` 

.. class:: QGraphicsScale([parent=None])

    :param parent: :class:`PySide.QtCore.QObject`

    Constructs an empty :class:`PySide.QtGui.QGraphicsScale` object with the given ``parent`` .


.. method:: PySide.QtGui.QGraphicsScale.origin()


    :rtype: :class:`PySide.QtGui.QVector3D`




    This property holds the origin of the scale in 3D space..

    All scaling will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is scaled).

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.xScale`  :meth:`PySide.QtGui.QGraphicsScale.yScale`  :meth:`PySide.QtGui.QGraphicsScale.zScale` 


.. method:: PySide.QtGui.QGraphicsScale.originChanged()








.. method:: PySide.QtGui.QGraphicsScale.scaleChanged()








.. method:: PySide.QtGui.QGraphicsScale.setOrigin(point)


    :param point: :class:`PySide.QtGui.QVector3D`




    This property holds the origin of the scale in 3D space..

    All scaling will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is scaled).

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.xScale`  :meth:`PySide.QtGui.QGraphicsScale.yScale`  :meth:`PySide.QtGui.QGraphicsScale.zScale` 


.. method:: PySide.QtGui.QGraphicsScale.setXScale(arg__1)


    :param arg__1: :class:`PySide.QtCore.qreal`




    This property holds the horizontal scale factor..

    The scale factor can be any real number; the default value is 1.0. If you set the factor to 0.0, the item will be collapsed to a single point. If you provide a negative value, the item will be mirrored horizontally around its origin.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.yScale`  :meth:`PySide.QtGui.QGraphicsScale.zScale`  :meth:`PySide.QtGui.QGraphicsScale.origin` 


.. method:: PySide.QtGui.QGraphicsScale.setYScale(arg__1)


    :param arg__1: :class:`PySide.QtCore.qreal`




    This property holds the vertical scale factor..

    The scale factor can be any real number; the default value is 1.0. If you set the factor to 0.0, the item will be collapsed to a single point. If you provide a negative value, the item will be flipped vertically around its origin.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.xScale`  :meth:`PySide.QtGui.QGraphicsScale.zScale`  :meth:`PySide.QtGui.QGraphicsScale.origin` 


.. method:: PySide.QtGui.QGraphicsScale.setZScale(arg__1)


    :param arg__1: :class:`PySide.QtCore.qreal`




    This property holds the depth scale factor..

    The scale factor can be any real number; the default value is 1.0. If you set the factor to 0.0, the item will be collapsed to a single point. If you provide a negative value, the item will be flipped end for end around its origin.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.xScale`  :meth:`PySide.QtGui.QGraphicsScale.yScale`  :meth:`PySide.QtGui.QGraphicsScale.origin` 


.. method:: PySide.QtGui.QGraphicsScale.xScale()


    :rtype: :class:`PySide.QtCore.qreal`




    This property holds the horizontal scale factor..

    The scale factor can be any real number; the default value is 1.0. If you set the factor to 0.0, the item will be collapsed to a single point. If you provide a negative value, the item will be mirrored horizontally around its origin.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.yScale`  :meth:`PySide.QtGui.QGraphicsScale.zScale`  :meth:`PySide.QtGui.QGraphicsScale.origin` 


.. method:: PySide.QtGui.QGraphicsScale.xScaleChanged()








.. method:: PySide.QtGui.QGraphicsScale.yScale()


    :rtype: :class:`PySide.QtCore.qreal`




    This property holds the vertical scale factor..

    The scale factor can be any real number; the default value is 1.0. If you set the factor to 0.0, the item will be collapsed to a single point. If you provide a negative value, the item will be flipped vertically around its origin.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.xScale`  :meth:`PySide.QtGui.QGraphicsScale.zScale`  :meth:`PySide.QtGui.QGraphicsScale.origin` 


.. method:: PySide.QtGui.QGraphicsScale.yScaleChanged()








.. method:: PySide.QtGui.QGraphicsScale.zScale()


    :rtype: :class:`PySide.QtCore.qreal`




    This property holds the depth scale factor..

    The scale factor can be any real number; the default value is 1.0. If you set the factor to 0.0, the item will be collapsed to a single point. If you provide a negative value, the item will be flipped end for end around its origin.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsScale.xScale`  :meth:`PySide.QtGui.QGraphicsScale.yScale`  :meth:`PySide.QtGui.QGraphicsScale.origin` 


.. method:: PySide.QtGui.QGraphicsScale.zScaleChanged()









