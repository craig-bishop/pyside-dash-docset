.. module:: PySide.QtGui
.. _QPainterPath.Element:

QPainterPath.Element
********************

.. inheritance-diagram:: QPainterPath.Element
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtGui.QPainterPath.Element.__eq__>` (e)
*    def :meth:`__ne__<PySide.QtGui.QPainterPath.Element.__ne__>` (e)
*    def :meth:`isCurveTo<PySide.QtGui.QPainterPath.Element.isCurveTo>` ()
*    def :meth:`isLineTo<PySide.QtGui.QPainterPath.Element.isLineTo>` ()
*    def :meth:`isMoveTo<PySide.QtGui.QPainterPath.Element.isMoveTo>` ()


Detailed Description
--------------------



    The :class:`QPainterPath.Element` class specifies the position and type of a subpath.

    Once a :class:`PySide.QtGui.QPainterPath` object is constructed, subpaths like lines and curves can be added to the path (creating :attr:`QPainterPath.LineToElement<QPainterPath.ElementType>` and :attr:`QPainterPath.CurveToElement<QPainterPath.ElementType>` components).

    The lines and curves stretch from the :meth:`~PySide.QtGui.QPainterPath.Element.currentPosition` to the position passed as argument. The :meth:`~PySide.QtGui.QPainterPath.Element.currentPosition` of the :class:`PySide.QtGui.QPainterPath` object is always the end position of the last subpath that was added (or the initial start point). The :meth:`~PySide.QtGui.QPainterPath.Element.moveTo` function can be used to move the :meth:`~PySide.QtGui.QPainterPath.Element.currentPosition` without adding a line or curve, creating a :attr:`QPainterPath.MoveToElement<QPainterPath.ElementType>` component.

    .. seealso::  :class:`PySide.QtGui.QPainterPath` 

.. class:: PySide.QtGui.QPainterPath.Element()
           PySide.QtGui.QPainterPath.Element(Element)

    :param Element: :class:`PySide.QtGui.QPainterPath::Element`





.. attribute:: PySide.QtGui.QPainterPath.Element.x


.. attribute:: PySide.QtGui.QPainterPath.Element.y


.. attribute:: PySide.QtGui.QPainterPath.Element.type


.. method:: PySide.QtGui.QPainterPath.Element.isCurveTo()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the element is a curve, otherwise returns false.

    .. seealso::  :ref:`type<qpainterpath-element.html#type-var>`  :attr:`QPainterPath.CurveToElement<QPainterPath.ElementType>` 


.. method:: PySide.QtGui.QPainterPath.Element.isLineTo()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the element is a line, otherwise returns false.

    .. seealso::  :ref:`type<qpainterpath-element.html#type-var>`  :attr:`QPainterPath.LineToElement<QPainterPath.ElementType>` 


.. method:: PySide.QtGui.QPainterPath.Element.isMoveTo()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the element is moving the current position, otherwise returns false.

    .. seealso::  :ref:`type<qpainterpath-element.html#type-var>`  :attr:`QPainterPath.MoveToElement<QPainterPath.ElementType>` 


.. method:: PySide.QtGui.QPainterPath.Element.__ne__(e)


    :param e: :class:`PySide.QtGui.QPainterPath::Element`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this element is not equal to ``other`` ; otherwise returns false.

    .. seealso::  :meth:`PySide.QtGui.QPainterPath::Element.operator==` 


.. method:: PySide.QtGui.QPainterPath.Element.__eq__(e)


    :param e: :class:`PySide.QtGui.QPainterPath::Element`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this element is equal to ``other`` ; otherwise returns false.

    .. seealso::  :meth:`PySide.QtGui.QPainterPath::Element.operator!=` 



