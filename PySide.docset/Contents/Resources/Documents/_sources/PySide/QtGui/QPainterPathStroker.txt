.. module:: PySide.QtGui
.. _QPainterPathStroker:

QPainterPathStroker
*******************

.. inheritance-diagram:: QPainterPathStroker
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`capStyle<PySide.QtGui.QPainterPathStroker.capStyle>` ()
*    def :meth:`createStroke<PySide.QtGui.QPainterPathStroker.createStroke>` (path)
*    def :meth:`curveThreshold<PySide.QtGui.QPainterPathStroker.curveThreshold>` ()
*    def :meth:`dashOffset<PySide.QtGui.QPainterPathStroker.dashOffset>` ()
*    def :meth:`dashPattern<PySide.QtGui.QPainterPathStroker.dashPattern>` ()
*    def :meth:`joinStyle<PySide.QtGui.QPainterPathStroker.joinStyle>` ()
*    def :meth:`miterLimit<PySide.QtGui.QPainterPathStroker.miterLimit>` ()
*    def :meth:`setCapStyle<PySide.QtGui.QPainterPathStroker.setCapStyle>` (style)
*    def :meth:`setCurveThreshold<PySide.QtGui.QPainterPathStroker.setCurveThreshold>` (threshold)
*    def :meth:`setDashOffset<PySide.QtGui.QPainterPathStroker.setDashOffset>` (offset)
*    def :meth:`setDashPattern<PySide.QtGui.QPainterPathStroker.setDashPattern>` (arg__1)
*    def :meth:`setDashPattern<PySide.QtGui.QPainterPathStroker.setDashPattern>` (dashPattern)
*    def :meth:`setJoinStyle<PySide.QtGui.QPainterPathStroker.setJoinStyle>` (style)
*    def :meth:`setMiterLimit<PySide.QtGui.QPainterPathStroker.setMiterLimit>` (length)
*    def :meth:`setWidth<PySide.QtGui.QPainterPathStroker.setWidth>` (width)
*    def :meth:`width<PySide.QtGui.QPainterPathStroker.width>` ()


Detailed Description
--------------------



    The :class:`PySide.QtGui.QPainterPathStroker` class is used to generate fillable outlines for a given painter path.

    By calling the :meth:`PySide.QtGui.QPainterPathStroker.createStroke` function, passing a given :class:`PySide.QtGui.QPainterPath` as argument, a new painter path representing the outline of the given path is created. The newly created painter path can then be filled to draw the original painter path's outline.

    You can control the various design aspects (width, cap styles, join styles and dash pattern) of the outlining using the following functions:


    * :meth:`PySide.QtGui.QPainterPathStroker.setWidth`
    * :meth:`PySide.QtGui.QPainterPathStroker.setCapStyle`
    * :meth:`PySide.QtGui.QPainterPathStroker.setJoinStyle`
    * :meth:`PySide.QtGui.QPainterPathStroker.setDashPattern`

    The :meth:`PySide.QtGui.QPainterPathStroker.setDashPattern` function accepts both a :attr:`Qt.PenStyle` object and a vector representation of the pattern as argument.

    In addition you can specify a curve's threshold, controlling the granularity with which a curve is drawn, using the :meth:`PySide.QtGui.QPainterPathStroker.setCurveThreshold` function. The default threshold is a well adjusted value (0.25), and normally you should not need to modify it. However, you can make the curve's appearance smoother by decreasing its value.

    You can also control the miter limit for the generated outline using the :meth:`PySide.QtGui.QPainterPathStroker.setMiterLimit` function. The miter limit describes how far from each join the miter join can extend. The limit is specified in the units of width so the pixelwise miter limit will be ``miterlimit * width`` . This value is only used if the join style is :attr:`Qt.MiterJoin<Qt.PenJoinStyle>` .

    The painter path generated by the :meth:`PySide.QtGui.QPainterPathStroker.createStroke` function should only be used for outlining the given painter path. Otherwise it may cause unexpected behavior. Generated outlines also require the :attr:`Qt.WindingFill<Qt.FillRule>` rule which is set by default.

    .. seealso::  :class:`PySide.QtGui.QPen`  :class:`PySide.QtGui.QBrush` 

.. class:: QPainterPathStroker()


    Creates a new stroker.


.. method:: PySide.QtGui.QPainterPathStroker.capStyle()


    :rtype: :attr:`PySide.QtCore.Qt.PenCapStyle`




    Returns the cap style of the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setCapStyle` 


.. method:: PySide.QtGui.QPainterPathStroker.createStroke(path)


    :param path: :class:`PySide.QtGui.QPainterPath`
    :rtype: :class:`PySide.QtGui.QPainterPath`




    Generates a new path that is a fillable area representing the outline of the given ``path`` .

    The various design aspects of the outline are based on the stroker's properties: :meth:`PySide.QtGui.QPainterPathStroker.width` , :meth:`PySide.QtGui.QPainterPathStroker.capStyle` , :meth:`PySide.QtGui.QPainterPathStroker.joinStyle` , :meth:`PySide.QtGui.QPainterPathStroker.dashPattern` , :meth:`PySide.QtGui.QPainterPathStroker.curveThreshold` and :meth:`PySide.QtGui.QPainterPathStroker.miterLimit` .

    The generated path should only be used for outlining the given painter path. Otherwise it may cause unexpected behavior. Generated outlines also require the :attr:`Qt.WindingFill<Qt.FillRule>` rule which is set by default.



.. method:: PySide.QtGui.QPainterPathStroker.curveThreshold()


    :rtype: :class:`PySide.QtCore.qreal`




    Returns the curve flattening threshold for the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setCurveThreshold` 


.. method:: PySide.QtGui.QPainterPathStroker.dashOffset()


    :rtype: :class:`PySide.QtCore.qreal`




    Returns the dash offset for the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setDashOffset` 


.. method:: PySide.QtGui.QPainterPathStroker.dashPattern()


    :rtype: 




    Returns the dash pattern for the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setDashPattern` 


.. method:: PySide.QtGui.QPainterPathStroker.joinStyle()


    :rtype: :attr:`PySide.QtCore.Qt.PenJoinStyle`




    Returns the join style of the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setJoinStyle` 


.. method:: PySide.QtGui.QPainterPathStroker.miterLimit()


    :rtype: :class:`PySide.QtCore.qreal`




    Returns the miter limit for the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setMiterLimit` 


.. method:: PySide.QtGui.QPainterPathStroker.setCapStyle(style)


    :param style: :attr:`PySide.QtCore.Qt.PenCapStyle`







.. method:: PySide.QtGui.QPainterPathStroker.setCurveThreshold(threshold)


    :param threshold: :class:`PySide.QtCore.qreal`




    Specifies the curve flattening ``threshold`` , controlling the granularity with which the generated outlines' curve is drawn.

    The default threshold is a well adjusted value (0.25), and normally you should not need to modify it. However, you can make the curve's appearance smoother by decreasing its value.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.curveThreshold` 


.. method:: PySide.QtGui.QPainterPathStroker.setDashOffset(offset)


    :param offset: :class:`PySide.QtCore.qreal`




    Sets the dash offset for the generated outlines to ``offset`` .

    See the documentation for :meth:`QPen.setDashOffset()<PySide.QtGui.QPen.setDashOffset>` for a description of the dash offset.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.dashOffset` 


.. method:: PySide.QtGui.QPainterPathStroker.setDashPattern(dashPattern)


    :param dashPattern: 







.. method:: PySide.QtGui.QPainterPathStroker.setDashPattern(arg__1)


    :param arg__1: :attr:`PySide.QtCore.Qt.PenStyle`







.. method:: PySide.QtGui.QPainterPathStroker.setJoinStyle(style)


    :param style: :attr:`PySide.QtCore.Qt.PenJoinStyle`







.. method:: PySide.QtGui.QPainterPathStroker.setMiterLimit(length)


    :param length: :class:`PySide.QtCore.qreal`




    Sets the miter limit of the generated outlines to ``limit`` .

    The miter limit describes how far from each join the miter join can extend. The limit is specified in units of the currently set width. So the pixelwise miter limit will be ``miterlimit * width`` .

    This value is only used if the join style is :attr:`Qt.MiterJoin<Qt.PenJoinStyle>` .

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.miterLimit` 


.. method:: PySide.QtGui.QPainterPathStroker.setWidth(width)


    :param width: :class:`PySide.QtCore.qreal`




    Sets the width of the generated outline painter path to ``width`` .

    The generated outlines will extend approximately 50% of ``width`` to each side of the given input path's original outline.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.width` 


.. method:: PySide.QtGui.QPainterPathStroker.width()


    :rtype: :class:`PySide.QtCore.qreal`




    Returns the width of the generated outlines.

    .. seealso::  :meth:`PySide.QtGui.QPainterPathStroker.setWidth` 



