.. module:: PySide.QtGui
.. _QCalendarWidget:

QCalendarWidget
***************

.. inheritance-diagram:: QCalendarWidget
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`dateEditAcceptDelay<PySide.QtGui.QCalendarWidget.dateEditAcceptDelay>` ()
*    def :meth:`dateTextFormat<PySide.QtGui.QCalendarWidget.dateTextFormat>` ()
*    def :meth:`dateTextFormat<PySide.QtGui.QCalendarWidget.dateTextFormat>` (date)
*    def :meth:`firstDayOfWeek<PySide.QtGui.QCalendarWidget.firstDayOfWeek>` ()
*    def :meth:`headerTextFormat<PySide.QtGui.QCalendarWidget.headerTextFormat>` ()
*    def :meth:`horizontalHeaderFormat<PySide.QtGui.QCalendarWidget.horizontalHeaderFormat>` ()
*    def :meth:`isDateEditEnabled<PySide.QtGui.QCalendarWidget.isDateEditEnabled>` ()
*    def :meth:`isGridVisible<PySide.QtGui.QCalendarWidget.isGridVisible>` ()
*    def :meth:`isNavigationBarVisible<PySide.QtGui.QCalendarWidget.isNavigationBarVisible>` ()
*    def :meth:`maximumDate<PySide.QtGui.QCalendarWidget.maximumDate>` ()
*    def :meth:`minimumDate<PySide.QtGui.QCalendarWidget.minimumDate>` ()
*    def :meth:`monthShown<PySide.QtGui.QCalendarWidget.monthShown>` ()
*    def :meth:`selectedDate<PySide.QtGui.QCalendarWidget.selectedDate>` ()
*    def :meth:`selectionMode<PySide.QtGui.QCalendarWidget.selectionMode>` ()
*    def :meth:`setDateEditAcceptDelay<PySide.QtGui.QCalendarWidget.setDateEditAcceptDelay>` (delay)
*    def :meth:`setDateEditEnabled<PySide.QtGui.QCalendarWidget.setDateEditEnabled>` (enable)
*    def :meth:`setDateTextFormat<PySide.QtGui.QCalendarWidget.setDateTextFormat>` (date, format)
*    def :meth:`setFirstDayOfWeek<PySide.QtGui.QCalendarWidget.setFirstDayOfWeek>` (dayOfWeek)
*    def :meth:`setHeaderTextFormat<PySide.QtGui.QCalendarWidget.setHeaderTextFormat>` (format)
*    def :meth:`setHorizontalHeaderFormat<PySide.QtGui.QCalendarWidget.setHorizontalHeaderFormat>` (format)
*    def :meth:`setMaximumDate<PySide.QtGui.QCalendarWidget.setMaximumDate>` (date)
*    def :meth:`setMinimumDate<PySide.QtGui.QCalendarWidget.setMinimumDate>` (date)
*    def :meth:`setSelectionMode<PySide.QtGui.QCalendarWidget.setSelectionMode>` (mode)
*    def :meth:`setVerticalHeaderFormat<PySide.QtGui.QCalendarWidget.setVerticalHeaderFormat>` (format)
*    def :meth:`setWeekdayTextFormat<PySide.QtGui.QCalendarWidget.setWeekdayTextFormat>` (dayOfWeek, format)
*    def :meth:`updateCell<PySide.QtGui.QCalendarWidget.updateCell>` (date)
*    def :meth:`updateCells<PySide.QtGui.QCalendarWidget.updateCells>` ()
*    def :meth:`verticalHeaderFormat<PySide.QtGui.QCalendarWidget.verticalHeaderFormat>` ()
*    def :meth:`weekdayTextFormat<PySide.QtGui.QCalendarWidget.weekdayTextFormat>` (dayOfWeek)
*    def :meth:`yearShown<PySide.QtGui.QCalendarWidget.yearShown>` ()


Virtual functions
^^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`paintCell<PySide.QtGui.QCalendarWidget.paintCell>` (painter, rect, date)


Slots
^^^^^
.. container:: function_list

*    def :meth:`setCurrentPage<PySide.QtGui.QCalendarWidget.setCurrentPage>` (year, month)
*    def :meth:`setDateRange<PySide.QtGui.QCalendarWidget.setDateRange>` (min, max)
*    def :meth:`setGridVisible<PySide.QtGui.QCalendarWidget.setGridVisible>` (show)
*    def :meth:`setNavigationBarVisible<PySide.QtGui.QCalendarWidget.setNavigationBarVisible>` (visible)
*    def :meth:`setSelectedDate<PySide.QtGui.QCalendarWidget.setSelectedDate>` (date)
*    def :meth:`showNextMonth<PySide.QtGui.QCalendarWidget.showNextMonth>` ()
*    def :meth:`showNextYear<PySide.QtGui.QCalendarWidget.showNextYear>` ()
*    def :meth:`showPreviousMonth<PySide.QtGui.QCalendarWidget.showPreviousMonth>` ()
*    def :meth:`showPreviousYear<PySide.QtGui.QCalendarWidget.showPreviousYear>` ()
*    def :meth:`showSelectedDate<PySide.QtGui.QCalendarWidget.showSelectedDate>` ()
*    def :meth:`showToday<PySide.QtGui.QCalendarWidget.showToday>` ()


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`activated<PySide.QtGui.QCalendarWidget.activated>` (date)
*    def :meth:`clicked<PySide.QtGui.QCalendarWidget.clicked>` (date)
*    def :meth:`currentPageChanged<PySide.QtGui.QCalendarWidget.currentPageChanged>` (year, month)
*    def :meth:`selectionChanged<PySide.QtGui.QCalendarWidget.selectionChanged>` ()


Detailed Description
--------------------



    The :class:`PySide.QtGui.QCalendarWidget` class provides a monthly based calendar widget allowing the user to select a date.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/cleanlooks-calendarwidget.png

    The widget is initialized with the current month and year, but :class:`PySide.QtGui.QCalendarWidget` provides several public slots to change the year and month that is shown.

    By default, today's date is selected, and the user can select a date using both mouse and keyboard. The currently selected date can be retrieved using the :meth:`PySide.QtGui.QCalendarWidget.selectedDate` function. It is possible to constrain the user selection to a given date range by setting the :meth:`PySide.QtGui.QCalendarWidget.minimumDate` and :meth:`PySide.QtGui.QCalendarWidget.maximumDate` properties. Alternatively, both properties can be set in one go using the :meth:`PySide.QtGui.QCalendarWidget.setDateRange` convenience slot. Set the :meth:`PySide.QtGui.QCalendarWidget.selectionMode` property to :attr:`NoSelection<QCalendarWidget.SelectionMode>` to prohibit the user from selecting at all. Note that a date also can be selected programmatically using the :meth:`PySide.QtGui.QCalendarWidget.setSelectedDate` slot.

    The currently displayed month and year can be retrieved using the :meth:`PySide.QtGui.QCalendarWidget.monthShown` and :meth:`PySide.QtGui.QCalendarWidget.yearShown` functions, respectively.

    A newly created calendar widget uses abbreviated day names, and both Saturdays and Sundays are marked in red. The calendar grid is not visible. The week numbers are displayed, and the first column day is Sunday.

    The notation of the days can be altered to a single letter abbreviations ("M" for "Monday") by setting the :meth:`PySide.QtGui.QCalendarWidget.horizontalHeaderFormat` property to :attr:`QCalendarWidget.SingleLetterDayNames<QCalendarWidget.HorizontalHeaderFormat>` . Setting the same property to :attr:`QCalendarWidget.LongDayNames<QCalendarWidget.HorizontalHeaderFormat>` makes the header display the complete day names. The week numbers can be removed by setting the :meth:`PySide.QtGui.QCalendarWidget.verticalHeaderFormat` property to :attr:`QCalendarWidget.NoVerticalHeader<QCalendarWidget.VerticalHeaderFormat>` . The calendar grid can be turned on by setting the :meth:`~PySide.QtGui.QCalendarWidget.gridVisible` property to true using the :meth:`PySide.QtGui.QCalendarWidget.setGridVisible` function:

    +--------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-grid.png|
    +--------------------------------------------------------------------------------------------------------------+
    |::                                                                                                            |
    |                                                                                                              |
    |        calendar.setGridVisible(True)                                                                         |
    +--------------------------------------------------------------------------------------------------------------+

    Finally, the day in the first column can be altered using the :meth:`PySide.QtGui.QCalendarWidget.setFirstDayOfWeek` function.

    The :class:`PySide.QtGui.QCalendarWidget` class also provides three signals, :meth:`PySide.QtGui.QCalendarWidget.selectionChanged` , :meth:`PySide.QtGui.QCalendarWidget.activated` and :meth:`PySide.QtGui.QCalendarWidget.currentPageChanged` making it possible to respond to user interaction.

    The rendering of the headers, weekdays or single days can be largely customized by setting :class:`PySide.QtGui.QTextCharFormat` 's for some special weekday, a special date or for the rendering of the headers.

    Only a subset of the properties in :class:`PySide.QtGui.QTextCharFormat` are used by the calendar widget. Currently, the foreground, background and font properties are used to determine the rendering of individual cells in the widget.

    .. seealso::  :class:`PySide.QtCore.QDate`  :class:`PySide.QtGui.QDateEdit`  :class:`PySide.QtGui.QTextCharFormat` 

.. class:: QCalendarWidget([parent=None])

    :param parent: :class:`PySide.QtGui.QWidget`

    Constructs a calendar widget with the given ``parent`` .

    The widget is initialized with the current month and year, and the currently selected date is today.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage` 

.. attribute:: PySide.QtGui.QCalendarWidget.HorizontalHeaderFormat

    This enum type defines the various formats the horizontal header can display.

    +------------------------------------+-----------------------------------------------------------------------------------+
    |Constant                            |Description                                                                        |
    +====================================+===================================================================================+
    |QCalendarWidget.SingleLetterDayNames|The header displays a single letter abbreviation for day names (e.g. M for Monday).|
    +------------------------------------+-----------------------------------------------------------------------------------+
    |QCalendarWidget.ShortDayNames       |The header displays a short abbreviation for day names (e.g. Mon for Monday).      |
    +------------------------------------+-----------------------------------------------------------------------------------+
    |QCalendarWidget.LongDayNames        |The header displays complete day names (e.g. Monday).                              |
    +------------------------------------+-----------------------------------------------------------------------------------+
    |QCalendarWidget.NoHorizontalHeader  |The header is hidden.                                                              |
    +------------------------------------+-----------------------------------------------------------------------------------+

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.horizontalHeaderFormat`  :attr:`QCalendarWidget.VerticalHeaderFormat` 

.. attribute:: PySide.QtGui.QCalendarWidget.VerticalHeaderFormat

    This enum type defines the various formats the vertical header can display.

    +--------------------------------+-----------------------------------------------------------------------------------------------------------------+
    |Constant                        |Description                                                                                                      |
    +================================+=================================================================================================================+
    |QCalendarWidget.ISOWeekNumbers  |The header displays ISO week numbers as described by :meth:`QDate.weekNumber()<PySide.QtCore.QDate.weekNumber>` .|
    +--------------------------------+-----------------------------------------------------------------------------------------------------------------+
    |QCalendarWidget.NoVerticalHeader|The header is hidden.                                                                                            |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------------+

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.verticalHeaderFormat`  :attr:`QCalendarWidget.HorizontalHeaderFormat` 

.. attribute:: PySide.QtGui.QCalendarWidget.SelectionMode

    This enum describes the types of selection offered to the user for selecting dates in the calendar.

    +-------------------------------+-----------------------------+
    |Constant                       |Description                  |
    +===============================+=============================+
    |QCalendarWidget.NoSelection    |Dates cannot be selected.    |
    +-------------------------------+-----------------------------+
    |QCalendarWidget.SingleSelection|Single dates can be selected.|
    +-------------------------------+-----------------------------+

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.selectionMode` 

.. method:: PySide.QtGui.QCalendarWidget.activated(date)


    :param date: :class:`PySide.QtCore.QDate`






.. method:: PySide.QtGui.QCalendarWidget.clicked(date)


    :param date: :class:`PySide.QtCore.QDate`






.. method:: PySide.QtGui.QCalendarWidget.currentPageChanged(year, month)


    :param year: :class:`PySide.QtCore.int`
    :param month: :class:`PySide.QtCore.int`






.. method:: PySide.QtGui.QCalendarWidget.dateEditAcceptDelay()


    :rtype: :class:`PySide.QtCore.int`




    This property holds the time an inactive date edit is shown before its contents are accepted.

    If the calendar widget's :meth:`date edit is enabled<~PySide.QtGui.QCalendarWidget.dateEditEnabled>` , this property specifies the amount of time (in millseconds) that the date edit remains open after the most recent user input. Once this time has elapsed, the date specified in the date edit is accepted and the popup is closed.

    By default, the delay is defined to be 1500 milliseconds (1.5 seconds).



.. method:: PySide.QtGui.QCalendarWidget.dateTextFormat()


    :rtype: 




    Returns a :class:`QMap` from :class:`PySide.QtCore.QDate` to :class:`PySide.QtGui.QTextCharFormat` showing all dates that use a special format that alters their rendering.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateTextFormat` 


.. method:: PySide.QtGui.QCalendarWidget.dateTextFormat(date)


    :param date: :class:`PySide.QtCore.QDate`
    :rtype: :class:`PySide.QtGui.QTextCharFormat`




    Returns a :class:`PySide.QtGui.QTextCharFormat` for ``date`` . The char format can be be empty if the date is not renderd specially.



.. method:: PySide.QtGui.QCalendarWidget.firstDayOfWeek()


    :rtype: :attr:`PySide.QtCore.Qt.DayOfWeek`




    This property holds a value identifying the day displayed in the first column..

    By default, the day displayed in the first column is Sunday



.. method:: PySide.QtGui.QCalendarWidget.headerTextFormat()


    :rtype: :class:`PySide.QtGui.QTextCharFormat`




    Returns the text char format for rendering the header.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setHeaderTextFormat` 


.. method:: PySide.QtGui.QCalendarWidget.horizontalHeaderFormat()


    :rtype: :attr:`PySide.QtGui.QCalendarWidget.HorizontalHeaderFormat`




    This property holds the format of the horizontal header..

    The default value is :attr:`QCalendarWidget.ShortDayNames<QCalendarWidget.HorizontalHeaderFormat>` .



.. method:: PySide.QtGui.QCalendarWidget.isDateEditEnabled()


    :rtype: :class:`PySide.QtCore.bool`




    This property holds whether the date edit popup is enabled.

    If this property is enabled, pressing a non-modifier key will cause a date edit to popup if the calendar widget has focus, allowing the user to specify a date in the form specified by the current locale.

    By default, this property is enabled.

    The date edit is simpler in appearance than :class:`PySide.QtGui.QDateEdit` , but allows the user to navigate between fields using the left and right cursor keys, increment and decrement individual fields using the up and down cursor keys, and enter values directly using the number keys.

    .. seealso::  :meth:`QCalendarWidget.dateEditAcceptDelay<PySide.QtGui.QCalendarWidget.dateEditAcceptDelay>` 


.. method:: PySide.QtGui.QCalendarWidget.isGridVisible()


    :rtype: :class:`PySide.QtCore.bool`




    This property holds whether the table grid is displayed..

    +--------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-grid.png|
    +--------------------------------------------------------------------------------------------------------------+
    |::                                                                                                            |
    |                                                                                                              |
    |        calendar.setGridVisible(True)                                                                         |
    +--------------------------------------------------------------------------------------------------------------+

    The default value is false.



.. method:: PySide.QtGui.QCalendarWidget.isNavigationBarVisible()


    :rtype: :class:`PySide.QtCore.bool`




    This property holds whether the navigation bar is shown or not.

    When this property is true (the default), the next month, previous month, month selection, year selection controls are shown on top.

    When the property is set to false, these controls are hidden.



.. method:: PySide.QtGui.QCalendarWidget.maximumDate()


    :rtype: :class:`PySide.QtCore.QDate`




    This property holds the maximum date of the currently specified date range..

    The user will not be able to select a date which is after the currently set maximum date.

    +-----------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-maximum.png|
    +-----------------------------------------------------------------------------------------------------------------+
    |::                                                                                                               |
    |                                                                                                                 |
    |        calendar.setGridVisible(True)                                                                            |
    |        calendar.setMaximumDate(QDate(2006, 7, 3))                                                               |
    +-----------------------------------------------------------------------------------------------------------------+

    By default, the maximum date is the last day the :class:`PySide.QtCore.QDate` class can handle.

    When setting a maximum date, the :meth:`PySide.QtGui.QCalendarWidget.minimumDate` and :meth:`PySide.QtGui.QCalendarWidget.selectedDate` properties are adjusted if the selection range becomes invalid. If the provided date is not a valid :class:`PySide.QtCore.QDate` object, the :meth:`PySide.QtGui.QCalendarWidget.setMaximumDate` function does nothing.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateRange` 


.. method:: PySide.QtGui.QCalendarWidget.minimumDate()


    :rtype: :class:`PySide.QtCore.QDate`




    This property holds the minimum date of the currently specified date range..

    The user will not be able to select a date that is before the currently set minimum date.

    +-----------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-minimum.png|
    +-----------------------------------------------------------------------------------------------------------------+
    |::                                                                                                               |
    |                                                                                                                 |
    |        calendar.setGridVisible(True)                                                                            |
    |        calendar.setMinimumDate(QDate(2006, 6, 19))                                                              |
    +-----------------------------------------------------------------------------------------------------------------+

    By default, the minimum date is the earliest date that the :class:`PySide.QtCore.QDate` class can handle.

    When setting a minimum date, the :meth:`PySide.QtGui.QCalendarWidget.maximumDate` and :meth:`PySide.QtGui.QCalendarWidget.selectedDate` properties are adjusted if the selection range becomes invalid. If the provided date is not a valid :class:`PySide.QtCore.QDate` object, the :meth:`PySide.QtGui.QCalendarWidget.setMinimumDate` function does nothing.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateRange` 


.. method:: PySide.QtGui.QCalendarWidget.monthShown()


    :rtype: :class:`PySide.QtCore.int`




    Returns the currently displayed month. Months are numbered from 1 to 12.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.yearShown`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage` 


.. method:: PySide.QtGui.QCalendarWidget.paintCell(painter, rect, date)


    :param painter: :class:`PySide.QtGui.QPainter`
    :param rect: :class:`PySide.QtCore.QRect`
    :param date: :class:`PySide.QtCore.QDate`




    Paints the cell specified by the given ``date`` , using the given ``painter`` and ``rect`` .



.. method:: PySide.QtGui.QCalendarWidget.selectedDate()


    :rtype: :class:`PySide.QtCore.QDate`




    This property holds the currently selected date..

    The selected date must be within the date range specified by the :meth:`PySide.QtGui.QCalendarWidget.minimumDate` and :meth:`PySide.QtGui.QCalendarWidget.maximumDate` properties. By default, the selected date is the current date.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateRange` 


.. method:: PySide.QtGui.QCalendarWidget.selectionChanged()








.. method:: PySide.QtGui.QCalendarWidget.selectionMode()


    :rtype: :attr:`PySide.QtGui.QCalendarWidget.SelectionMode`




    This property holds the type of selection the user can make in the calendar.

    When this property is set to :attr:`SingleSelection<QCalendarWidget.SelectionMode>` , the user can select a date within the minimum and maximum allowed dates, using either the mouse or the keyboard.

    When the property is set to :attr:`NoSelection<QCalendarWidget.SelectionMode>` , the user will be unable to select dates, but they can still be selected programmatically. Note that the date that is selected when the property is set to :attr:`NoSelection<QCalendarWidget.SelectionMode>` will still be the selected date of the calendar.

    The default value is :attr:`SingleSelection<QCalendarWidget.SelectionMode>` .



.. method:: PySide.QtGui.QCalendarWidget.setCurrentPage(year, month)


    :param year: :class:`PySide.QtCore.int`
    :param month: :class:`PySide.QtCore.int`




    Displays the given ``month`` of the given ``year`` without changing the selected date. Use the :meth:`PySide.QtGui.QCalendarWidget.setSelectedDate` function to alter the selected date.

    The currently displayed month and year can be retrieved using the :meth:`PySide.QtGui.QCalendarWidget.monthShown` and :meth:`PySide.QtGui.QCalendarWidget.yearShown` functions respectively.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.yearShown`  :meth:`PySide.QtGui.QCalendarWidget.monthShown`  :meth:`PySide.QtGui.QCalendarWidget.showPreviousMonth`  :meth:`PySide.QtGui.QCalendarWidget.showNextMonth`  :meth:`PySide.QtGui.QCalendarWidget.showPreviousYear`  :meth:`PySide.QtGui.QCalendarWidget.showNextYear` 


.. method:: PySide.QtGui.QCalendarWidget.setDateEditAcceptDelay(delay)


    :param delay: :class:`PySide.QtCore.int`




    This property holds the time an inactive date edit is shown before its contents are accepted.

    If the calendar widget's :meth:`date edit is enabled<~PySide.QtGui.QCalendarWidget.dateEditEnabled>` , this property specifies the amount of time (in millseconds) that the date edit remains open after the most recent user input. Once this time has elapsed, the date specified in the date edit is accepted and the popup is closed.

    By default, the delay is defined to be 1500 milliseconds (1.5 seconds).



.. method:: PySide.QtGui.QCalendarWidget.setDateEditEnabled(enable)


    :param enable: :class:`PySide.QtCore.bool`




    This property holds whether the date edit popup is enabled.

    If this property is enabled, pressing a non-modifier key will cause a date edit to popup if the calendar widget has focus, allowing the user to specify a date in the form specified by the current locale.

    By default, this property is enabled.

    The date edit is simpler in appearance than :class:`PySide.QtGui.QDateEdit` , but allows the user to navigate between fields using the left and right cursor keys, increment and decrement individual fields using the up and down cursor keys, and enter values directly using the number keys.

    .. seealso::  :meth:`QCalendarWidget.dateEditAcceptDelay<PySide.QtGui.QCalendarWidget.dateEditAcceptDelay>` 


.. method:: PySide.QtGui.QCalendarWidget.setDateRange(min, max)


    :param min: :class:`PySide.QtCore.QDate`
    :param max: :class:`PySide.QtCore.QDate`




    Defines a date range by setting the :meth:`PySide.QtGui.QCalendarWidget.minimumDate` and :meth:`PySide.QtGui.QCalendarWidget.maximumDate` properties.

    The date range restricts the user selection, i.e. the user can only select dates within the specified date range. Note that

    ::


        calendar.setDateRange(min, max)


    is analogous to

    ::


        calendar.setMinimumDate(min)
        calendar.setMaximumDate(max)


    If either the ``min`` or ``max`` parameters are not valid :class:`PySide.QtCore.QDate` objects, this function does nothing.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setMinimumDate`  :meth:`PySide.QtGui.QCalendarWidget.setMaximumDate` 


.. method:: PySide.QtGui.QCalendarWidget.setDateTextFormat(date, format)


    :param date: :class:`PySide.QtCore.QDate`
    :param format: :class:`PySide.QtGui.QTextCharFormat`




    Sets the format used to render the given ``date`` to that specified by ``format`` .

    If ``date`` is null, all date formats are cleared.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.dateTextFormat` 


.. method:: PySide.QtGui.QCalendarWidget.setFirstDayOfWeek(dayOfWeek)


    :param dayOfWeek: :attr:`PySide.QtCore.Qt.DayOfWeek`




    This property holds a value identifying the day displayed in the first column..

    By default, the day displayed in the first column is Sunday



.. method:: PySide.QtGui.QCalendarWidget.setGridVisible(show)


    :param show: :class:`PySide.QtCore.bool`




    This property holds whether the table grid is displayed..

    +--------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-grid.png|
    +--------------------------------------------------------------------------------------------------------------+
    |::                                                                                                            |
    |                                                                                                              |
    |        calendar.setGridVisible(True)                                                                         |
    +--------------------------------------------------------------------------------------------------------------+

    The default value is false.



.. method:: PySide.QtGui.QCalendarWidget.setHeaderTextFormat(format)


    :param format: :class:`PySide.QtGui.QTextCharFormat`




    Sets the text char format for rendering the header to ``format`` . If you also set a weekday text format, this format's foreground and background color will take precedence over the header's format. The other formatting information will still be decided by the header's format.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.headerTextFormat` 


.. method:: PySide.QtGui.QCalendarWidget.setHorizontalHeaderFormat(format)


    :param format: :attr:`PySide.QtGui.QCalendarWidget.HorizontalHeaderFormat`




    This property holds the format of the horizontal header..

    The default value is :attr:`QCalendarWidget.ShortDayNames<QCalendarWidget.HorizontalHeaderFormat>` .



.. method:: PySide.QtGui.QCalendarWidget.setMaximumDate(date)


    :param date: :class:`PySide.QtCore.QDate`




    This property holds the maximum date of the currently specified date range..

    The user will not be able to select a date which is after the currently set maximum date.

    +-----------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-maximum.png|
    +-----------------------------------------------------------------------------------------------------------------+
    |::                                                                                                               |
    |                                                                                                                 |
    |        calendar.setGridVisible(True)                                                                            |
    |        calendar.setMaximumDate(QDate(2006, 7, 3))                                                               |
    +-----------------------------------------------------------------------------------------------------------------+

    By default, the maximum date is the last day the :class:`PySide.QtCore.QDate` class can handle.

    When setting a maximum date, the :meth:`PySide.QtGui.QCalendarWidget.minimumDate` and :meth:`PySide.QtGui.QCalendarWidget.selectedDate` properties are adjusted if the selection range becomes invalid. If the provided date is not a valid :class:`PySide.QtCore.QDate` object, the :meth:`PySide.QtGui.QCalendarWidget.setMaximumDate` function does nothing.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateRange` 


.. method:: PySide.QtGui.QCalendarWidget.setMinimumDate(date)


    :param date: :class:`PySide.QtCore.QDate`




    This property holds the minimum date of the currently specified date range..

    The user will not be able to select a date that is before the currently set minimum date.

    +-----------------------------------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qcalendarwidget-minimum.png|
    +-----------------------------------------------------------------------------------------------------------------+
    |::                                                                                                               |
    |                                                                                                                 |
    |        calendar.setGridVisible(True)                                                                            |
    |        calendar.setMinimumDate(QDate(2006, 6, 19))                                                              |
    +-----------------------------------------------------------------------------------------------------------------+

    By default, the minimum date is the earliest date that the :class:`PySide.QtCore.QDate` class can handle.

    When setting a minimum date, the :meth:`PySide.QtGui.QCalendarWidget.maximumDate` and :meth:`PySide.QtGui.QCalendarWidget.selectedDate` properties are adjusted if the selection range becomes invalid. If the provided date is not a valid :class:`PySide.QtCore.QDate` object, the :meth:`PySide.QtGui.QCalendarWidget.setMinimumDate` function does nothing.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateRange` 


.. method:: PySide.QtGui.QCalendarWidget.setNavigationBarVisible(visible)


    :param visible: :class:`PySide.QtCore.bool`




    This property holds whether the navigation bar is shown or not.

    When this property is true (the default), the next month, previous month, month selection, year selection controls are shown on top.

    When the property is set to false, these controls are hidden.



.. method:: PySide.QtGui.QCalendarWidget.setSelectedDate(date)


    :param date: :class:`PySide.QtCore.QDate`




    This property holds the currently selected date..

    The selected date must be within the date range specified by the :meth:`PySide.QtGui.QCalendarWidget.minimumDate` and :meth:`PySide.QtGui.QCalendarWidget.maximumDate` properties. By default, the selected date is the current date.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.setDateRange` 


.. method:: PySide.QtGui.QCalendarWidget.setSelectionMode(mode)


    :param mode: :attr:`PySide.QtGui.QCalendarWidget.SelectionMode`




    This property holds the type of selection the user can make in the calendar.

    When this property is set to :attr:`SingleSelection<QCalendarWidget.SelectionMode>` , the user can select a date within the minimum and maximum allowed dates, using either the mouse or the keyboard.

    When the property is set to :attr:`NoSelection<QCalendarWidget.SelectionMode>` , the user will be unable to select dates, but they can still be selected programmatically. Note that the date that is selected when the property is set to :attr:`NoSelection<QCalendarWidget.SelectionMode>` will still be the selected date of the calendar.

    The default value is :attr:`SingleSelection<QCalendarWidget.SelectionMode>` .



.. method:: PySide.QtGui.QCalendarWidget.setVerticalHeaderFormat(format)


    :param format: :attr:`PySide.QtGui.QCalendarWidget.VerticalHeaderFormat`




    This property holds the format of the vertical header..

    The default value is QCalendarWidget::ISOWeekNumber.



.. method:: PySide.QtGui.QCalendarWidget.setWeekdayTextFormat(dayOfWeek, format)


    :param dayOfWeek: :attr:`PySide.QtCore.Qt.DayOfWeek`
    :param format: :class:`PySide.QtGui.QTextCharFormat`







.. method:: PySide.QtGui.QCalendarWidget.showNextMonth()






    Shows the next month relative to the currently displayed month. Note that the selected date is not changed.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.showPreviousMonth`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage`  :meth:`PySide.QtGui.QCalendarWidget.setSelectedDate` 


.. method:: PySide.QtGui.QCalendarWidget.showNextYear()






    Shows the currently displayed month in the *next* year relative to the currently displayed year. Note that the selected date is not changed.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.showPreviousYear`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage`  :meth:`PySide.QtGui.QCalendarWidget.setSelectedDate` 


.. method:: PySide.QtGui.QCalendarWidget.showPreviousMonth()






    Shows the previous month relative to the currently displayed month. Note that the selected date is not changed.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.showNextMonth`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage`  :meth:`PySide.QtGui.QCalendarWidget.setSelectedDate` 


.. method:: PySide.QtGui.QCalendarWidget.showPreviousYear()






    Shows the currently displayed month in the *previous* year relative to the currently displayed year. Note that the selected date is not changed.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.showNextYear`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage`  :meth:`PySide.QtGui.QCalendarWidget.setSelectedDate` 


.. method:: PySide.QtGui.QCalendarWidget.showSelectedDate()






    Shows the month of the selected date.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.selectedDate`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage` 


.. method:: PySide.QtGui.QCalendarWidget.showToday()






    Shows the month of the today's date.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.selectedDate`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage` 


.. method:: PySide.QtGui.QCalendarWidget.updateCell(date)


    :param date: :class:`PySide.QtCore.QDate`




    Updates the cell specified by the given ``date`` unless updates are disabled or the cell is hidden.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.updateCells`  :meth:`PySide.QtGui.QCalendarWidget.yearShown`  :meth:`PySide.QtGui.QCalendarWidget.monthShown` 


.. method:: PySide.QtGui.QCalendarWidget.updateCells()






    Updates all visible cells unless updates are disabled.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.updateCell` 


.. method:: PySide.QtGui.QCalendarWidget.verticalHeaderFormat()


    :rtype: :attr:`PySide.QtGui.QCalendarWidget.VerticalHeaderFormat`




    This property holds the format of the vertical header..

    The default value is QCalendarWidget::ISOWeekNumber.



.. method:: PySide.QtGui.QCalendarWidget.weekdayTextFormat(dayOfWeek)


    :param dayOfWeek: :attr:`PySide.QtCore.Qt.DayOfWeek`
    :rtype: :class:`PySide.QtGui.QTextCharFormat`







.. method:: PySide.QtGui.QCalendarWidget.yearShown()


    :rtype: :class:`PySide.QtCore.int`




    Returns the year of the currently displayed month. Months are numbered from 1 to 12.

    .. seealso::  :meth:`PySide.QtGui.QCalendarWidget.monthShown`  :meth:`PySide.QtGui.QCalendarWidget.setCurrentPage` 



