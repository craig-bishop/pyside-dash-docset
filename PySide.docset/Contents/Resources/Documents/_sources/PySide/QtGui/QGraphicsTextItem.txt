.. module:: PySide.QtGui
.. _QGraphicsTextItem:

QGraphicsTextItem
*****************

.. inheritance-diagram:: QGraphicsTextItem
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`adjustSize<PySide.QtGui.QGraphicsTextItem.adjustSize>` ()
*    def :meth:`defaultTextColor<PySide.QtGui.QGraphicsTextItem.defaultTextColor>` ()
*    def :meth:`document<PySide.QtGui.QGraphicsTextItem.document>` ()
*    def :meth:`font<PySide.QtGui.QGraphicsTextItem.font>` ()
*    def :meth:`openExternalLinks<PySide.QtGui.QGraphicsTextItem.openExternalLinks>` ()
*    def :meth:`setDefaultTextColor<PySide.QtGui.QGraphicsTextItem.setDefaultTextColor>` (c)
*    def :meth:`setDocument<PySide.QtGui.QGraphicsTextItem.setDocument>` (document)
*    def :meth:`setFont<PySide.QtGui.QGraphicsTextItem.setFont>` (font)
*    def :meth:`setHtml<PySide.QtGui.QGraphicsTextItem.setHtml>` (html)
*    def :meth:`setOpenExternalLinks<PySide.QtGui.QGraphicsTextItem.setOpenExternalLinks>` (open)
*    def :meth:`setPlainText<PySide.QtGui.QGraphicsTextItem.setPlainText>` (text)
*    def :meth:`setTabChangesFocus<PySide.QtGui.QGraphicsTextItem.setTabChangesFocus>` (b)
*    def :meth:`setTextCursor<PySide.QtGui.QGraphicsTextItem.setTextCursor>` (cursor)
*    def :meth:`setTextInteractionFlags<PySide.QtGui.QGraphicsTextItem.setTextInteractionFlags>` (flags)
*    def :meth:`setTextWidth<PySide.QtGui.QGraphicsTextItem.setTextWidth>` (width)
*    def :meth:`tabChangesFocus<PySide.QtGui.QGraphicsTextItem.tabChangesFocus>` ()
*    def :meth:`textCursor<PySide.QtGui.QGraphicsTextItem.textCursor>` ()
*    def :meth:`textInteractionFlags<PySide.QtGui.QGraphicsTextItem.textInteractionFlags>` ()
*    def :meth:`textWidth<PySide.QtGui.QGraphicsTextItem.textWidth>` ()
*    def :meth:`toHtml<PySide.QtGui.QGraphicsTextItem.toHtml>` ()
*    def :meth:`toPlainText<PySide.QtGui.QGraphicsTextItem.toPlainText>` ()


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`linkActivated<PySide.QtGui.QGraphicsTextItem.linkActivated>` (arg__1)
*    def :meth:`linkHovered<PySide.QtGui.QGraphicsTextItem.linkHovered>` (arg__1)


Detailed Description
--------------------



    The :class:`PySide.QtGui.QGraphicsTextItem` class provides a text item that you can add to a :class:`PySide.QtGui.QGraphicsScene` to display formatted text.

    If you only need to show plain text in an item, consider using :class:`PySide.QtGui.QGraphicsSimpleTextItem` instead.

    To set the item's text, pass a :class:`PySide.QtCore.QString` to :class:`PySide.QtGui.QGraphicsTextItem` 's constructor, or call :meth:`PySide.QtGui.QGraphicsTextItem.setHtml` / :meth:`PySide.QtGui.QGraphicsTextItem.setPlainText` .

    :class:`PySide.QtGui.QGraphicsTextItem` uses the text's formatted size and the associated font to provide a reasonable implementation of :meth:`PySide.QtGui.QGraphicsTextItem.boundingRect` , :meth:`PySide.QtGui.QGraphicsTextItem.shape` , and :meth:`PySide.QtGui.QGraphicsTextItem.contains` . You can set the font by calling :meth:`PySide.QtGui.QGraphicsTextItem.setFont` .

    It is possible to make the item editable by setting the :attr:`Qt.TextEditorInteraction<Qt.TextInteractionFlag>` flag using :meth:`PySide.QtGui.QGraphicsTextItem.setTextInteractionFlags` .

    The item's preferred text width can be set using :meth:`PySide.QtGui.QGraphicsTextItem.setTextWidth` and obtained using :meth:`PySide.QtGui.QGraphicsTextItem.textWidth` .

    .. note::  In order to align HTML text in the center, the item's text width must be set.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/graphicsview-textitem.png

    .. note:: \ :class:`PySide.QtGui.QGraphicsTextItem` accepts :meth:`hover events<PySide.QtGui.QGraphicsItem.acceptHoverEvents>` by default. You can change this with :meth:`PySide.QtGui.QGraphicsItem.setAcceptHoverEvents` .

    .. seealso::  :class:`PySide.QtGui.QGraphicsSimpleTextItem`  :class:`PySide.QtGui.QGraphicsPathItem`  :class:`PySide.QtGui.QGraphicsRectItem`  :class:`PySide.QtGui.QGraphicsEllipseItem`  :class:`PySide.QtGui.QGraphicsPixmapItem`  :class:`PySide.QtGui.QGraphicsPolygonItem`  :class:`PySide.QtGui.QGraphicsLineItem`  :ref:`Graphics View Framework<graphicsview.html>` 

.. class:: QGraphicsTextItem([parent=None[, scene=None]])
           QGraphicsTextItem(text[, parent=None[, scene=None]])

    :param scene: :class:`PySide.QtGui.QGraphicsScene`
    :param parent: :class:`PySide.QtGui.QGraphicsItem`
    :param text: unicode





.. method:: PySide.QtGui.QGraphicsTextItem.adjustSize()






    Adjusts the text item to a reasonable size.



.. method:: PySide.QtGui.QGraphicsTextItem.defaultTextColor()


    :rtype: :class:`PySide.QtGui.QColor`




    Returns the default text color that is used to for unformatted text.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setDefaultTextColor` 


.. method:: PySide.QtGui.QGraphicsTextItem.document()


    :rtype: :class:`PySide.QtGui.QTextDocument`




    Returns the item's text document.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setDocument` 


.. method:: PySide.QtGui.QGraphicsTextItem.font()


    :rtype: :class:`PySide.QtGui.QFont`




    Returns the item's font, which is used to render the text.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setFont` 


.. method:: PySide.QtGui.QGraphicsTextItem.linkActivated(arg__1)


    :param arg__1: unicode






.. method:: PySide.QtGui.QGraphicsTextItem.linkHovered(arg__1)


    :param arg__1: unicode






.. method:: PySide.QtGui.QGraphicsTextItem.openExternalLinks()


    :rtype: :class:`PySide.QtCore.bool`




    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setOpenExternalLinks` 


.. method:: PySide.QtGui.QGraphicsTextItem.setDefaultTextColor(c)


    :param c: :class:`PySide.QtGui.QColor`




    Sets the color for unformatted text to ``col`` .

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.defaultTextColor` 


.. method:: PySide.QtGui.QGraphicsTextItem.setDocument(document)


    :param document: :class:`PySide.QtGui.QTextDocument`




    Sets the text document ``document`` on the item.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.document` 


.. method:: PySide.QtGui.QGraphicsTextItem.setFont(font)


    :param font: :class:`PySide.QtGui.QFont`




    Sets the font used to render the text item to ``font`` .

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.font` 


.. method:: PySide.QtGui.QGraphicsTextItem.setHtml(html)


    :param html: unicode




    Sets the item's text to ``text`` , assuming that text is HTML formatted. If the item has keyboard input focus, this function will also call :meth:`PySide.QtGui.QGraphicsItem.ensureVisible` to ensure that the text is visible in all viewports.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.toHtml`  :meth:`PySide.QtGui.QGraphicsItem.hasFocus`  :class:`PySide.QtGui.QGraphicsSimpleTextItem` 


.. method:: PySide.QtGui.QGraphicsTextItem.setOpenExternalLinks(open)


    :param open: :class:`PySide.QtCore.bool`




    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.openExternalLinks` 


.. method:: PySide.QtGui.QGraphicsTextItem.setPlainText(text)


    :param text: unicode




    Sets the item's text to ``text`` . If the item has keyboard input focus, this function will also call :meth:`PySide.QtGui.QGraphicsItem.ensureVisible` to ensure that the text is visible in all viewports.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.toHtml`  :meth:`PySide.QtGui.QGraphicsItem.hasFocus` 


.. method:: PySide.QtGui.QGraphicsTextItem.setTabChangesFocus(b)


    :param b: :class:`PySide.QtCore.bool`




    If ``b`` is true, the **Tab** key will cause the widget to change focus; otherwise, the tab key will insert a tab into the document.

    In some occasions text edits should not allow the user to input tabulators or change indentation using the **Tab** key, as this breaks the focus chain. The default is false.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.tabChangesFocus`  :attr:`ItemIsFocusable<QGraphicsItem.GraphicsItemFlag>`  :meth:`PySide.QtGui.QGraphicsTextItem.textInteractionFlags` 


.. method:: PySide.QtGui.QGraphicsTextItem.setTextCursor(cursor)


    :param cursor: :class:`PySide.QtGui.QTextCursor`




    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.textCursor` 


.. method:: PySide.QtGui.QGraphicsTextItem.setTextInteractionFlags(flags)


    :param flags: :class:`PySide.QtCore.Qt.TextInteractionFlags`







.. method:: PySide.QtGui.QGraphicsTextItem.setTextWidth(width)


    :param width: :class:`PySide.QtCore.qreal`




    Sets the preferred width for the item's text. If the actual text is wider than the specified width then it will be broken into multiple lines.

    If ``width`` is set to -1 then the text will not be broken into multiple lines unless it is enforced through an explicit line break or a new paragraph.

    The default value is -1.

    Note that :class:`PySide.QtGui.QGraphicsTextItem` keeps a :class:`PySide.QtGui.QTextDocument` internally, which is used to calculate the text width.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.textWidth`  :meth:`QTextDocument.setTextWidth()<PySide.QtGui.QTextDocument.setTextWidth>` 


.. method:: PySide.QtGui.QGraphicsTextItem.tabChangesFocus()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the **Tab** key will cause the widget to change focus; otherwise, false is returned.

    By default, this behavior is disabled, and this function will return false.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setTabChangesFocus` 


.. method:: PySide.QtGui.QGraphicsTextItem.textCursor()


    :rtype: :class:`PySide.QtGui.QTextCursor`




    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setTextCursor` 


.. method:: PySide.QtGui.QGraphicsTextItem.textInteractionFlags()


    :rtype: :class:`PySide.QtCore.Qt.TextInteractionFlags`




    Returns the current text interaction flags.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setTextInteractionFlags` 


.. method:: PySide.QtGui.QGraphicsTextItem.textWidth()


    :rtype: :class:`PySide.QtCore.qreal`




    Returns the text width.

    The width is calculated with the :class:`PySide.QtGui.QTextDocument` that :class:`PySide.QtGui.QGraphicsTextItem` keeps internally.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setTextWidth`  :meth:`QTextDocument.textWidth()<PySide.QtGui.QTextDocument.textWidth>` 


.. method:: PySide.QtGui.QGraphicsTextItem.toHtml()


    :rtype: unicode




    Returns the item's text converted to HTML, or an empty :class:`PySide.QtCore.QString` if no text has been set.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setHtml` 


.. method:: PySide.QtGui.QGraphicsTextItem.toPlainText()


    :rtype: unicode




    Returns the item's text converted to plain text, or an empty :class:`PySide.QtCore.QString` if no text has been set.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsTextItem.setPlainText` 



