.. module:: PySide.QtGui
.. _QGraphicsLineItem:

QGraphicsLineItem
*****************

.. inheritance-diagram:: QGraphicsLineItem
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`line<PySide.QtGui.QGraphicsLineItem.line>` ()
*    def :meth:`pen<PySide.QtGui.QGraphicsLineItem.pen>` ()
*    def :meth:`setLine<PySide.QtGui.QGraphicsLineItem.setLine>` (line)
*    def :meth:`setLine<PySide.QtGui.QGraphicsLineItem.setLine>` (x1, y1, x2, y2)
*    def :meth:`setPen<PySide.QtGui.QGraphicsLineItem.setPen>` (pen)


Detailed Description
--------------------



    The :class:`PySide.QtGui.QGraphicsLineItem` class provides a line item that you can add to a :class:`PySide.QtGui.QGraphicsScene` .

    To set the item's line, pass a :class:`PySide.QtCore.QLineF` to :class:`PySide.QtGui.QGraphicsLineItem` 's constructor, or call the :meth:`PySide.QtGui.QGraphicsLineItem.setLine` function. The :meth:`PySide.QtGui.QGraphicsLineItem.line` function returns the current line. By default the line is black with a width of 0, but you can change this by calling :meth:`PySide.QtGui.QGraphicsLineItem.setPen` .

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/graphicsview-lineitem.png

    :class:`PySide.QtGui.QGraphicsLineItem` uses the line and the pen width to provide a reasonable implementation of :meth:`PySide.QtGui.QGraphicsLineItem.boundingRect` , :meth:`PySide.QtGui.QGraphicsLineItem.shape` , and :meth:`PySide.QtGui.QGraphicsLineItem.contains` . The :meth:`PySide.QtGui.QGraphicsLineItem.paint` function draws the line using the item's associated pen.

    .. seealso::  :class:`PySide.QtGui.QGraphicsPathItem`  :class:`PySide.QtGui.QGraphicsRectItem`  :class:`PySide.QtGui.QGraphicsEllipseItem`  :class:`PySide.QtGui.QGraphicsTextItem`  :class:`PySide.QtGui.QGraphicsPolygonItem`  :class:`PySide.QtGui.QGraphicsPixmapItem`  :ref:`Graphics View Framework<graphicsview.html>` 

.. class:: QGraphicsLineItem([parent=None[, scene=None]])
           QGraphicsLineItem(line[, parent=None[, scene=None]])
           QGraphicsLineItem(x1, y1, x2, y2[, parent=None[, scene=None]])

    :param line: :class:`PySide.QtCore.QLineF`
    :param scene: :class:`PySide.QtGui.QGraphicsScene`
    :param parent: :class:`PySide.QtGui.QGraphicsItem`
    :param y1: :class:`PySide.QtCore.qreal`
    :param x1: :class:`PySide.QtCore.qreal`
    :param y2: :class:`PySide.QtCore.qreal`
    :param x2: :class:`PySide.QtCore.qreal`







.. method:: PySide.QtGui.QGraphicsLineItem.line()


    :rtype: :class:`PySide.QtCore.QLineF`




    Returns the item's line, or a null line if no line has been set.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsLineItem.setLine` 


.. method:: PySide.QtGui.QGraphicsLineItem.pen()


    :rtype: :class:`PySide.QtGui.QPen`




    Returns the item's pen, or a black solid 0-width pen if no pen has been set.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsLineItem.setPen` 


.. method:: PySide.QtGui.QGraphicsLineItem.setLine(x1, y1, x2, y2)


    :param x1: :class:`PySide.QtCore.qreal`
    :param y1: :class:`PySide.QtCore.qreal`
    :param x2: :class:`PySide.QtCore.qreal`
    :param y2: :class:`PySide.QtCore.qreal`




    This is an overloaded function.

    Sets the item's line to be the line between (``x1`` , ``y1`` ) and (``x2`` , ``y2`` ).

    This is the same as calling ``setLine(QLineF(x1, y1, x2, y2))`` .



.. method:: PySide.QtGui.QGraphicsLineItem.setLine(line)


    :param line: :class:`PySide.QtCore.QLineF`




    Sets the item's line to be the given ``line`` .

    .. seealso::  :meth:`PySide.QtGui.QGraphicsLineItem.line` 


.. method:: PySide.QtGui.QGraphicsLineItem.setPen(pen)


    :param pen: :class:`PySide.QtGui.QPen`




    Sets the item's pen to ``pen`` . If no pen is set, the line will be painted using a black solid 0-width pen.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsLineItem.pen` 



