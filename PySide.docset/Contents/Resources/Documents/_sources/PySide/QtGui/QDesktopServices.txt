.. module:: PySide.QtGui
.. _QDesktopServices:

QDesktopServices
****************

.. inheritance-diagram:: QDesktopServices
    :parts: 2

Synopsis
--------

Static functions
^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`displayName<PySide.QtGui.QDesktopServices.displayName>` (type)
*    def :meth:`openUrl<PySide.QtGui.QDesktopServices.openUrl>` (url)
*    def :meth:`setUrlHandler<PySide.QtGui.QDesktopServices.setUrlHandler>` (scheme, receiver, method)
*    def :meth:`storageLocation<PySide.QtGui.QDesktopServices.storageLocation>` (type)
*    def :meth:`unsetUrlHandler<PySide.QtGui.QDesktopServices.unsetUrlHandler>` (scheme)


Detailed Description
--------------------



    The :class:`PySide.QtGui.QDesktopServices` class provides methods for accessing common desktop services.

    Many desktop environments provide services that can be used by applications to perform common tasks, such as opening a web page, in a way that is both consistent and takes into account the user's application preferences.

    This class contains functions that provide simple interfaces to these services that indicate whether they succeeded or failed.

    The :meth:`PySide.QtGui.QDesktopServices.openUrl` function is used to open files located at arbitrary URLs in external applications. For URLs that correspond to resources on the local filing system (where the URL scheme is "file"), a suitable application will be used to open the file; otherwise, a web browser will be used to fetch and display the file.

    The user's desktop settings control whether certain executable file types are opened for browsing, or if they are executed instead. Some desktop environments are configured to prevent users from executing files obtained from non-local URLs, or to ask the user's permission before doing so.

    .. _PySide.QtGui.QDesktopServices_url-handlers:



URL Handlers
^^^^^^^^^^^^

    The behavior of the :meth:`PySide.QtGui.QDesktopServices.openUrl` function can be customized for individual URL schemes to allow applications to override the default handling behavior for certain types of URLs.

    The dispatch mechanism allows only one custom handler to be used for each URL scheme; this is set using the :meth:`PySide.QtGui.QDesktopServices.setUrlHandler` function. Each handler is implemented as a slot which accepts only a single :class:`PySide.QtCore.QUrl` argument.

    The existing handlers for each scheme can be removed with the :meth:`PySide.QtGui.QDesktopServices.unsetUrlHandler` function. This returns the handling behavior for the given scheme to the default behavior.

    This system makes it easy to implement a help system, for example. Help could be provided in labels and text browsers using **help://myapplication/mytopic** URLs, and by registering a handler it becomes possible to display the help text inside the application:

    ::

        def showHelp(url):
            # ...
            pass

        QDesktopServices.setUrlHandler("help", showHelp);


    If inside the handler you decide that you can't open the requested URL, you can just call :meth:`QDesktopServices.openUrl()<PySide.QtGui.QDesktopServices.openUrl>` again with the same argument, and it will try to open the URL using the appropriate mechanism for the user's desktop environment.

    .. seealso::  :class:`PySide.QtGui.QSystemTrayIcon`  :class:`PySide.QtCore.QProcess` 

.. class:: QDesktopServices()




.. attribute:: PySide.QtGui.QDesktopServices.StandardLocation

    This enum describes the different locations that can be queried by QDesktopServices::storageLocation and QDesktopServices::displayName.

    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |Constant                             |Description                                                                                                                                                                                                                                                                                        |
    +=====================================+===================================================================================================================================================================================================================================================================================================+
    |QDesktopServices.DesktopLocation     |Returns the user's desktop directory.                                                                                                                                                                                                                                                              |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.DocumentsLocation   |Returns the user's document.                                                                                                                                                                                                                                                                       |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.FontsLocation       |Returns the user's fonts.                                                                                                                                                                                                                                                                          |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.ApplicationsLocation|Returns the user's applications.                                                                                                                                                                                                                                                                   |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.MusicLocation       |Returns the users music.                                                                                                                                                                                                                                                                           |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.MoviesLocation      |Returns the user's movies.                                                                                                                                                                                                                                                                         |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.PicturesLocation    |Returns the user's pictures.                                                                                                                                                                                                                                                                       |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.TempLocation        |Returns the system's temporary directory.                                                                                                                                                                                                                                                          |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.HomeLocation        |Returns the user's home directory.                                                                                                                                                                                                                                                                 |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.DataLocation        |Returns a directory location where persistent application data can be stored. :meth:`QCoreApplication.applicationName<PySide.QtCore.QCoreApplication.applicationName>` and :meth:`QCoreApplication.organizationName<PySide.QtCore.QCoreApplication.organizationName>` should work on all platforms.|
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QDesktopServices.CacheLocation       |Returns a directory location where user-specific non-essential (cached) data should be written.                                                                                                                                                                                                    |
    +-------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

    .. seealso::  :meth:`PySide.QtGui.QDesktopServices.storageLocation`  :meth:`PySide.QtGui.QDesktopServices.displayName` 

.. staticmethod:: PySide.QtGui.QDesktopServices.displayName(type)


    :param type: :attr:`PySide.QtGui.QDesktopServices.StandardLocation`
    :rtype: unicode




    Returns a localized display name for the given location ``type`` or an empty :class:`PySide.QtCore.QString` if no relevant location can be found.



.. staticmethod:: PySide.QtGui.QDesktopServices.openUrl(url)


    :param url: :class:`PySide.QtCore.QUrl`
    :rtype: :class:`PySide.QtCore.bool`




    Opens the given ``url`` in the appropriate Web browser for the user's desktop environment, and returns true if successful; otherwise returns false.

    If the URL is a reference to a local file (i.e., the URL scheme is "file") then it will be opened with a suitable application instead of a Web browser.

    The following example opens a file on the Windows file system residing on a path that contains spaces:

    ::

        QDesktopServices.openUrl(QUrl("file:///C:/Documents and Settings/All Users/Desktop", QUrl.TolerantMode))


    If a ``mailto`` URL is specified, the user's e-mail client will be used to open a composer window containing the options specified in the URL, similar to the way ``mailto`` links are handled by a Web browser.

    For example, the following URL contains a recipient (``user@foo.com`` ), a subject (``Test`` ), and a message body (``Just a test`` ):

    ::

        mailto:user@foo.com?subject=Test&body=Just a test


    .. warning::  Although many e-mail clients can send attachments and are Unicode-aware, the user may have configured their client without these features. Also, certain e-mail clients (e.g., Lotus Notes) have problems with long URLs.

    .. seealso::  :meth:`PySide.QtGui.QDesktopServices.setUrlHandler` 


.. staticmethod:: PySide.QtGui.QDesktopServices.setUrlHandler(scheme, receiver, method)


    :param scheme: unicode
    :param receiver: :class:`PySide.QtCore.QObject`
    :param method: str




    Sets the handler for the given ``scheme`` to be the handler ``method`` provided by the ``receiver`` object.

    This function provides a way to customize the behavior of :meth:`PySide.QtGui.QDesktopServices.openUrl` . If :meth:`PySide.QtGui.QDesktopServices.openUrl` is called with a URL with the specified ``scheme`` then the given ``method`` on the ``receiver`` object is called instead of :class:`PySide.QtGui.QDesktopServices` launching an external application.

    The provided method must be implemented as a slot that only accepts a single :class:`PySide.QtCore.QUrl` argument.

    If :meth:`PySide.QtGui.QDesktopServices.setUrlHandler` is used to set a new handler for a scheme which already has a handler, the existing handler is simply replaced with the new one. Since :class:`PySide.QtGui.QDesktopServices` does not take ownership of handlers, no objects are deleted when a handler is replaced.

    Note that the handler will always be called from within the same thread that calls :meth:`QDesktopServices.openUrl()<PySide.QtGui.QDesktopServices.openUrl>` .

    .. seealso::  :meth:`PySide.QtGui.QDesktopServices.openUrl`  :meth:`PySide.QtGui.QDesktopServices.unsetUrlHandler` 


.. staticmethod:: PySide.QtGui.QDesktopServices.storageLocation(type)


    :param type: :attr:`PySide.QtGui.QDesktopServices.StandardLocation`
    :rtype: unicode




    Returns the default system directory where files of ``type`` belong, or an empty string if the location cannot be determined.

    .. note::  The storage location returned can be a directory that does not exist; i.e., it may need to be created by the system or the user.

    .. note::  On Symbian OS, :attr:`ApplicationsLocation<QDesktopServices.StandardLocation>` always point /sys/bin folder on the same drive with executable. :attr:`FontsLocation<QDesktopServices.StandardLocation>` always points to folder on ROM drive. Symbian OS does not have desktop concept, :attr:`DesktopLocation<QDesktopServices.StandardLocation>` returns same path as :attr:`DocumentsLocation<QDesktopServices.StandardLocation>` . Rest of the standard locations point to folder on same drive with executable, except that if executable is in ROM the folder from C drive is returned.



.. staticmethod:: PySide.QtGui.QDesktopServices.unsetUrlHandler(scheme)


    :param scheme: unicode




    Removes a previously set URL handler for the specified ``scheme`` .

    .. seealso::  :meth:`PySide.QtGui.QDesktopServices.setUrlHandler` 



