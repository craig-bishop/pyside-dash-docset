.. module:: PySide.QtGui
.. _QStyleOptionProgressBarV2:

QStyleOptionProgressBarV2
*************************

.. inheritance-diagram:: QStyleOptionProgressBarV2
    :parts: 2

Detailed Description
--------------------



    The :class:`PySide.QtGui.QStyleOptionProgressBarV2` class is used to describe the parameters necessary for drawing a progress bar in Qt 4.1 or above.

    An instance of this class has :ref:`type<qstyleoption.html#type-var>` :attr:`SO_ProgressBar<QStyleOption.OptionType>` and :ref:`version<qstyleoption.html#version-var>` 2.

    The type is used internally by :class:`PySide.QtGui.QStyleOption` , its subclasses, and :meth:`~PySide.QtGui.QStyleOptionProgressBarV2.qstyleoption\_cast` to determine the type of style option. In general you do not need to worry about this unless you want to create your own :class:`PySide.QtGui.QStyleOption` subclass and your own styles. The version is used by :class:`PySide.QtGui.QStyleOption` subclasses to implement extensions without breaking compatibility. If you use :meth:`~PySide.QtGui.QStyleOptionProgressBarV2.qstyleoption\_cast` , you normally do not need to check it.

    If you create your own :class:`PySide.QtGui.QStyle` subclass, you should handle both :class:`PySide.QtGui.QStyleOptionProgressBar` and :class:`PySide.QtGui.QStyleOptionProgressBarV2` . One way to achieve this is to use the :class:`PySide.QtGui.QStyleOptionProgressBarV2` copy constructor. For example:

    ::

            if isinstance(option, QStyleOptionProgressBarV2):
                progressBarV2 = QStyleOptionProgressBarV2(option)

                # draw the progress bar using progressBarV2



    In the example above: If the ``progressBarOption`` 's version is 1, the extra members ( :ref:`orientation<qstyleoptionprogressbarv2.html#orientation-var>` , :ref:`invertedAppearance<qstyleoptionprogressbarv2.html#invertedAppearance-var>` , and :ref:`bottomToTop<qstyleoptionprogressbarv2.html#bottomToTop-var>` ) are set to default values for ``progressBarV2`` . If the ``progressBarOption`` 's version is 2, the constructor will simply copy the extra members to progressBarV2.

    For an example demonstrating how style options can be used, see the :ref:`Styles<widgets/styles>` example.

    .. seealso::  :class:`PySide.QtGui.QStyleOptionProgressBar`  :class:`PySide.QtGui.QStyleOption` 

.. class:: QStyleOptionProgressBarV2()
           QStyleOptionProgressBarV2(other)
           QStyleOptionProgressBarV2(other)
           QStyleOptionProgressBarV2(version)

    :param version: :class:`PySide.QtCore.int`
    :param other: :class:`PySide.QtGui.QStyleOptionProgressBar`

    Constructs a :class:`PySide.QtGui.QStyleOptionProgressBarV2` , initializing he members variables to their default values.


    Constructs a copy of the ``other`` style option which can be either of the :class:`PySide.QtGui.QStyleOptionProgressBar` and :class:`PySide.QtGui.QStyleOptionProgressBarV2` types.

    If the ``other`` style option's version is 1, the extra members ( :ref:`orientation<qstyleoptionprogressbarv2.html#orientation-var>` , :ref:`invertedAppearance<qstyleoptionprogressbarv2.html#invertedAppearance-var>` , and :ref:`bottomToTop<qstyleoptionprogressbarv2.html#bottomToTop-var>` ) are set to default values for the new style option. If ``other`` 's version is 2, the extra members are simply copied.

    .. seealso::  :ref:`version<qstyleoption.html#version-var>` 

    Constructs a copy of the ``other`` style option.



.. attribute:: PySide.QtGui.QStyleOptionProgressBarV2.StyleOptionVersion

    This enum is used to hold information about the version of the style option, and is defined for each :class:`PySide.QtGui.QStyleOption` subclass.

    +---------------------------------+-----------+
    |Constant                         |Description|
    +=================================+===========+
    |QStyleOptionProgressBarV2.Version|2          |
    +---------------------------------+-----------+

    The version is used by :class:`PySide.QtGui.QStyleOption` subclasses to implement extensions without breaking compatibility. If you use :meth:`~PySide.QtGui.QStyleOptionProgressBarV2.qstyleoption\_cast` , you normally do not need to check it.

    .. seealso::  :attr:`QStyleOptionProgressBarV2.StyleOptionType` 

.. attribute:: PySide.QtGui.QStyleOptionProgressBarV2.StyleOptionType

    This enum is used to hold information about the type of the style option, and is defined for each :class:`PySide.QtGui.QStyleOption` subclass.

    +------------------------------+----------------------------------------------------------------------------------------------------+
    |Constant                      |Description                                                                                         |
    +==============================+====================================================================================================+
    |QStyleOptionProgressBarV2.Type|The type of style option provided ( :attr:`SO_ProgressBar<QStyleOption.OptionType>` for this class).|
    +------------------------------+----------------------------------------------------------------------------------------------------+

    The type is used internally by :class:`PySide.QtGui.QStyleOption` , its subclasses, and :meth:`~PySide.QtGui.QStyleOptionProgressBarV2.qstyleoption\_cast` to determine the type of style option. In general you do not need to worry about this unless you want to create your own :class:`PySide.QtGui.QStyleOption` subclass and your own styles.

    .. seealso::  :attr:`QStyleOptionProgressBarV2.StyleOptionVersion` 

.. attribute:: PySide.QtGui.QStyleOptionProgressBarV2.bottomToTop


.. attribute:: PySide.QtGui.QStyleOptionProgressBarV2.invertedAppearance


.. attribute:: PySide.QtGui.QStyleOptionProgressBarV2.orientation



