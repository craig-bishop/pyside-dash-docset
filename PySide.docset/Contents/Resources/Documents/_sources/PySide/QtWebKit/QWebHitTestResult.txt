.. module:: PySide.QtWebKit
.. _QWebHitTestResult:

QWebHitTestResult
*****************

.. inheritance-diagram:: QWebHitTestResult
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`alternateText<PySide.QtWebKit.QWebHitTestResult.alternateText>` ()
*    def :meth:`boundingRect<PySide.QtWebKit.QWebHitTestResult.boundingRect>` ()
*    def :meth:`element<PySide.QtWebKit.QWebHitTestResult.element>` ()
*    def :meth:`enclosingBlockElement<PySide.QtWebKit.QWebHitTestResult.enclosingBlockElement>` ()
*    def :meth:`frame<PySide.QtWebKit.QWebHitTestResult.frame>` ()
*    def :meth:`imageUrl<PySide.QtWebKit.QWebHitTestResult.imageUrl>` ()
*    def :meth:`isContentEditable<PySide.QtWebKit.QWebHitTestResult.isContentEditable>` ()
*    def :meth:`isContentSelected<PySide.QtWebKit.QWebHitTestResult.isContentSelected>` ()
*    def :meth:`isNull<PySide.QtWebKit.QWebHitTestResult.isNull>` ()
*    def :meth:`linkElement<PySide.QtWebKit.QWebHitTestResult.linkElement>` ()
*    def :meth:`linkTargetFrame<PySide.QtWebKit.QWebHitTestResult.linkTargetFrame>` ()
*    def :meth:`linkText<PySide.QtWebKit.QWebHitTestResult.linkText>` ()
*    def :meth:`linkTitle<PySide.QtWebKit.QWebHitTestResult.linkTitle>` ()
*    def :meth:`linkUrl<PySide.QtWebKit.QWebHitTestResult.linkUrl>` ()
*    def :meth:`pixmap<PySide.QtWebKit.QWebHitTestResult.pixmap>` ()
*    def :meth:`pos<PySide.QtWebKit.QWebHitTestResult.pos>` ()
*    def :meth:`title<PySide.QtWebKit.QWebHitTestResult.title>` ()


Detailed Description
--------------------



    The :class:`PySide.QtWebKit.QWebHitTestResult` class provides information about the web page content after a hit test.

    :class:`PySide.QtWebKit.QWebHitTestResult` is returned by :meth:`QWebFrame.hitTestContent()<PySide.QtWebKit.QWebFrame.hitTestContent>` to provide information about the content of the web page at the specified position.


.. class:: QWebHitTestResult()
           QWebHitTestResult(other)

    :param other: :class:`PySide.QtWebKit.QWebHitTestResult`

    Constructs a null hit test result.


    Constructs a hit test result from ``other`` .


.. method:: PySide.QtWebKit.QWebHitTestResult.alternateText()


    :rtype: unicode




    Returns the alternate text of the element. This corresponds to the HTML alt attribute.



.. method:: PySide.QtWebKit.QWebHitTestResult.boundingRect()


    :rtype: :class:`PySide.QtCore.QRect`




    Returns the bounding rect of the element.



.. method:: PySide.QtWebKit.QWebHitTestResult.element()


    :rtype: :class:`PySide.QtWebKit.QWebElement`




    Returns the underlying DOM element as :class:`PySide.QtWebKit.QWebElement` .



.. method:: PySide.QtWebKit.QWebHitTestResult.enclosingBlockElement()


    :rtype: :class:`PySide.QtWebKit.QWebElement`




    Returns the block element that encloses the element hit.

    A block element is an element that is rendered using the CSS "block" style. This includes for example text paragraphs.



.. method:: PySide.QtWebKit.QWebHitTestResult.frame()


    :rtype: :class:`PySide.QtWebKit.QWebFrame`




    Returns the frame the hit test was executed in.



.. method:: PySide.QtWebKit.QWebHitTestResult.imageUrl()


    :rtype: :class:`PySide.QtCore.QUrl`




    Returns the url of the image.



.. method:: PySide.QtWebKit.QWebHitTestResult.isContentEditable()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the content is editable by the user; otherwise returns false.



.. method:: PySide.QtWebKit.QWebHitTestResult.isContentSelected()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the content tested is part of the selection; otherwise returns false.



.. method:: PySide.QtWebKit.QWebHitTestResult.isNull()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the hit test result is null; otherwise returns false.



.. method:: PySide.QtWebKit.QWebHitTestResult.linkElement()


    :rtype: :class:`PySide.QtWebKit.QWebElement`




    Returns the element that represents the link.

    .. seealso::  :meth:`PySide.QtWebKit.QWebHitTestResult.linkTargetFrame` 


.. method:: PySide.QtWebKit.QWebHitTestResult.linkTargetFrame()


    :rtype: :class:`PySide.QtWebKit.QWebFrame`




    Returns the frame that will load the link if it is activated.

    .. seealso::  :meth:`PySide.QtWebKit.QWebHitTestResult.linkElement` 


.. method:: PySide.QtWebKit.QWebHitTestResult.linkText()


    :rtype: unicode




    Returns the text of the link.



.. method:: PySide.QtWebKit.QWebHitTestResult.linkTitle()


    :rtype: :class:`PySide.QtCore.QUrl`




    Returns the title of the link.



.. method:: PySide.QtWebKit.QWebHitTestResult.linkUrl()


    :rtype: :class:`PySide.QtCore.QUrl`




    Returns the url to which the link points to.



.. method:: PySide.QtWebKit.QWebHitTestResult.pixmap()


    :rtype: :class:`PySide.QtGui.QPixmap`




    Returns a :class:`PySide.QtGui.QPixmap` containing the image. A null pixmap is returned if the element being tested is not an image.



.. method:: PySide.QtWebKit.QWebHitTestResult.pos()


    :rtype: :class:`PySide.QtCore.QPoint`




    Returns the position where the hit test occured.



.. method:: PySide.QtWebKit.QWebHitTestResult.title()


    :rtype: unicode




    Returns the title of the nearest enclosing HTML element.




