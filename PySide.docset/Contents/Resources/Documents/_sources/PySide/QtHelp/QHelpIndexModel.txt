.. module:: PySide.QtHelp
.. _QHelpIndexModel:

QHelpIndexModel
***************

.. inheritance-diagram:: QHelpIndexModel
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`createIndex<PySide.QtHelp.QHelpIndexModel.createIndex>` (customFilterName)
*    def :meth:`filter<PySide.QtHelp.QHelpIndexModel.filter>` (filter[, wildcard=""])
*    def :meth:`isCreatingIndex<PySide.QtHelp.QHelpIndexModel.isCreatingIndex>` ()
*    def :meth:`linksForKeyword<PySide.QtHelp.QHelpIndexModel.linksForKeyword>` (keyword)


Slots
^^^^^
.. container:: function_list

*    def :meth:`insertIndices<PySide.QtHelp.QHelpIndexModel.insertIndices>` ()
*    def :meth:`invalidateIndex<PySide.QtHelp.QHelpIndexModel.invalidateIndex>` ([onShutDown=false])


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`indexCreated<PySide.QtHelp.QHelpIndexModel.indexCreated>` ()
*    def :meth:`indexCreationStarted<PySide.QtHelp.QHelpIndexModel.indexCreationStarted>` ()


Detailed Description
--------------------



    The :class:`PySide.QtHelp.QHelpIndexModel` class provides a model that supplies index keywords to views.




.. method:: PySide.QtHelp.QHelpIndexModel.createIndex(customFilterName)


    :param customFilterName: unicode




    Creates a new index by querying the help system for keywords for the specified ``customFilterName`` .



.. method:: PySide.QtHelp.QHelpIndexModel.filter(filter[, wildcard=""])


    :param filter: unicode
    :param wildcard: unicode
    :rtype: :class:`PySide.QtCore.QModelIndex`




    Filters the indices and returns the model index of the best matching keyword. In a first step, only the keywords containing ``filter`` are kept in the model's index list. Analogously, if ``wildcard`` is not empty, only the keywords matched are left in the index list. In a second step, the best match is determined and its index model returned. When specifying a wildcard expression, the ``filter`` string is used to search for the best match.



.. method:: PySide.QtHelp.QHelpIndexModel.indexCreated()








.. method:: PySide.QtHelp.QHelpIndexModel.indexCreationStarted()








.. method:: PySide.QtHelp.QHelpIndexModel.insertIndices()








.. method:: PySide.QtHelp.QHelpIndexModel.invalidateIndex([onShutDown=false])


    :param onShutDown: :class:`PySide.QtCore.bool`






.. method:: PySide.QtHelp.QHelpIndexModel.isCreatingIndex()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the index is currently built up, otherwise false.



.. method:: PySide.QtHelp.QHelpIndexModel.linksForKeyword(keyword)


    :param keyword: unicode
    :rtype: 




    Returns all hits found for the ``keyword`` . A hit consists of the URL and the document title.




