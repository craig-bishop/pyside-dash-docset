.. module:: PySide.QtCore
.. _QLibraryInfo:

QLibraryInfo
************

.. inheritance-diagram:: QLibraryInfo
    :parts: 2

Synopsis
--------

Static functions
^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`buildDate<PySide.QtCore.QLibraryInfo.buildDate>` ()
*    def :meth:`buildKey<PySide.QtCore.QLibraryInfo.buildKey>` ()
*    def :meth:`licensedProducts<PySide.QtCore.QLibraryInfo.licensedProducts>` ()
*    def :meth:`licensee<PySide.QtCore.QLibraryInfo.licensee>` ()
*    def :meth:`location<PySide.QtCore.QLibraryInfo.location>` (arg__1)


Detailed Description
--------------------



    The :class:`PySide.QtCore.QLibraryInfo` class provides information about the Qt library.

    Many pieces of information are established when Qt is configured. Installation paths, license information, and even a unique build key. This class provides an abstraction for accessing this information.

    +-------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |Function                                                                                         |Return value                                                                                                                                                         |
    +-------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |:meth:`PySide.QtCore.QLibraryInfo.buildKey`                                                      |A string that identifies the Qt version and the configuration. This key is used to ensure that :ref:`plugins` link against the same version of Qt as the application.|
    +-------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |:meth:`PySide.QtCore.QLibraryInfo.location`                                                      |The path to a certain Qt component (e.g., documentation, header files).                                                                                              |
    +-------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |:meth:`PySide.QtCore.QLibraryInfo.licensee` , :meth:`PySide.QtCore.QLibraryInfo.licensedProducts`|Licensing information.                                                                                                                                               |
    +-------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+

    You can also use a ``qt.conf`` file to override the hard-coded paths that are compiled into the Qt library. For more information, see the :ref:`Using qt.conf<qt-conf.html>` documentation.

    .. seealso::  :class:`PySide.QtCore.QSysInfo`  :ref:`Using qt.conf<qt-conf.html>` 



.. attribute:: PySide.QtCore.QLibraryInfo.LibraryLocation

    This enum type is used to specify a specific location specifier:

    +------------------------------+---------------------------------------------------------------+
    |Constant                      |Description                                                    |
    +==============================+===============================================================+
    |QLibraryInfo.PrefixPath       |The default prefix for all paths.                              |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.DocumentationPath|The location for documentation upon install.                   |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.HeadersPath      |The location for all headers.                                  |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.LibrariesPath    |The location of installed libraries.                           |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.BinariesPath     |The location of installed Qt binaries (tools and applications).|
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.PluginsPath      |The location of installed Qt plugins.                          |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.ImportsPath      |The location of installed QML extensions to import.            |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.DataPath         |The location of general Qt data.                               |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.TranslationsPath |The location of translation information for Qt strings.        |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.SettingsPath     |The location for Qt settings.                                  |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.ExamplesPath     |The location for examples upon install.                        |
    +------------------------------+---------------------------------------------------------------+
    |QLibraryInfo.DemosPath        |The location for demos upon install.                           |
    +------------------------------+---------------------------------------------------------------+

    .. seealso::  :meth:`PySide.QtCore.QLibraryInfo.location` 

.. staticmethod:: PySide.QtCore.QLibraryInfo.buildDate()


    :rtype: :class:`PySide.QtCore.QDate`




    Returns the installation date for this build of Qt. The install date will usually be the last time that Qt sources were configured.



.. staticmethod:: PySide.QtCore.QLibraryInfo.buildKey()


    :rtype: unicode




    Returns a unique key identifying this build of Qt and its configurations. This key is not globally unique, rather only useful for establishing of two configurations are compatible. This can be used to compare with the ``QT_BUILD_KEY`` preprocessor symbol.

    .. seealso::  :meth:`PySide.QtCore.QLibraryInfo.location` 


.. staticmethod:: PySide.QtCore.QLibraryInfo.licensedProducts()


    :rtype: unicode




    Returns the products that the license for this build of Qt has access to.

    .. seealso::  :meth:`PySide.QtCore.QLibraryInfo.licensee` 


.. staticmethod:: PySide.QtCore.QLibraryInfo.licensee()


    :rtype: unicode




    Returns the person to whom this build of Qt is licensed.

    .. seealso::  :meth:`PySide.QtCore.QLibraryInfo.licensedProducts` 


.. staticmethod:: PySide.QtCore.QLibraryInfo.location(arg__1)


    :param arg__1: :attr:`PySide.QtCore.QLibraryInfo.LibraryLocation`
    :rtype: unicode




    Returns the location specified by ``loc`` .




