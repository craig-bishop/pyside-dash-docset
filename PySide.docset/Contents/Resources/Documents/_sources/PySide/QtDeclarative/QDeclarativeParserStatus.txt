.. module:: PySide.QtDeclarative
.. _QDeclarativeParserStatus:

QDeclarativeParserStatus
************************

.. inheritance-diagram:: QDeclarativeParserStatus
    :parts: 2

**Inherited by:** :ref:`QDeclarativeItem`

Detailed Description
--------------------



    The :class:`PySide.QtDeclarative.QDeclarativeParserStatus` class provides updates on the QML parser state.

    :class:`PySide.QtDeclarative.QDeclarativeParserStatus` provides a mechanism for classes instantiated by a :class:`PySide.QtDeclarative.QDeclarativeEngine` to receive notification at key points in their creation.

    This class is often used for optimization purposes, as it allows you to defer an expensive operation until after all the properties have been set on an object. For example, QML's :ref:`Text` element uses the parser status to defer text layout until all of its properties have been set (we don't want to layout when the ``text`` is assigned, and then relayout when the ``font`` is assigned, and relayout again when the ``width`` is assigned, and so on).

    To use :class:`PySide.QtDeclarative.QDeclarativeParserStatus` , you must inherit both a :class:`PySide.QtCore.QObject` -derived class and :class:`PySide.QtDeclarative.QDeclarativeParserStatus` , and use the :meth:`~PySide.QtDeclarative.QDeclarativeParserStatus.Q\_INTERFACES` macro.

    ::

                class MyObject : public QObject, public QDeclarativeParserStatus
                {
                    Q_OBJECT
                    Q_INTERFACES(QDeclarativeParserStatus)
                
                public:
                    MyObject(QObject *parent = 0);
                    ...
                    void classBegin();
                    void componentComplete();
                }



.. class:: QDeclarativeParserStatus()



.. method:: PySide.QtDeclarative.QDeclarativeParserStatus.classBegin()






    Invoked after class creation, but before any properties have been set.



.. method:: PySide.QtDeclarative.QDeclarativeParserStatus.componentComplete()






    Invoked after the root component that caused this instantiation has completed construction. At this point all static values and binding values have been assigned to the class.




