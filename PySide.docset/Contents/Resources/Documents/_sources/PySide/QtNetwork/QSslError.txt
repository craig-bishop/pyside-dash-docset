.. module:: PySide.QtNetwork
.. _QSslError:

QSslError
*********

.. inheritance-diagram:: QSslError
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtNetwork.QSslError.__eq__>` (other)
*    def :meth:`__ne__<PySide.QtNetwork.QSslError.__ne__>` (other)
*    def :meth:`certificate<PySide.QtNetwork.QSslError.certificate>` ()
*    def :meth:`error<PySide.QtNetwork.QSslError.error>` ()
*    def :meth:`errorString<PySide.QtNetwork.QSslError.errorString>` ()


Detailed Description
--------------------



    The :class:`PySide.QtNetwork.QSslError` class provides an SSL error.

    :class:`PySide.QtNetwork.QSslError` provides a simple API for managing errors during :class:`PySide.QtNetwork.QSslSocket` 's SSL handshake.

    .. seealso::  :class:`PySide.QtNetwork.QSslSocket`  :class:`PySide.QtNetwork.QSslCertificate`  :class:`PySide.QtNetwork.QSslCipher` 

.. class:: QSslError()
           QSslError(error)
           QSslError(error, certificate)
           QSslError(other)

    :param error: :attr:`PySide.QtNetwork.QSslError.SslError`
    :param other: :class:`PySide.QtNetwork.QSslError`
    :param certificate: :class:`PySide.QtNetwork.QSslCertificate`

    Constructs a :class:`PySide.QtNetwork.QSslError` object with no error and default certificate.


    Constructs a :class:`PySide.QtNetwork.QSslError` object. The argument specifies the ``error`` that occurred.


    Constructs a :class:`PySide.QtNetwork.QSslError` object. The two arguments specify the ``error`` that occurred, and which ``certificate`` the error relates to.

    .. seealso::  :class:`PySide.QtNetwork.QSslCertificate` 

    Constructs an identical copy of ``other`` .


.. attribute:: PySide.QtNetwork.QSslError.SslError

    Describes all recognized errors that can occur during an SSL handshake.

    +---------------------------------------------+-----------+
    |Constant                                     |Description|
    +=============================================+===========+
    |QSslError.NoError                            |           |
    +---------------------------------------------+-----------+
    |QSslError.UnableToGetIssuerCertificate       |           |
    +---------------------------------------------+-----------+
    |QSslError.UnableToDecryptCertificateSignature|           |
    +---------------------------------------------+-----------+
    |QSslError.UnableToDecodeIssuerPublicKey      |           |
    +---------------------------------------------+-----------+
    |QSslError.CertificateSignatureFailed         |           |
    +---------------------------------------------+-----------+
    |QSslError.CertificateNotYetValid             |           |
    +---------------------------------------------+-----------+
    |QSslError.CertificateExpired                 |           |
    +---------------------------------------------+-----------+
    |QSslError.InvalidNotBeforeField              |           |
    +---------------------------------------------+-----------+
    |QSslError.InvalidNotAfterField               |           |
    +---------------------------------------------+-----------+
    |QSslError.SelfSignedCertificate              |           |
    +---------------------------------------------+-----------+
    |QSslError.SelfSignedCertificateInChain       |           |
    +---------------------------------------------+-----------+
    |QSslError.UnableToGetLocalIssuerCertificate  |           |
    +---------------------------------------------+-----------+
    |QSslError.UnableToVerifyFirstCertificate     |           |
    +---------------------------------------------+-----------+
    |QSslError.CertificateRevoked                 |           |
    +---------------------------------------------+-----------+
    |QSslError.InvalidCaCertificate               |           |
    +---------------------------------------------+-----------+
    |QSslError.PathLengthExceeded                 |           |
    +---------------------------------------------+-----------+
    |QSslError.InvalidPurpose                     |           |
    +---------------------------------------------+-----------+
    |QSslError.CertificateUntrusted               |           |
    +---------------------------------------------+-----------+
    |QSslError.CertificateRejected                |           |
    +---------------------------------------------+-----------+
    |QSslError.SubjectIssuerMismatch              |           |
    +---------------------------------------------+-----------+
    |QSslError.AuthorityIssuerSerialNumberMismatch|           |
    +---------------------------------------------+-----------+
    |QSslError.NoPeerCertificate                  |           |
    +---------------------------------------------+-----------+
    |QSslError.HostNameMismatch                   |           |
    +---------------------------------------------+-----------+
    |QSslError.UnspecifiedError                   |           |
    +---------------------------------------------+-----------+
    |QSslError.NoSslSupport                       |           |
    +---------------------------------------------+-----------+

    .. seealso::  :meth:`QSslError.errorString()<PySide.QtNetwork.QSslError.errorString>` 

.. method:: PySide.QtNetwork.QSslError.certificate()


    :rtype: :class:`PySide.QtNetwork.QSslCertificate`




    Returns the certificate associated with this error, or a null certificate if the error does not relate to any certificate.

    .. seealso::  :meth:`PySide.QtNetwork.QSslError.error`  :meth:`PySide.QtNetwork.QSslError.errorString` 


.. method:: PySide.QtNetwork.QSslError.error()


    :rtype: :attr:`PySide.QtNetwork.QSslError.SslError`




    Returns the type of the error.

    .. seealso::  :meth:`PySide.QtNetwork.QSslError.errorString`  :meth:`PySide.QtNetwork.QSslError.certificate` 


.. method:: PySide.QtNetwork.QSslError.errorString()


    :rtype: unicode




    Returns a short localized human-readable description of the error.

    .. seealso::  :meth:`PySide.QtNetwork.QSslError.error`  :meth:`PySide.QtNetwork.QSslError.certificate` 


.. method:: PySide.QtNetwork.QSslError.__ne__(other)


    :param other: :class:`PySide.QtNetwork.QSslError`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this error is not equal to ``other`` ; otherwise returns false.



.. method:: PySide.QtNetwork.QSslError.__eq__(other)


    :param other: :class:`PySide.QtNetwork.QSslError`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this error is equal to ``other`` ; otherwise returns false.




