.. module:: PySide.QtCore
.. _QAbstractState:

QAbstractState
**************

.. inheritance-diagram:: QAbstractState
    :parts: 2

**Inherited by:** :ref:`QState`, :ref:`QStateMachine`, :ref:`QHistoryState`, :ref:`QFinalState`

.. note:: This class was introduced in Qt 4.6
Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`machine<PySide.QtCore.QAbstractState.machine>` ()
*    def :meth:`parentState<PySide.QtCore.QAbstractState.parentState>` ()


Virtual functions
^^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`onEntry<PySide.QtCore.QAbstractState.onEntry>` (event)
*    def :meth:`onExit<PySide.QtCore.QAbstractState.onExit>` (event)


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`entered<PySide.QtCore.QAbstractState.entered>` ()
*    def :meth:`exited<PySide.QtCore.QAbstractState.exited>` ()


Detailed Description
--------------------



    The :class:`PySide.QtCore.QAbstractState` class is the base class of states of a :class:`PySide.QtCore.QStateMachine` .

    The :class:`PySide.QtCore.QAbstractState` class is the abstract base class of states that are part of a :class:`PySide.QtCore.QStateMachine` . It defines the interface that all state objects have in common. :class:`PySide.QtCore.QAbstractState` is part of :ref:`The State Machine Framework<statemachine-api.html>` .

    The :meth:`PySide.QtCore.QAbstractState.entered` signal is emitted when the state has been entered. The :meth:`PySide.QtCore.QAbstractState.exited` signal is emitted when the state has been exited.

    The :meth:`PySide.QtCore.QAbstractState.parentState` function returns the state's parent state. The :meth:`PySide.QtCore.QAbstractState.machine` function returns the state machine that the state is part of.

    .. _PySide.QtCore.QAbstractState_subclassing:



Subclassing
^^^^^^^^^^^

    The :meth:`PySide.QtCore.QAbstractState.onEntry` function is called when the state is entered; reimplement this function to perform custom processing when the state is entered.

    The :meth:`PySide.QtCore.QAbstractState.onExit` function is called when the state is exited; reimplement this function to perform custom processing when the state is exited.


.. class:: QAbstractState([parent=None])

    :param parent: :class:`PySide.QtCore.QState`

    Constructs a new state with the given ``parent`` state.


.. method:: PySide.QtCore.QAbstractState.entered()








.. method:: PySide.QtCore.QAbstractState.exited()








.. method:: PySide.QtCore.QAbstractState.machine()


    :rtype: :class:`PySide.QtCore.QStateMachine`




    Returns the state machine that this state is part of, or 0 if the state is not part of a state machine.



.. method:: PySide.QtCore.QAbstractState.onEntry(event)


    :param event: :class:`PySide.QtCore.QEvent`




    This function is called when the state is entered. The given ``event`` is what caused the state to be entered. Reimplement this function to perform custom processing when the state is entered.



.. method:: PySide.QtCore.QAbstractState.onExit(event)


    :param event: :class:`PySide.QtCore.QEvent`




    This function is called when the state is exited. The given ``event`` is what caused the state to be exited. Reimplement this function to perform custom processing when the state is exited.



.. method:: PySide.QtCore.QAbstractState.parentState()


    :rtype: :class:`PySide.QtCore.QState`




    Returns this state's parent state, or 0 if the state has no parent state.




