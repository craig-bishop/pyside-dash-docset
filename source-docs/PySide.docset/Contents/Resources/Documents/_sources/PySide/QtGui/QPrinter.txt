.. module:: PySide.QtGui
.. _QPrinter:

QPrinter
********

.. inheritance-diagram:: QPrinter
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`abort<PySide.QtGui.QPrinter.abort>` ()
*    def :meth:`actualNumCopies<PySide.QtGui.QPrinter.actualNumCopies>` ()
*    def :meth:`collateCopies<PySide.QtGui.QPrinter.collateCopies>` ()
*    def :meth:`colorMode<PySide.QtGui.QPrinter.colorMode>` ()
*    def :meth:`copyCount<PySide.QtGui.QPrinter.copyCount>` ()
*    def :meth:`creator<PySide.QtGui.QPrinter.creator>` ()
*    def :meth:`docName<PySide.QtGui.QPrinter.docName>` ()
*    def :meth:`doubleSidedPrinting<PySide.QtGui.QPrinter.doubleSidedPrinting>` ()
*    def :meth:`duplex<PySide.QtGui.QPrinter.duplex>` ()
*    def :meth:`fontEmbeddingEnabled<PySide.QtGui.QPrinter.fontEmbeddingEnabled>` ()
*    def :meth:`fromPage<PySide.QtGui.QPrinter.fromPage>` ()
*    def :meth:`fullPage<PySide.QtGui.QPrinter.fullPage>` ()
*    def :meth:`getPageMargins<PySide.QtGui.QPrinter.getPageMargins>` (, unit)
*    def :meth:`init<PySide.QtGui.QPrinter.init>` (mode)
*    def :meth:`isValid<PySide.QtGui.QPrinter.isValid>` ()
*    def :meth:`newPage<PySide.QtGui.QPrinter.newPage>` ()
*    def :meth:`numCopies<PySide.QtGui.QPrinter.numCopies>` ()
*    def :meth:`orientation<PySide.QtGui.QPrinter.orientation>` ()
*    def :meth:`outputFileName<PySide.QtGui.QPrinter.outputFileName>` ()
*    def :meth:`outputFormat<PySide.QtGui.QPrinter.outputFormat>` ()
*    def :meth:`pageOrder<PySide.QtGui.QPrinter.pageOrder>` ()
*    def :meth:`pageRect<PySide.QtGui.QPrinter.pageRect>` ()
*    def :meth:`pageRect<PySide.QtGui.QPrinter.pageRect>` (arg__1)
*    def :meth:`pageSize<PySide.QtGui.QPrinter.pageSize>` ()
*    def :meth:`paperRect<PySide.QtGui.QPrinter.paperRect>` ()
*    def :meth:`paperRect<PySide.QtGui.QPrinter.paperRect>` (arg__1)
*    def :meth:`paperSize<PySide.QtGui.QPrinter.paperSize>` ()
*    def :meth:`paperSize<PySide.QtGui.QPrinter.paperSize>` (unit)
*    def :meth:`paperSource<PySide.QtGui.QPrinter.paperSource>` ()
*    def :meth:`printEngine<PySide.QtGui.QPrinter.printEngine>` ()
*    def :meth:`printProgram<PySide.QtGui.QPrinter.printProgram>` ()
*    def :meth:`printRange<PySide.QtGui.QPrinter.printRange>` ()
*    def :meth:`printerName<PySide.QtGui.QPrinter.printerName>` ()
*    def :meth:`printerState<PySide.QtGui.QPrinter.printerState>` ()
*    def :meth:`resolution<PySide.QtGui.QPrinter.resolution>` ()
*    def :meth:`setCollateCopies<PySide.QtGui.QPrinter.setCollateCopies>` (collate)
*    def :meth:`setColorMode<PySide.QtGui.QPrinter.setColorMode>` (arg__1)
*    def :meth:`setCopyCount<PySide.QtGui.QPrinter.setCopyCount>` (arg__1)
*    def :meth:`setCreator<PySide.QtGui.QPrinter.setCreator>` (arg__1)
*    def :meth:`setDocName<PySide.QtGui.QPrinter.setDocName>` (arg__1)
*    def :meth:`setDoubleSidedPrinting<PySide.QtGui.QPrinter.setDoubleSidedPrinting>` (enable)
*    def :meth:`setDuplex<PySide.QtGui.QPrinter.setDuplex>` (duplex)
*    def :meth:`setEngines<PySide.QtGui.QPrinter.setEngines>` (printEngine, paintEngine)
*    def :meth:`setFontEmbeddingEnabled<PySide.QtGui.QPrinter.setFontEmbeddingEnabled>` (enable)
*    def :meth:`setFromTo<PySide.QtGui.QPrinter.setFromTo>` (fromPage, toPage)
*    def :meth:`setFullPage<PySide.QtGui.QPrinter.setFullPage>` (arg__1)
*    def :meth:`setNumCopies<PySide.QtGui.QPrinter.setNumCopies>` (arg__1)
*    def :meth:`setOrientation<PySide.QtGui.QPrinter.setOrientation>` (arg__1)
*    def :meth:`setOutputFileName<PySide.QtGui.QPrinter.setOutputFileName>` (arg__1)
*    def :meth:`setOutputFormat<PySide.QtGui.QPrinter.setOutputFormat>` (format)
*    def :meth:`setPageMargins<PySide.QtGui.QPrinter.setPageMargins>` (left, top, right, bottom, unit)
*    def :meth:`setPageOrder<PySide.QtGui.QPrinter.setPageOrder>` (arg__1)
*    def :meth:`setPageSize<PySide.QtGui.QPrinter.setPageSize>` (arg__1)
*    def :meth:`setPaperSize<PySide.QtGui.QPrinter.setPaperSize>` (arg__1)
*    def :meth:`setPaperSize<PySide.QtGui.QPrinter.setPaperSize>` (paperSize, unit)
*    def :meth:`setPaperSource<PySide.QtGui.QPrinter.setPaperSource>` (arg__1)
*    def :meth:`setPrintProgram<PySide.QtGui.QPrinter.setPrintProgram>` (arg__1)
*    def :meth:`setPrintRange<PySide.QtGui.QPrinter.setPrintRange>` (range)
*    def :meth:`setPrinterName<PySide.QtGui.QPrinter.setPrinterName>` (arg__1)
*    def :meth:`setResolution<PySide.QtGui.QPrinter.setResolution>` (arg__1)
*    def :meth:`supportedResolutions<PySide.QtGui.QPrinter.supportedResolutions>` ()
*    def :meth:`supportsMultipleCopies<PySide.QtGui.QPrinter.supportsMultipleCopies>` ()
*    def :meth:`toPage<PySide.QtGui.QPrinter.toPage>` ()


Detailed Description
--------------------



    The :class:`PySide.QtGui.QPrinter` class is a paint device that paints on a printer.

    This device represents a series of pages of printed output, and is used in almost exactly the same way as other paint devices such as :class:`PySide.QtGui.QWidget` and :class:`PySide.QtGui.QPixmap` . A set of additional functions are provided to manage device-specific features, such as orientation and resolution, and to step through the pages in a document as it is generated.

    When printing directly to a printer on Windows or Mac OS X, :class:`PySide.QtGui.QPrinter` uses the built-in printer drivers. On X11, :class:`PySide.QtGui.QPrinter` uses the :ref:`Common Unix Printing System (CUPS)<http://www.cups.org/>` or the standard Unix :ref:`lpr<http://www.ietf.org/rfc/rfc1179.txt>` utility to send PostScript or PDF output to the printer. As an alternative, the :meth:`PySide.QtGui.QPrinter.printProgram` function can be used to specify the command or utility to use instead of the system default.

    Note that setting parameters like paper size and resolution on an invalid printer is undefined. You can use :meth:`QPrinter.isValid()<PySide.QtGui.QPrinter.isValid>` to verify this before changing any parameters.

    :class:`PySide.QtGui.QPrinter` supports a number of parameters, most of which can be changed by the end user through a :class:`print dialog<PySide.QtGui.QPrintDialog>` . In general, :class:`PySide.QtGui.QPrinter` passes these functions onto the underlying :class:`PySide.QtGui.QPrintEngine` .

    The most important parameters are:


    * :meth:`PySide.QtGui.QPrinter.setOrientation` tells :class:`PySide.QtGui.QPrinter` which page orientation to use.
    * :meth:`PySide.QtGui.QPrinter.setPaperSize` tells :class:`PySide.QtGui.QPrinter` what paper size to expect from the printer.
    * :meth:`PySide.QtGui.QPrinter.setResolution` tells :class:`PySide.QtGui.QPrinter` what resolution you wish the printer to provide, in dots per inch (DPI).
    * :meth:`PySide.QtGui.QPrinter.setFullPage` tells :class:`PySide.QtGui.QPrinter` whether you want to deal with the full page or just with the part the printer can draw on.
    * :meth:`PySide.QtGui.QPrinter.setCopyCount` tells :class:`PySide.QtGui.QPrinter` how many copies of the document it should print.

    Many of these functions can only be called before the actual printing begins (i.e., before :meth:`QPainter.begin()<PySide.QtGui.QPainter.begin>` is called). This usually makes sense because, for example, it's not possible to change the number of copies when you are halfway through printing. There are also some settings that the user sets (through the printer dialog) and that applications are expected to obey. See :class:`PySide.QtGui.QAbstractPrintDialog` 's documentation for more details.

    When :meth:`QPainter.begin()<PySide.QtGui.QPainter.begin>` is called, the :class:`PySide.QtGui.QPrinter` it operates on is prepared for a new page, enabling the :class:`PySide.QtGui.QPainter` to be used immediately to paint the first page in a document. Once the first page has been painted, :meth:`PySide.QtGui.QPrinter.newPage` can be called to request a new blank page to paint on, or :meth:`QPainter.end()<PySide.QtGui.QPainter.end>` can be called to finish printing. The second page and all following pages are prepared using a call to :meth:`PySide.QtGui.QPrinter.newPage` before they are painted.

    The first page in a document does not need to be preceded by a call to :meth:`PySide.QtGui.QPrinter.newPage` . You only need to calling :meth:`PySide.QtGui.QPrinter.newPage` after :meth:`QPainter.begin()<PySide.QtGui.QPainter.begin>` if you need to insert a blank page at the beginning of a printed document. Similarly, calling :meth:`PySide.QtGui.QPrinter.newPage` after the last page in a document is painted will result in a trailing blank page appended to the end of the printed document.

    If you want to abort the print job, :meth:`PySide.QtGui.QPrinter.abort` will try its best to stop printing. It may cancel the entire job or just part of it.

    Since :class:`PySide.QtGui.QPrinter` can print to any :class:`PySide.QtGui.QPrintEngine` subclass, it is possible to extend printing support to cover new types of printing subsystem by subclassing :class:`PySide.QtGui.QPrintEngine` and reimplementing its interface.

    .. seealso::  :class:`PySide.QtGui.QPrintDialog`  :ref:`Printing with Qt<printing.html>` 

.. class:: QPrinter([mode=ScreenResolution])
           QPrinter(printer[, mode=ScreenResolution])

    :param mode: :attr:`PySide.QtGui.QPrinter.PrinterMode`
    :param printer: :class:`PySide.QtGui.QPrinterInfo`

    Creates a new printer object with the given ``mode`` .


    Creates a new printer object with the given ``printer`` and ``mode`` .


.. attribute:: PySide.QtGui.QPrinter.OutputFormat

    The :attr:`QPrinter.OutputFormat` enum is used to describe the format :class:`PySide.QtGui.QPrinter` should use for printing.

    +-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |Constant                 |Description                                                                                                                                                            |
    +=========================+=======================================================================================================================================================================+
    |QPrinter.NativeFormat    |:class:`PySide.QtGui.QPrinter` will print output using a method defined by the platform it is running on. This mode is the default when printing directly to a printer.|
    +-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QPrinter.PdfFormat       |:class:`PySide.QtGui.QPrinter` will generate its output as a searchable PDF file. This mode is the default when printing to a file.                                    |
    +-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QPrinter.PostScriptFormat|:class:`PySide.QtGui.QPrinter` will generate its output as in the PostScript format. (This feature was introduced in Qt 4.2.)                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+

    .. seealso::  :meth:`PySide.QtGui.QPrinter.outputFormat`  :meth:`PySide.QtGui.QPrinter.setOutputFormat`  :meth:`PySide.QtGui.QPrinter.setOutputFileName` 

.. attribute:: PySide.QtGui.QPrinter.DuplexMode

    This enum is used to indicate whether printing will occur on one or both sides of each sheet of paper (simplex or duplex printing).

    +------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    |Constant                |Description                                                                                                                          |
    +========================+=====================================================================================================================================+
    |QPrinter.DuplexNone     |Single sided (simplex) printing only.                                                                                                |
    +------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    |QPrinter.DuplexAuto     |The printer's default setting is used to determine whether duplex printing is used.                                                  |
    +------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    |QPrinter.DuplexLongSide |Both sides of each sheet of paper are used for printing. The paper is turned over its longest edge before the second side is printed |
    +------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    |QPrinter.DuplexShortSide|Both sides of each sheet of paper are used for printing. The paper is turned over its shortest edge before the second side is printed|
    +------------------------+-------------------------------------------------------------------------------------------------------------------------------------+


.. attribute:: PySide.QtGui.QPrinter.PrintRange

    Used to specify the print range selection option.

    +--------------------+-------------------------------------------+
    |Constant            |Description                                |
    +====================+===========================================+
    |QPrinter.AllPages   |All pages should be printed.               |
    +--------------------+-------------------------------------------+
    |QPrinter.Selection  |Only the selection should be printed.      |
    +--------------------+-------------------------------------------+
    |QPrinter.PageRange  |The specified page range should be printed.|
    +--------------------+-------------------------------------------+
    |QPrinter.CurrentPage|Only the current page should be printed.   |
    +--------------------+-------------------------------------------+

    .. seealso::  :attr:`QAbstractPrintDialog.PrintRange` 

.. attribute:: PySide.QtGui.QPrinter.Unit

    This enum type is used to specify the measurement unit for page and paper sizes.

    +--------------------+-----------+
    |Constant            |Description|
    +====================+===========+
    |QPrinter.Millimeter |           |
    +--------------------+-----------+
    |QPrinter.Point      |           |
    +--------------------+-----------+
    |QPrinter.Inch       |           |
    +--------------------+-----------+
    |QPrinter.Pica       |           |
    +--------------------+-----------+
    |QPrinter.Didot      |           |
    +--------------------+-----------+
    |QPrinter.Cicero     |           |
    +--------------------+-----------+
    |QPrinter.DevicePixel|           |
    +--------------------+-----------+

    Note the difference between Point and :attr:`DevicePixel<QPrinter.Unit>` . The Point unit is defined to be 1/72th of an inch, while the :attr:`DevicePixel<QPrinter.Unit>` unit is resolution dependant and is based on the actual pixels, or dots, on the printer.


.. attribute:: PySide.QtGui.QPrinter.PrinterMode

    This enum describes the mode the printer should work in. It basically presets a certain resolution and working mode.


    |Constant                  |Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |

    |QPrinter.ScreenResolution |Sets the resolution of the print device to the screen resolution. This has the big advantage that the results obtained when painting on the printer will match more or less exactly the visible output on the screen. It is the easiest to use, as font metrics on the screen and on the printer are the same. This is the default value. :attr:`ScreenResolution<QPrinter.PrinterMode>` will produce a lower quality output than :attr:`HighResolution<QPrinter.PrinterMode>` and should only be used for drafts.|

    |QPrinter.PrinterResolution|This value is deprecated. Is is equivalent to :attr:`ScreenResolution<QPrinter.PrinterMode>` on Unix and :attr:`HighResolution<QPrinter.PrinterMode>` on Windows and Mac. Due do the difference between :attr:`ScreenResolution<QPrinter.PrinterMode>` and :attr:`HighResolution<QPrinter.PrinterMode>` , use of this value may lead to non-portable printer code.                                                                                                                                                |

    |QPrinter.HighResolution   |On Windows, sets the printer resolution to that defined for the printer in use. For PostScript printing, sets the resolution of the PostScript driver to 1200 dpi.                                                                                                                                                                                                                                                                                                                                                |


    .. note::  When rendering text on a :class:`PySide.QtGui.QPrinter` device, it is important to realize that the size of text, when specified in points, is independent of the resolution specified for the device itself. Therefore, it may be useful to specify the font size in pixels when combining text with graphics to ensure that their relative sizes are what you expect.


.. attribute:: PySide.QtGui.QPrinter.Orientation

    This enum type (not to be confused with ``Orientation`` ) is used to specify each page's orientation.

    +------------------+--------------------------------------------+
    |Constant          |Description                                 |
    +==================+============================================+
    |QPrinter.Portrait |the page's height is greater than its width.|
    +------------------+--------------------------------------------+
    |QPrinter.Landscape|the page's width is greater than its height.|
    +------------------+--------------------------------------------+

    This type interacts with :attr:`QPrinter.PaperSize` and :meth:`QPrinter.setFullPage()<PySide.QtGui.QPrinter.setFullPage>` to determine the final size of the page available to the application.


.. attribute:: PySide.QtGui.QPrinter.PrinterState

    +----------------+-----------+
    |Constant        |Description|
    +================+===========+
    |QPrinter.Idle   |           |
    +----------------+-----------+
    |QPrinter.Active |           |
    +----------------+-----------+
    |QPrinter.Aborted|           |
    +----------------+-----------+
    |QPrinter.Error  |           |
    +----------------+-----------+


.. attribute:: PySide.QtGui.QPrinter.ColorMode

    This enum type is used to indicate whether :class:`PySide.QtGui.QPrinter` should print in color or not.

    +------------------+----------------------------------------------------+
    |Constant          |Description                                         |
    +==================+====================================================+
    |QPrinter.Color    |print in color if available, otherwise in grayscale.|
    +------------------+----------------------------------------------------+
    |QPrinter.GrayScale|print in grayscale, even on color printers.         |
    +------------------+----------------------------------------------------+


.. attribute:: PySide.QtGui.QPrinter.PaperSource

    This enum type specifies what paper source :class:`PySide.QtGui.QPrinter` is to use. :class:`PySide.QtGui.QPrinter` does not check that the paper source is available; it just uses this information to try and set the paper source. Whether it will set the paper source depends on whether the printer has that particular source.

    .. warning::  This is currently only implemented for Windows.

    +-----------------------+-----------+
    |Constant               |Description|
    +=======================+===========+
    |QPrinter.Auto          |           |
    +-----------------------+-----------+
    |QPrinter.Cassette      |           |
    +-----------------------+-----------+
    |QPrinter.Envelope      |           |
    +-----------------------+-----------+
    |QPrinter.EnvelopeManual|           |
    +-----------------------+-----------+
    |QPrinter.FormSource    |           |
    +-----------------------+-----------+
    |QPrinter.LargeCapacity |           |
    +-----------------------+-----------+
    |QPrinter.LargeFormat   |           |
    +-----------------------+-----------+
    |QPrinter.Lower         |           |
    +-----------------------+-----------+
    |QPrinter.MaxPageSource |           |
    +-----------------------+-----------+
    |QPrinter.Middle        |           |
    +-----------------------+-----------+
    |QPrinter.Manual        |           |
    +-----------------------+-----------+
    |QPrinter.OnlyOne       |           |
    +-----------------------+-----------+
    |QPrinter.Tractor       |           |
    +-----------------------+-----------+
    |QPrinter.SmallFormat   |           |
    +-----------------------+-----------+


.. attribute:: PySide.QtGui.QPrinter.PageOrder

    This enum type is used by :class:`PySide.QtGui.QPrinter` to tell the application program how to print.

    +-----------------------+--------------------------------------------------+
    |Constant               |Description                                       |
    +=======================+==================================================+
    |QPrinter.FirstPageFirst|the lowest-numbered page should be printed first. |
    +-----------------------+--------------------------------------------------+
    |QPrinter.LastPageFirst |the highest-numbered page should be printed first.|
    +-----------------------+--------------------------------------------------+


.. attribute:: PySide.QtGui.QPrinter.PageSize

    Use :attr:`QPrinter.PaperSize` instead.

    +------------------+-------------------------------------+
    |Constant          |Description                          |
    +==================+=====================================+
    |QPrinter.A0       |841 x 1189 mm                        |
    +------------------+-------------------------------------+
    |QPrinter.A1       |594 x 841 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.A2       |420 x 594 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.A3       |297 x 420 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.A4       |210 x 297 mm, 8.26 x 11.69 inches    |
    +------------------+-------------------------------------+
    |QPrinter.A5       |148 x 210 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.A6       |105 x 148 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.A7       |74 x 105 mm                          |
    +------------------+-------------------------------------+
    |QPrinter.A8       |52 x 74 mm                           |
    +------------------+-------------------------------------+
    |QPrinter.A9       |37 x 52 mm                           |
    +------------------+-------------------------------------+
    |QPrinter.B0       |1030 x 1456 mm                       |
    +------------------+-------------------------------------+
    |QPrinter.B1       |728 x 1030 mm                        |
    +------------------+-------------------------------------+
    |QPrinter.B10      |32 x 45 mm                           |
    +------------------+-------------------------------------+
    |QPrinter.B2       |515 x 728 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.B3       |364 x 515 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.B4       |257 x 364 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.B5       |182 x 257 mm, 7.17 x 10.13 inches    |
    +------------------+-------------------------------------+
    |QPrinter.B6       |128 x 182 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.B7       |91 x 128 mm                          |
    +------------------+-------------------------------------+
    |QPrinter.B8       |64 x 91 mm                           |
    +------------------+-------------------------------------+
    |QPrinter.B9       |45 x 64 mm                           |
    +------------------+-------------------------------------+
    |QPrinter.C5E      |163 x 229 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.Comm10E  |105 x 241 mm, U.S. Common 10 Envelope|
    +------------------+-------------------------------------+
    |QPrinter.DLE      |110 x 220 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.Executive|7.5 x 10 inches, 191 x 254 mm        |
    +------------------+-------------------------------------+
    |QPrinter.Folio    |210 x 330 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.Ledger   |432 x 279 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.Legal    |8.5 x 14 inches, 216 x 356 mm        |
    +------------------+-------------------------------------+
    |QPrinter.Letter   |8.5 x 11 inches, 216 x 279 mm        |
    +------------------+-------------------------------------+
    |QPrinter.Tabloid  |279 x 432 mm                         |
    +------------------+-------------------------------------+
    |QPrinter.Custom   |Unknown, or a user defined size.     |
    +------------------+-------------------------------------+


.. method:: PySide.QtGui.QPrinter.abort()


    :rtype: :class:`PySide.QtCore.bool`




    Aborts the current print run. Returns true if the print run was successfully aborted and :meth:`PySide.QtGui.QPrinter.printerState` will return :attr:`QPrinter.Aborted<QPrinter.PrinterState>` ; otherwise returns false.

    It is not always possible to abort a print job. For example, all the data has gone to the printer but the printer cannot or will not cancel the job when asked to.



.. method:: PySide.QtGui.QPrinter.actualNumCopies()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of copies that will be printed. The default value is 1.

    This function always returns the actual value specified in the print dialog or using :meth:`PySide.QtGui.QPrinter.setNumCopies` .

    Use :meth:`PySide.QtGui.QPrinter.copyCount` instead.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setNumCopies`  :meth:`PySide.QtGui.QPrinter.numCopies` 


.. method:: PySide.QtGui.QPrinter.collateCopies()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if collation is turned on when multiple copies is selected. Returns false if it is turned off when multiple copies is selected. When collating is turned off the printing of each individual page will be repeated the :meth:`PySide.QtGui.QPrinter.numCopies` amount before the next page is started. With collating turned on all pages are printed before the next copy of those pages is started.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setCollateCopies` 


.. method:: PySide.QtGui.QPrinter.colorMode()


    :rtype: :attr:`PySide.QtGui.QPrinter.ColorMode`




    Returns the current color mode.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setColorMode` 


.. method:: PySide.QtGui.QPrinter.copyCount()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of copies that will be printed. The default value is 1.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setCopyCount`  :meth:`PySide.QtGui.QPrinter.supportsMultipleCopies` 


.. method:: PySide.QtGui.QPrinter.creator()


    :rtype: unicode




    Returns the name of the application that created the document.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setCreator` 


.. method:: PySide.QtGui.QPrinter.docName()


    :rtype: unicode




    Returns the document name.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setDocName`  :attr:`QPrintEngine.PrintEnginePropertyKey` 


.. method:: PySide.QtGui.QPrinter.doubleSidedPrinting()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if double side printing is enabled.

    Currently this option is only supported on X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setDoubleSidedPrinting` 


.. method:: PySide.QtGui.QPrinter.duplex()


    :rtype: :attr:`PySide.QtGui.QPrinter.DuplexMode`




    Returns the current duplex mode.

    Currently this option is only supported on X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setDuplex` 


.. method:: PySide.QtGui.QPrinter.fontEmbeddingEnabled()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if font embedding is enabled.

    Currently this option is only supported on X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setFontEmbeddingEnabled` 


.. method:: PySide.QtGui.QPrinter.fromPage()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of the first page in a range of pages to be printed (the "from page" setting). Pages in a document are numbered according to the convention that the first page is page 1.

    By default, this function returns a special value of 0, meaning that the "from page" setting is unset.

    .. note::  If :meth:`PySide.QtGui.QPrinter.fromPage` and :meth:`PySide.QtGui.QPrinter.toPage` both return 0, this indicates that *the whole document will be printed* .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setFromTo`  :meth:`PySide.QtGui.QPrinter.toPage` 


.. method:: PySide.QtGui.QPrinter.fullPage()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the origin of the printer's coordinate system is at the corner of the page and false if it is at the edge of the printable area.

    See :meth:`PySide.QtGui.QPrinter.setFullPage` for details and caveats.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setFullPage`  :attr:`QPrinter.PaperSize` 


.. method:: PySide.QtGui.QPrinter.getPageMargins(, unit)


    :param unit: :attr:`PySide.QtGui.QPrinter.Unit`




    Returns the page margins for this printer in ``left`` , ``top`` , ``right`` , ``bottom`` . The unit of the returned margins are specified with the ``unit`` parameter.



.. method:: PySide.QtGui.QPrinter.init(mode)


    :param mode: :attr:`PySide.QtGui.QPrinter.PrinterMode`






.. method:: PySide.QtGui.QPrinter.isValid()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the printer currently selected is a valid printer in the system, or a pure PDF/PostScript printer; otherwise returns false.

    To detect other failures check the output of :meth:`QPainter.begin()<PySide.QtGui.QPainter.begin>` or :meth:`QPrinter.newPage()<PySide.QtGui.QPrinter.newPage>` .

    ::

            printer = QPrinter()
            printer.setOutputFormat(QPrinter.PdfFormat)
            printer.setOutputFileName("/foobar/nonwritable.pdf")
            QPainter painter
            if painter.begin(printer):  # failed to open file
                print "failed to open file, is it writable?"
                return 1

            painter.drawText(10, 10, "Test")
            if !printer.Page():
                print "failed in flushing page to disk, disk full?"
                return 1

            painter.drawText(10, 10, "Test 2")
            painter.end()


    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPrinterName` 


.. method:: PySide.QtGui.QPrinter.newPage()


    :rtype: :class:`PySide.QtCore.bool`




    Tells the printer to eject the current page and to continue printing on a new page. Returns true if this was successful; otherwise returns false.

    Calling :meth:`PySide.QtGui.QPrinter.newPage` on an inactive :class:`PySide.QtGui.QPrinter` object will always fail.



.. method:: PySide.QtGui.QPrinter.numCopies()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of copies to be printed. The default value is 1.

    On Windows, Mac OS X and X11 systems that support CUPS, this will always return 1 as these operating systems can internally handle the number of copies.

    On X11, this value will return the number of times the application is required to print in order to match the number specified in the printer setup dialog. This has been done since some printer drivers are not capable of buffering up the copies and in those cases the application must make an explicit call to the print code for each copy.

    Use :meth:`PySide.QtGui.QPrinter.copyCount` in conjunction with :meth:`PySide.QtGui.QPrinter.supportsMultipleCopies` instead.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setNumCopies`  :meth:`PySide.QtGui.QPrinter.actualNumCopies` 


.. method:: PySide.QtGui.QPrinter.orientation()


    :rtype: :attr:`PySide.QtGui.QPrinter.Orientation`




    Returns the orientation setting. This is driver-dependent, but is usually :attr:`QPrinter.Portrait<QPrinter.Orientation>` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setOrientation` 


.. method:: PySide.QtGui.QPrinter.outputFileName()


    :rtype: unicode




    Returns the name of the output file. By default, this is an empty string (indicating that the printer shouldn't print to file).

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setOutputFileName`  :attr:`QPrintEngine.PrintEnginePropertyKey` 


.. method:: PySide.QtGui.QPrinter.outputFormat()


    :rtype: :attr:`PySide.QtGui.QPrinter.OutputFormat`




    Returns the output format for this printer.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setOutputFormat` 


.. method:: PySide.QtGui.QPrinter.pageOrder()


    :rtype: :attr:`PySide.QtGui.QPrinter.PageOrder`




    Returns the current page order.

    The default page order is ``FirstPageFirst`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPageOrder` 


.. method:: PySide.QtGui.QPrinter.pageRect(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.Unit`
    :rtype: :class:`PySide.QtCore.QRectF`




    Returns the page's rectangle in ``unit`` ; this is usually smaller than the :meth:`PySide.QtGui.QPrinter.paperRect` since the page normally has margins between its borders and the paper.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.paperSize` 


.. method:: PySide.QtGui.QPrinter.pageRect()


    :rtype: :class:`PySide.QtCore.QRect`




    Returns the page's rectangle; this is usually smaller than the :meth:`PySide.QtGui.QPrinter.paperRect` since the page normally has margins between its borders and the paper.

    The unit of the returned rectangle is :attr:`DevicePixel<QPrinter.Unit>` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.paperSize` 


.. method:: PySide.QtGui.QPrinter.pageSize()


    :rtype: :attr:`PySide.QtGui.QPrinter.PageSize`




    Returns the printer page size. The default value is driver-dependent.

    Use :meth:`PySide.QtGui.QPrinter.paperSize` instead.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPageSize` 


.. method:: PySide.QtGui.QPrinter.paperRect(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.Unit`
    :rtype: :class:`PySide.QtCore.QRectF`




    Returns the paper's rectangle in ``unit`` ; this is usually larger than the :meth:`PySide.QtGui.QPrinter.pageRect` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.pageRect` 


.. method:: PySide.QtGui.QPrinter.paperRect()


    :rtype: :class:`PySide.QtCore.QRect`




    Returns the paper's rectangle; this is usually larger than the :meth:`PySide.QtGui.QPrinter.pageRect` .

    The unit of the returned rectangle is :attr:`DevicePixel<QPrinter.Unit>` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.pageRect` 


.. method:: PySide.QtGui.QPrinter.paperSize(unit)


    :param unit: :attr:`PySide.QtGui.QPrinter.Unit`
    :rtype: :class:`PySide.QtCore.QSizeF`




    Returns the paper size in ``unit`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPaperSize` 


.. method:: PySide.QtGui.QPrinter.paperSize()


    :rtype: :attr:`PySide.QtGui.QPrinter.PageSize`




    Returns the printer paper size. The default value is driver-dependent.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPaperSize`  :meth:`PySide.QtGui.QPrinter.pageRect`  :meth:`PySide.QtGui.QPrinter.paperRect` 


.. method:: PySide.QtGui.QPrinter.paperSource()


    :rtype: :attr:`PySide.QtGui.QPrinter.PaperSource`




    Returns the printer's paper source. This is ``Manual`` or a printer tray or paper cassette.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPaperSource` 


.. method:: PySide.QtGui.QPrinter.printEngine()


    :rtype: :class:`PySide.QtGui.QPrintEngine`




    Returns the print engine used by the printer.



.. method:: PySide.QtGui.QPrinter.printProgram()


    :rtype: unicode




    Returns the name of the program that sends the print output to the printer.

    The default is to return an empty string; meaning that :class:`PySide.QtGui.QPrinter` will try to be smart in a system-dependent way. On X11 only, you can set it to something different to use a specific print program. On the other platforms, this returns an empty string.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPrintProgram`  :meth:`~PySide.QtGui.QPrinter.setPrinterSelectionOption` 


.. method:: PySide.QtGui.QPrinter.printRange()


    :rtype: :attr:`PySide.QtGui.QPrinter.PrintRange`




    Returns the page range of the :class:`PySide.QtGui.QPrinter` . After the print setup dialog has been opened, this function returns the value selected by the user.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPrintRange` 


.. method:: PySide.QtGui.QPrinter.printerName()


    :rtype: unicode




    Returns the printer name. This value is initially set to the name of the default printer.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setPrinterName` 


.. method:: PySide.QtGui.QPrinter.printerState()


    :rtype: :attr:`PySide.QtGui.QPrinter.PrinterState`




    Returns the current state of the printer. This may not always be accurate (for example if the printer doesn't have the capability of reporting its state to the operating system).



.. method:: PySide.QtGui.QPrinter.resolution()


    :rtype: :class:`PySide.QtCore.int`




    Returns the current assumed resolution of the printer, as set by :meth:`PySide.QtGui.QPrinter.setResolution` or by the printer driver.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setResolution` 


.. method:: PySide.QtGui.QPrinter.setCollateCopies(collate)


    :param collate: :class:`PySide.QtCore.bool`




    Sets the default value for collation checkbox when the print dialog appears. If ``collate`` is true, it will enable :meth:`~PySide.QtGui.QPrinter.setCollateCopiesEnabled` . The default value is false. This value will be changed by what the user presses in the print dialog.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.collateCopies` 


.. method:: PySide.QtGui.QPrinter.setColorMode(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.ColorMode`




    Sets the printer's color mode to ``newColorMode`` , which can be either ``Color`` or ``GrayScale`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.colorMode` 


.. method:: PySide.QtGui.QPrinter.setCopyCount(arg__1)


    :param arg__1: :class:`PySide.QtCore.int`




    Sets the number of copies to be printed to ``count`` .

    The printer driver reads this setting and prints the specified number of copies.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.copyCount`  :meth:`PySide.QtGui.QPrinter.supportsMultipleCopies` 


.. method:: PySide.QtGui.QPrinter.setCreator(arg__1)


    :param arg__1: unicode




    Sets the name of the application that created the document to ``creator`` .

    This function is only applicable to the X11 version of Qt. If no creator name is specified, the creator will be set to "Qt" followed by some version number.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.creator` 


.. method:: PySide.QtGui.QPrinter.setDocName(arg__1)


    :param arg__1: unicode




    Sets the document name to ``name`` .

    On X11, the document name is for example used as the default output filename in :class:`PySide.QtGui.QPrintDialog` . Note that the document name does not affect the file name if the printer is printing to a file. Use the setOutputFile() function for this.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.docName`  :attr:`QPrintEngine.PrintEnginePropertyKey` 


.. method:: PySide.QtGui.QPrinter.setDoubleSidedPrinting(enable)


    :param enable: :class:`PySide.QtCore.bool`




    Enables double sided printing if ``doubleSided`` is true; otherwise disables it.

    Currently this option is only supported on X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.doubleSidedPrinting` 


.. method:: PySide.QtGui.QPrinter.setDuplex(duplex)


    :param duplex: :attr:`PySide.QtGui.QPrinter.DuplexMode`




    Enables double sided printing based on the ``duplex`` mode.

    Currently this option is only supported on X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.duplex` 


.. method:: PySide.QtGui.QPrinter.setEngines(printEngine, paintEngine)


    :param printEngine: :class:`PySide.QtGui.QPrintEngine`
    :param paintEngine: :class:`PySide.QtGui.QPaintEngine`




    This function is used by subclasses of :class:`PySide.QtGui.QPrinter` to specify custom print and paint engines (``printEngine`` and ``paintEngine`` , respectively).

    :class:`PySide.QtGui.QPrinter` does not take ownership of the engines, so you need to manage these engine instances yourself.

    Note that changing the engines will reset the printer state and all its properties.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.printEngine`  :meth:`PySide.QtGui.QPrinter.paintEngine`  :meth:`PySide.QtGui.QPrinter.setOutputFormat` 


.. method:: PySide.QtGui.QPrinter.setFontEmbeddingEnabled(enable)


    :param enable: :class:`PySide.QtCore.bool`




    Enabled or disables font embedding depending on ``enable`` .

    Currently this option is only supported on X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.fontEmbeddingEnabled` 


.. method:: PySide.QtGui.QPrinter.setFromTo(fromPage, toPage)


    :param fromPage: :class:`PySide.QtCore.int`
    :param toPage: :class:`PySide.QtCore.int`




    Sets the range of pages to be printed to cover the pages with numbers specified by ``from`` and ``to`` , where ``from`` corresponds to the first page in the range and ``to`` corresponds to the last.

    .. note::  Pages in a document are numbered according to the convention that the first page is page 1. However, if ``from`` and ``to`` are both set to 0, the *whole document will be printed* .

    This function is mostly used to set a default value that the user can override in the print dialog when you call :meth:`~PySide.QtGui.QPrinter.setup` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.fromPage`  :meth:`PySide.QtGui.QPrinter.toPage` 


.. method:: PySide.QtGui.QPrinter.setFullPage(arg__1)


    :param arg__1: :class:`PySide.QtCore.bool`




    If ``fp`` is true, enables support for painting over the entire page; otherwise restricts painting to the printable area reported by the device.

    By default, full page printing is disabled. In this case, the origin of the :class:`PySide.QtGui.QPrinter` 's coordinate system coincides with the top-left corner of the printable area.

    If full page printing is enabled, the origin of the :class:`PySide.QtGui.QPrinter` 's coordinate system coincides with the top-left corner of the paper itself. In this case, the :attr:`device metrics<QPaintDevice.PaintDeviceMetric>` will report the exact same dimensions as indicated by :attr:`QPrinter.PaperSize` . It may not be possible to print on the entire physical page because of the printer's margins, so the application must account for the margins itself.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.fullPage`  :meth:`PySide.QtGui.QPrinter.setPaperSize`  :meth:`PySide.QtGui.QPaintDevice.width`  :meth:`PySide.QtGui.QPaintDevice.height`  :ref:`Printing with Qt<printing.html>` 


.. method:: PySide.QtGui.QPrinter.setNumCopies(arg__1)


    :param arg__1: :class:`PySide.QtCore.int`




    Sets the number of copies to be printed to ``numCopies`` .

    The printer driver reads this setting and prints the specified number of copies.

    Use :meth:`PySide.QtGui.QPrinter.setCopyCount` instead.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.numCopies` 


.. method:: PySide.QtGui.QPrinter.setOrientation(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.Orientation`




    Sets the print orientation to ``orientation`` .

    The orientation can be either :attr:`QPrinter.Portrait<QPrinter.Orientation>` or :attr:`QPrinter.Landscape<QPrinter.Orientation>` .

    The printer driver reads this setting and prints using the specified orientation.

    On Windows, this option can be changed while printing and will take effect from the next call to :meth:`PySide.QtGui.QPrinter.newPage` .

    On Mac OS X, changing the orientation during a print job has no effect.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.orientation` 


.. method:: PySide.QtGui.QPrinter.setOutputFileName(arg__1)


    :param arg__1: unicode




    Sets the name of the output file to ``fileName`` .

    Setting a null or empty name (0 or "") disables printing to a file. Setting a non-empty name enables printing to a file.

    This can change the value of :meth:`PySide.QtGui.QPrinter.outputFormat` . If the file name has the suffix ".ps" then PostScript is automatically selected as output format. If the file name has the ".pdf" suffix PDF is generated. If the file name has a suffix other than ".ps" and ".pdf", the output format used is the one set with :meth:`PySide.QtGui.QPrinter.setOutputFormat` .

    :class:`PySide.QtGui.QPrinter` uses Qt's cross-platform PostScript or PDF print engines respectively. If you can produce this format natively, for example Mac OS X can generate PDF's from its print engine, set the output format back to :attr:`NativeFormat<QPrinter.OutputFormat>` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.outputFileName`  :meth:`~PySide.QtGui.QPrinter.setOutputToFile`  :meth:`PySide.QtGui.QPrinter.setOutputFormat` 


.. method:: PySide.QtGui.QPrinter.setOutputFormat(format)


    :param format: :attr:`PySide.QtGui.QPrinter.OutputFormat`




    Sets the output format for this printer to ``format`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.outputFormat` 


.. method:: PySide.QtGui.QPrinter.setPageMargins(left, top, right, bottom, unit)


    :param left: :class:`PySide.QtCore.qreal`
    :param top: :class:`PySide.QtCore.qreal`
    :param right: :class:`PySide.QtCore.qreal`
    :param bottom: :class:`PySide.QtCore.qreal`
    :param unit: :attr:`PySide.QtGui.QPrinter.Unit`




    This function sets the ``left`` , ``top`` , ``right`` and ``bottom`` page margins for this printer. The unit of the margins are specified with the ``unit`` parameter.



.. method:: PySide.QtGui.QPrinter.setPageOrder(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.PageOrder`




    Sets the page order to ``pageOrder`` .

    The page order can be :attr:`QPrinter.FirstPageFirst<QPrinter.PageOrder>` or :attr:`QPrinter.LastPageFirst<QPrinter.PageOrder>` . The application is responsible for reading the page order and printing accordingly.

    This function is mostly useful for setting a default value that the user can override in the print dialog.

    This function is only supported under X11.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.pageOrder` 


.. method:: PySide.QtGui.QPrinter.setPageSize(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.PageSize`




    Sets the printer page size based on ``newPageSize`` .

    Use :meth:`PySide.QtGui.QPrinter.setPaperSize` instead.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.pageSize` 


.. method:: PySide.QtGui.QPrinter.setPaperSize(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.PageSize`







.. method:: PySide.QtGui.QPrinter.setPaperSize(paperSize, unit)


    :param paperSize: :class:`PySide.QtCore.QSizeF`
    :param unit: :attr:`PySide.QtGui.QPrinter.Unit`




    Sets the paper size based on ``paperSize`` in ``unit`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.paperSize` 


.. method:: PySide.QtGui.QPrinter.setPaperSource(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QPrinter.PaperSource`




    Sets the paper source setting to ``source`` .

    Windows only: This option can be changed while printing and will take effect from the next call to :meth:`PySide.QtGui.QPrinter.newPage`

    .. seealso::  :meth:`PySide.QtGui.QPrinter.paperSource` 


.. method:: PySide.QtGui.QPrinter.setPrintProgram(arg__1)


    :param arg__1: unicode




    Sets the name of the program that should do the print job to ``printProg`` .

    On X11, this function sets the program to call with the PostScript output. On other platforms, it has no effect.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.printProgram` 


.. method:: PySide.QtGui.QPrinter.setPrintRange(range)


    :param range: :attr:`PySide.QtGui.QPrinter.PrintRange`




    Sets the print range option in to be ``range`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.printRange` 


.. method:: PySide.QtGui.QPrinter.setPrinterName(arg__1)


    :param arg__1: unicode




    Sets the printer name to ``name`` .

    .. seealso::  :meth:`PySide.QtGui.QPrinter.printerName`  :meth:`PySide.QtGui.QPrinter.isValid` 


.. method:: PySide.QtGui.QPrinter.setResolution(arg__1)


    :param arg__1: :class:`PySide.QtCore.int`




    Requests that the printer prints at ``dpi`` or as near to ``dpi`` as possible.

    This setting affects the coordinate system as returned by, for example :meth:`QPainter.viewport()<PySide.QtGui.QPainter.viewport>` .

    This function must be called before :meth:`QPainter.begin()<PySide.QtGui.QPainter.begin>` to have an effect on all platforms.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.resolution`  :meth:`PySide.QtGui.QPrinter.setPaperSize` 


.. method:: PySide.QtGui.QPrinter.supportedResolutions()


    :rtype: 




    Returns a list of the resolutions (a list of dots-per-inch integers) that the printer says it supports.

    For X11 where all printing is directly to postscript, this function will always return a one item list containing only the postscript resolution, i.e., 72 (72 dpi -- but see :attr:`QPrinter.PrinterMode` ).



.. method:: PySide.QtGui.QPrinter.supportsMultipleCopies()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the printer supports printing multiple copies of the same document in one job; otherwise false is returned.

    On most systems this function will return true. However, on X11 systems that do not support CUPS, this function will return false. That means the application has to handle the number of copies by printing the same document the required number of times.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setCopyCount`  :meth:`PySide.QtGui.QPrinter.copyCount` 


.. method:: PySide.QtGui.QPrinter.toPage()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of the last page in a range of pages to be printed (the "to page" setting). Pages in a document are numbered according to the convention that the first page is page 1.

    By default, this function returns a special value of 0, meaning that the "to page" setting is unset.

    .. note::  If :meth:`PySide.QtGui.QPrinter.fromPage` and :meth:`PySide.QtGui.QPrinter.toPage` both return 0, this indicates that *the whole document will be printed* .

    The programmer is responsible for reading this setting and printing accordingly.

    .. seealso::  :meth:`PySide.QtGui.QPrinter.setFromTo`  :meth:`PySide.QtGui.QPrinter.fromPage` 



