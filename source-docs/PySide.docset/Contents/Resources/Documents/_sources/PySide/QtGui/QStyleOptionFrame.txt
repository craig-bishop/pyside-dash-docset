.. module:: PySide.QtGui
.. _QStyleOptionFrame:

QStyleOptionFrame
*****************

.. inheritance-diagram:: QStyleOptionFrame
    :parts: 2

**Inherited by:** :ref:`QStyleOptionFrameV2`, :ref:`QStyleOptionFrameV3`

Detailed Description
--------------------



    The :class:`PySide.QtGui.QStyleOptionFrame` class is used to describe the parameters for drawing a frame.

    :class:`PySide.QtGui.QStyleOptionFrame` is used for drawing several built-in Qt widgets, including :class:`PySide.QtGui.QFrame` , :class:`PySide.QtGui.QGroupBox` , :class:`PySide.QtGui.QLineEdit` , and :class:`PySide.QtGui.QMenu` . Note that to describe the parameters necessary for drawing a frame in Qt 4.1 or above, you must use the :class:`PySide.QtGui.QStyleOptionFrameV2` subclass.

    An instance of the :class:`PySide.QtGui.QStyleOptionFrame` class has :ref:`type<qstyleoption.html#type-var>` :attr:`SO_Frame<QStyleOption.OptionType>` and :ref:`version<qstyleoption.html#version-var>` 1.

    The type is used internally by :class:`PySide.QtGui.QStyleOption` , its subclasses, and :meth:`~PySide.QtGui.QStyleOptionFrame.qstyleoption\_cast` to determine the type of style option. In general you do not need to worry about this unless you want to create your own :class:`PySide.QtGui.QStyleOption` subclass and your own styles. The version is used by :class:`PySide.QtGui.QStyleOption` subclasses to implement extensions without breaking compatibility. If you use :meth:`~PySide.QtGui.QStyleOptionFrame.qstyleoption\_cast` , you normally do not need to check it.

    If you create your own :class:`PySide.QtGui.QStyle` subclass, you should handle both :class:`PySide.QtGui.QStyleOptionFrame` and :class:`PySide.QtGui.QStyleOptionFrameV2` .

    For an example demonstrating how style options can be used, see the :ref:`Styles<widgets/styles>` example.

    .. seealso::  :class:`PySide.QtGui.QStyleOptionFrameV2`  :class:`PySide.QtGui.QStyleOption` 

.. class:: QStyleOptionFrame()
           QStyleOptionFrame(other)
           QStyleOptionFrame(version)

    :param version: :class:`PySide.QtCore.int`
    :param other: :class:`PySide.QtGui.QStyleOptionFrame`

    Constructs a :class:`PySide.QtGui.QStyleOptionFrame` , initializing the members variables to their default values.


    Constructs a copy of the ``other`` style option.



.. attribute:: PySide.QtGui.QStyleOptionFrame.StyleOptionVersion

    This enum is used to hold information about the version of the style option, and is defined for each :class:`PySide.QtGui.QStyleOption` subclass.

    +-------------------------+-----------+
    |Constant                 |Description|
    +=========================+===========+
    |QStyleOptionFrame.Version|1          |
    +-------------------------+-----------+

    The version is used by :class:`PySide.QtGui.QStyleOption` subclasses to implement extensions without breaking compatibility. If you use :meth:`~PySide.QtGui.QStyleOptionFrame.qstyleoption\_cast` , you normally do not need to check it.

    .. seealso::  :attr:`QStyleOptionFrame.StyleOptionType` 

.. attribute:: PySide.QtGui.QStyleOptionFrame.StyleOptionType

    This enum is used to hold information about the type of the style option, and is defined for each :class:`PySide.QtGui.QStyleOption` subclass.

    +----------------------+----------------------------------------------------------------------------------------------+
    |Constant              |Description                                                                                   |
    +======================+==============================================================================================+
    |QStyleOptionFrame.Type|The type of style option provided ( :attr:`SO_Frame<QStyleOption.OptionType>` for this class).|
    +----------------------+----------------------------------------------------------------------------------------------+

    The type is used internally by :class:`PySide.QtGui.QStyleOption` , its subclasses, and :meth:`~PySide.QtGui.QStyleOptionFrame.qstyleoption\_cast` to determine the type of style option. In general you do not need to worry about this unless you want to create your own :class:`PySide.QtGui.QStyleOption` subclass and your own styles.

    .. seealso::  :attr:`QStyleOptionFrame.StyleOptionVersion` 

.. attribute:: PySide.QtGui.QStyleOptionFrame.lineWidth


.. attribute:: PySide.QtGui.QStyleOptionFrame.midLineWidth



