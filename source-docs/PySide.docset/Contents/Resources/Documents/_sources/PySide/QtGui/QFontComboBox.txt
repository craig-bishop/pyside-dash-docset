.. module:: PySide.QtGui
.. _QFontComboBox:

QFontComboBox
*************

.. inheritance-diagram:: QFontComboBox
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`currentFont<PySide.QtGui.QFontComboBox.currentFont>` ()
*    def :meth:`fontFilters<PySide.QtGui.QFontComboBox.fontFilters>` ()
*    def :meth:`setFontFilters<PySide.QtGui.QFontComboBox.setFontFilters>` (filters)
*    def :meth:`setWritingSystem<PySide.QtGui.QFontComboBox.setWritingSystem>` (arg__1)
*    def :meth:`writingSystem<PySide.QtGui.QFontComboBox.writingSystem>` ()


Slots
^^^^^
.. container:: function_list

*    def :meth:`setCurrentFont<PySide.QtGui.QFontComboBox.setCurrentFont>` (f)


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`currentFontChanged<PySide.QtGui.QFontComboBox.currentFontChanged>` (f)


Detailed Description
--------------------



    The :class:`PySide.QtGui.QFontComboBox` widget is a combobox that lets the user select a font family.

    The combobox is populated with an alphabetized list of font family names, such as Arial, Helvetica, and Times New Roman. Family names are displayed using the actual font when possible. For fonts such as Symbol, where the name is not representable in the font itself, a sample of the font is displayed next to the family name.

    :class:`PySide.QtGui.QFontComboBox` is often used in toolbars, in conjunction with a :class:`PySide.QtGui.QComboBox` for controlling the font size and two :class:`PySide.QtGui.QToolButton` s for bold and italic.

    When the user selects a new font, the :meth:`PySide.QtGui.QFontComboBox.currentFontChanged` signal is emitted in addition to :meth:`PySide.QtGui.QComboBox.currentIndexChanged` .

    Call :meth:`PySide.QtGui.QFontComboBox.setWritingSystem` to tell :class:`PySide.QtGui.QFontComboBox` to show only fonts that support a given writing system, and :meth:`PySide.QtGui.QFontComboBox.setFontFilters` to filter out certain types of fonts as e.g. non scalable fonts or monospaced fonts.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/windowsxp-fontcombobox.png

    .. seealso::  :class:`PySide.QtGui.QComboBox`  :class:`PySide.QtGui.QFont`  :class:`PySide.QtGui.QFontInfo`  :class:`PySide.QtGui.QFontMetrics`  :class:`PySide.QtGui.QFontDatabase`  :ref:`Character Map Example<widgets/charactermap>` 

.. class:: QFontComboBox([parent=None])

    :param parent: :class:`PySide.QtGui.QWidget`

    Constructs a font combobox with the given ``parent`` .


.. attribute:: PySide.QtGui.QFontComboBox.FontFilter

    This enum can be used to only show certain types of fonts in the font combo box.

    +-------------------------------+-----------------------+
    |Constant                       |Description            |
    +===============================+=======================+
    |QFontComboBox.AllFonts         |Show all fonts         |
    +-------------------------------+-----------------------+
    |QFontComboBox.ScalableFonts    |Show scalable fonts    |
    +-------------------------------+-----------------------+
    |QFontComboBox.NonScalableFonts |Show non scalable fonts|
    +-------------------------------+-----------------------+
    |QFontComboBox.MonospacedFonts  |Show monospaced fonts  |
    +-------------------------------+-----------------------+
    |QFontComboBox.ProportionalFonts|Show proportional fonts|
    +-------------------------------+-----------------------+


.. method:: PySide.QtGui.QFontComboBox.currentFont()


    :rtype: :class:`PySide.QtGui.QFont`




    This property holds the currently selected font.

    .. seealso::  :meth:`PySide.QtGui.QFontComboBox.currentFontChanged`  :meth:`PySide.QtGui.QComboBox.currentIndex`  :meth:`PySide.QtGui.QComboBox.currentText` 


.. method:: PySide.QtGui.QFontComboBox.currentFontChanged(f)


    :param f: :class:`PySide.QtGui.QFont`






.. method:: PySide.QtGui.QFontComboBox.fontFilters()


    :rtype: :class:`PySide.QtGui.QFontComboBox.FontFilters`




    This property holds the filter for the combobox.

    By default, all fonts are listed.

    .. seealso::  :meth:`PySide.QtGui.QFontComboBox.writingSystem` 


.. method:: PySide.QtGui.QFontComboBox.setCurrentFont(f)


    :param f: :class:`PySide.QtGui.QFont`




    This property holds the currently selected font.

    .. seealso::  :meth:`PySide.QtGui.QFontComboBox.currentFontChanged`  :meth:`PySide.QtGui.QComboBox.currentIndex`  :meth:`PySide.QtGui.QComboBox.currentText` 


.. method:: PySide.QtGui.QFontComboBox.setFontFilters(filters)


    :param filters: :class:`PySide.QtGui.QFontComboBox.FontFilters`




    This property holds the filter for the combobox.

    By default, all fonts are listed.

    .. seealso::  :meth:`PySide.QtGui.QFontComboBox.writingSystem` 


.. method:: PySide.QtGui.QFontComboBox.setWritingSystem(arg__1)


    :param arg__1: :attr:`PySide.QtGui.QFontDatabase.WritingSystem`




    This property holds the writing system that serves as a filter for the combobox.

    If ``script`` is :attr:`QFontDatabase.Any<QFontDatabase.WritingSystem>` (the default), all fonts are listed.

    .. seealso::  :meth:`PySide.QtGui.QFontComboBox.fontFilters` 


.. method:: PySide.QtGui.QFontComboBox.writingSystem()


    :rtype: :attr:`PySide.QtGui.QFontDatabase.WritingSystem`




    This property holds the writing system that serves as a filter for the combobox.

    If ``script`` is :attr:`QFontDatabase.Any<QFontDatabase.WritingSystem>` (the default), all fonts are listed.

    .. seealso::  :meth:`PySide.QtGui.QFontComboBox.fontFilters` 



