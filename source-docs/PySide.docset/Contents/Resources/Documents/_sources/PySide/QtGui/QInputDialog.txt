.. module:: PySide.QtGui
.. _QInputDialog:

QInputDialog
************

.. inheritance-diagram:: QInputDialog
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`cancelButtonText<PySide.QtGui.QInputDialog.cancelButtonText>` ()
*    def :meth:`comboBoxItems<PySide.QtGui.QInputDialog.comboBoxItems>` ()
*    def :meth:`doubleDecimals<PySide.QtGui.QInputDialog.doubleDecimals>` ()
*    def :meth:`doubleMaximum<PySide.QtGui.QInputDialog.doubleMaximum>` ()
*    def :meth:`doubleMinimum<PySide.QtGui.QInputDialog.doubleMinimum>` ()
*    def :meth:`doubleValue<PySide.QtGui.QInputDialog.doubleValue>` ()
*    def :meth:`inputMode<PySide.QtGui.QInputDialog.inputMode>` ()
*    def :meth:`intMaximum<PySide.QtGui.QInputDialog.intMaximum>` ()
*    def :meth:`intMinimum<PySide.QtGui.QInputDialog.intMinimum>` ()
*    def :meth:`intStep<PySide.QtGui.QInputDialog.intStep>` ()
*    def :meth:`intValue<PySide.QtGui.QInputDialog.intValue>` ()
*    def :meth:`isComboBoxEditable<PySide.QtGui.QInputDialog.isComboBoxEditable>` ()
*    def :meth:`labelText<PySide.QtGui.QInputDialog.labelText>` ()
*    def :meth:`okButtonText<PySide.QtGui.QInputDialog.okButtonText>` ()
*    def :meth:`open<PySide.QtGui.QInputDialog.open>` (receiver, member)
*    def :meth:`setCancelButtonText<PySide.QtGui.QInputDialog.setCancelButtonText>` (text)
*    def :meth:`setComboBoxEditable<PySide.QtGui.QInputDialog.setComboBoxEditable>` (editable)
*    def :meth:`setComboBoxItems<PySide.QtGui.QInputDialog.setComboBoxItems>` (items)
*    def :meth:`setDoubleDecimals<PySide.QtGui.QInputDialog.setDoubleDecimals>` (decimals)
*    def :meth:`setDoubleMaximum<PySide.QtGui.QInputDialog.setDoubleMaximum>` (max)
*    def :meth:`setDoubleMinimum<PySide.QtGui.QInputDialog.setDoubleMinimum>` (min)
*    def :meth:`setDoubleRange<PySide.QtGui.QInputDialog.setDoubleRange>` (min, max)
*    def :meth:`setDoubleValue<PySide.QtGui.QInputDialog.setDoubleValue>` (value)
*    def :meth:`setInputMode<PySide.QtGui.QInputDialog.setInputMode>` (mode)
*    def :meth:`setIntMaximum<PySide.QtGui.QInputDialog.setIntMaximum>` (max)
*    def :meth:`setIntMinimum<PySide.QtGui.QInputDialog.setIntMinimum>` (min)
*    def :meth:`setIntRange<PySide.QtGui.QInputDialog.setIntRange>` (min, max)
*    def :meth:`setIntStep<PySide.QtGui.QInputDialog.setIntStep>` (step)
*    def :meth:`setIntValue<PySide.QtGui.QInputDialog.setIntValue>` (value)
*    def :meth:`setLabelText<PySide.QtGui.QInputDialog.setLabelText>` (text)
*    def :meth:`setOkButtonText<PySide.QtGui.QInputDialog.setOkButtonText>` (text)
*    def :meth:`setOption<PySide.QtGui.QInputDialog.setOption>` (option[, on=true])
*    def :meth:`setTextEchoMode<PySide.QtGui.QInputDialog.setTextEchoMode>` (mode)
*    def :meth:`setTextValue<PySide.QtGui.QInputDialog.setTextValue>` (text)
*    def :meth:`testOption<PySide.QtGui.QInputDialog.testOption>` (option)
*    def :meth:`textEchoMode<PySide.QtGui.QInputDialog.textEchoMode>` ()
*    def :meth:`textValue<PySide.QtGui.QInputDialog.textValue>` ()


Signals
^^^^^^^
.. container:: function_list

*    def :meth:`doubleValueChanged<PySide.QtGui.QInputDialog.doubleValueChanged>` (value)
*    def :meth:`doubleValueSelected<PySide.QtGui.QInputDialog.doubleValueSelected>` (value)
*    def :meth:`intValueChanged<PySide.QtGui.QInputDialog.intValueChanged>` (value)
*    def :meth:`intValueSelected<PySide.QtGui.QInputDialog.intValueSelected>` (value)
*    def :meth:`textValueChanged<PySide.QtGui.QInputDialog.textValueChanged>` (text)
*    def :meth:`textValueSelected<PySide.QtGui.QInputDialog.textValueSelected>` (text)


Static functions
^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`getDouble<PySide.QtGui.QInputDialog.getDouble>` (parent, title, label[, value=0[, minValue=-2147483647[, maxValue=2147483647[, decimals=1[, flags=0]]]]])
*    def :meth:`getInt<PySide.QtGui.QInputDialog.getInt>` (parent, title, label[, value=0[, minValue=-2147483647[, maxValue=2147483647[, step=1[, flags=0]]]]])
*    def :meth:`getInteger<PySide.QtGui.QInputDialog.getInteger>` (parent, title, label[, value=0[, minValue=-2147483647[, maxValue=2147483647[, step=1[, flags=0]]]]])
*    def :meth:`getItem<PySide.QtGui.QInputDialog.getItem>` (parent, title, label, items[, current=0[, editable=true[, flags=0]]])
*    def :meth:`getText<PySide.QtGui.QInputDialog.getText>` (parent, title, label[, echo=QLineEdit.Normal[, text=""[, flags=0]]])


Detailed Description
--------------------



    The :class:`PySide.QtGui.QInputDialog` class provides a simple convenience dialog to get a single value from the user.

    The input value can be a string, a number or an item from a list. A label must be set to tell the user what they should enter.

    Four static convenience functions are provided: :meth:`PySide.QtGui.QInputDialog.getText` , :meth:`PySide.QtGui.QInputDialog.getInt` , :meth:`PySide.QtGui.QInputDialog.getDouble` , and :meth:`PySide.QtGui.QInputDialog.getItem` . All the functions can be used in a similar way, for example:

    ::

            text = QInputDialog::getText(self, self.tr("QInputDialog().getText()"),
                                                 self.tr("User name:"), QLineEdit.Normal,
                                                 QDir().home().dirName(), ok)
            if ok and text:
                textLabel.setText(text)


    The ``ok`` variable is set to true if the user clicks **OK** ; otherwise it is set to false.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/inputdialogs.png

    The :ref:`Standard Dialogs<dialogs/standarddialogs>` example shows how to use :class:`PySide.QtGui.QInputDialog` as well as other built-in Qt dialogs.

    .. seealso::  :class:`PySide.QtGui.QMessageBox`  :ref:`Standard Dialogs Example<dialogs/standarddialogs>` 

.. class:: QInputDialog([parent=None[, flags=0]])

    :param flags: :class:`PySide.QtCore.Qt.WindowFlags`
    :param parent: :class:`PySide.QtGui.QWidget`



.. attribute:: PySide.QtGui.QInputDialog.InputMode

    This enum describes the different modes of input that can be selected for the dialog.

    +------------------------+--------------------------------------------------------------------+
    |Constant                |Description                                                         |
    +========================+====================================================================+
    |QInputDialog.TextInput  |Used to input text strings.                                         |
    +------------------------+--------------------------------------------------------------------+
    |QInputDialog.IntInput   |Used to input integers.                                             |
    +------------------------+--------------------------------------------------------------------+
    |QInputDialog.DoubleInput|Used to input floating point numbers with double precision accuracy.|
    +------------------------+--------------------------------------------------------------------+

    .. seealso::  :meth:`PySide.QtGui.QInputDialog.inputMode` 

.. attribute:: PySide.QtGui.QInputDialog.InputDialogOption

    This enum specifies various options that affect the look and feel of an input dialog.

    +----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |Constant                                |Description                                                                                                                                                                            |
    +========================================+=======================================================================================================================================================================================+
    |QInputDialog.NoButtons                  |Don't display **OK** and **Cancel** buttons. (Useful for "live dialogs".)                                                                                                              |
    +----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |QInputDialog.UseListViewForComboBoxItems|Use a :class:`PySide.QtGui.QListView` rather than a non-editable :class:`PySide.QtGui.QComboBox` for displaying the items set with :meth:`PySide.QtGui.QInputDialog.setComboBoxItems` .|
    +----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

    .. seealso::  :meth:`~PySide.QtGui.QInputDialog.options`  :meth:`PySide.QtGui.QInputDialog.setOption`  :meth:`PySide.QtGui.QInputDialog.testOption` 

.. method:: PySide.QtGui.QInputDialog.cancelButtonText()


    :rtype: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setCancelButtonText` 


.. method:: PySide.QtGui.QInputDialog.comboBoxItems()


    :rtype: list of strings




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setComboBoxItems` 


.. method:: PySide.QtGui.QInputDialog.doubleDecimals()


    :rtype: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setDoubleDecimals` 


.. method:: PySide.QtGui.QInputDialog.doubleMaximum()


    :rtype: :class:`PySide.QtCore.double`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setDoubleMaximum` 


.. method:: PySide.QtGui.QInputDialog.doubleMinimum()


    :rtype: :class:`PySide.QtCore.double`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setDoubleMinimum` 


.. method:: PySide.QtGui.QInputDialog.doubleValue()


    :rtype: :class:`PySide.QtCore.double`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setDoubleValue` 


.. method:: PySide.QtGui.QInputDialog.doubleValueChanged(value)


    :param value: :class:`PySide.QtCore.double`






.. method:: PySide.QtGui.QInputDialog.doubleValueSelected(value)


    :param value: :class:`PySide.QtCore.double`






.. staticmethod:: PySide.QtGui.QInputDialog.getDouble(parent, title, label[, value=0[, minValue=-2147483647[, maxValue=2147483647[, decimals=1[, flags=0]]]]])


    :param parent: :class:`PySide.QtGui.QWidget`
    :param title: unicode
    :param label: unicode
    :param value: :class:`PySide.QtCore.double`
    :param minValue: :class:`PySide.QtCore.double`
    :param maxValue: :class:`PySide.QtCore.double`
    :param decimals: :class:`PySide.QtCore.int`
    :param flags: :class:`PySide.QtCore.Qt.WindowFlags`
    :rtype: :class:`PySide.QtCore.double`







.. staticmethod:: PySide.QtGui.QInputDialog.getInt(parent, title, label[, value=0[, minValue=-2147483647[, maxValue=2147483647[, step=1[, flags=0]]]]])


    :param parent: :class:`PySide.QtGui.QWidget`
    :param title: unicode
    :param label: unicode
    :param value: :class:`PySide.QtCore.int`
    :param minValue: :class:`PySide.QtCore.int`
    :param maxValue: :class:`PySide.QtCore.int`
    :param step: :class:`PySide.QtCore.int`
    :param flags: :class:`PySide.QtCore.Qt.WindowFlags`
    :rtype: :class:`PySide.QtCore.int`







.. staticmethod:: PySide.QtGui.QInputDialog.getInteger(parent, title, label[, value=0[, minValue=-2147483647[, maxValue=2147483647[, step=1[, flags=0]]]]])


    :param parent: :class:`PySide.QtGui.QWidget`
    :param title: unicode
    :param label: unicode
    :param value: :class:`PySide.QtCore.int`
    :param minValue: :class:`PySide.QtCore.int`
    :param maxValue: :class:`PySide.QtCore.int`
    :param step: :class:`PySide.QtCore.int`
    :param flags: :class:`PySide.QtCore.Qt.WindowFlags`
    :rtype: :class:`PySide.QtCore.int`







.. staticmethod:: PySide.QtGui.QInputDialog.getItem(parent, title, label, items[, current=0[, editable=true[, flags=0]]])


    :param parent: :class:`PySide.QtGui.QWidget`
    :param title: unicode
    :param label: unicode
    :param items: list of strings
    :param current: :class:`PySide.QtCore.int`
    :param editable: :class:`PySide.QtCore.bool`
    :param flags: :class:`PySide.QtCore.Qt.WindowFlags`
    :rtype: unicode







.. staticmethod:: PySide.QtGui.QInputDialog.getText(parent, title, label[, echo=QLineEdit.Normal[, text=""[, flags=0]]])


    :param parent: :class:`PySide.QtGui.QWidget`
    :param title: unicode
    :param label: unicode
    :param echo: :attr:`PySide.QtGui.QLineEdit.EchoMode`
    :param text: unicode
    :param flags: :class:`PySide.QtCore.Qt.WindowFlags`
    :rtype: unicode







.. method:: PySide.QtGui.QInputDialog.inputMode()


    :rtype: :attr:`PySide.QtGui.QInputDialog.InputMode`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setInputMode` 


.. method:: PySide.QtGui.QInputDialog.intMaximum()


    :rtype: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setIntMaximum` 


.. method:: PySide.QtGui.QInputDialog.intMinimum()


    :rtype: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setIntMinimum` 


.. method:: PySide.QtGui.QInputDialog.intStep()


    :rtype: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setIntStep` 


.. method:: PySide.QtGui.QInputDialog.intValue()


    :rtype: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setIntValue` 


.. method:: PySide.QtGui.QInputDialog.intValueChanged(value)


    :param value: :class:`PySide.QtCore.int`






.. method:: PySide.QtGui.QInputDialog.intValueSelected(value)


    :param value: :class:`PySide.QtCore.int`






.. method:: PySide.QtGui.QInputDialog.isComboBoxEditable()


    :rtype: :class:`PySide.QtCore.bool`






.. method:: PySide.QtGui.QInputDialog.labelText()


    :rtype: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setLabelText` 


.. method:: PySide.QtGui.QInputDialog.okButtonText()


    :rtype: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setOkButtonText` 


.. method:: PySide.QtGui.QInputDialog.open(receiver, member)


    :param receiver: :class:`PySide.QtCore.QObject`
    :param member: str




    This is an overloaded function.

    This function connects one of its signals to the slot specified by ``receiver`` and ``member`` . The specific signal depends on the arguments that are specified in ``member`` . These are:


    * :meth:`PySide.QtGui.QInputDialog.textValueSelected` if ``member`` has a :class:`PySide.QtCore.QString` for its first argument.
    * :meth:`PySide.QtGui.QInputDialog.intValueSelected` if ``member`` has an int for its first argument.
    * :meth:`PySide.QtGui.QInputDialog.doubleValueSelected` if ``member`` has a double for its first argument.
    * :meth:`PySide.QtGui.QDialog.accepted` if ``member`` has NO arguments.

    The signal will be disconnected from the slot when the dialog is closed.



.. method:: PySide.QtGui.QInputDialog.setCancelButtonText(text)


    :param text: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.cancelButtonText` 


.. method:: PySide.QtGui.QInputDialog.setComboBoxEditable(editable)


    :param editable: :class:`PySide.QtCore.bool`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.isComboBoxEditable` 


.. method:: PySide.QtGui.QInputDialog.setComboBoxItems(items)


    :param items: list of strings




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.comboBoxItems` 


.. method:: PySide.QtGui.QInputDialog.setDoubleDecimals(decimals)


    :param decimals: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.doubleDecimals` 


.. method:: PySide.QtGui.QInputDialog.setDoubleMaximum(max)


    :param max: :class:`PySide.QtCore.double`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.doubleMaximum` 


.. method:: PySide.QtGui.QInputDialog.setDoubleMinimum(min)


    :param min: :class:`PySide.QtCore.double`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.doubleMinimum` 


.. method:: PySide.QtGui.QInputDialog.setDoubleRange(min, max)


    :param min: :class:`PySide.QtCore.double`
    :param max: :class:`PySide.QtCore.double`




    Sets the range of double precision floating point values accepted by the dialog when used in :attr:`DoubleInput<QInputDialog.InputMode>` mode, with minimum and maximum values specified by ``min`` and ``max`` respectively.



.. method:: PySide.QtGui.QInputDialog.setDoubleValue(value)


    :param value: :class:`PySide.QtCore.double`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.doubleValue` 


.. method:: PySide.QtGui.QInputDialog.setInputMode(mode)


    :param mode: :attr:`PySide.QtGui.QInputDialog.InputMode`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.inputMode` 


.. method:: PySide.QtGui.QInputDialog.setIntMaximum(max)


    :param max: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.intMaximum` 


.. method:: PySide.QtGui.QInputDialog.setIntMinimum(min)


    :param min: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.intMinimum` 


.. method:: PySide.QtGui.QInputDialog.setIntRange(min, max)


    :param min: :class:`PySide.QtCore.int`
    :param max: :class:`PySide.QtCore.int`




    Sets the range of integer values accepted by the dialog when used in :attr:`IntInput<QInputDialog.InputMode>` mode, with minimum and maximum values specified by ``min`` and ``max`` respectively.



.. method:: PySide.QtGui.QInputDialog.setIntStep(step)


    :param step: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.intStep` 


.. method:: PySide.QtGui.QInputDialog.setIntValue(value)


    :param value: :class:`PySide.QtCore.int`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.intValue` 


.. method:: PySide.QtGui.QInputDialog.setLabelText(text)


    :param text: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.labelText` 


.. method:: PySide.QtGui.QInputDialog.setOkButtonText(text)


    :param text: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.okButtonText` 


.. method:: PySide.QtGui.QInputDialog.setOption(option[, on=true])


    :param option: :attr:`PySide.QtGui.QInputDialog.InputDialogOption`
    :param on: :class:`PySide.QtCore.bool`




    Sets the given ``option`` to be enabled if ``on`` is true; otherwise, clears the given ``option`` .

    .. seealso::  :meth:`~PySide.QtGui.QInputDialog.options`  :meth:`PySide.QtGui.QInputDialog.testOption` 


.. method:: PySide.QtGui.QInputDialog.setTextEchoMode(mode)


    :param mode: :attr:`PySide.QtGui.QLineEdit.EchoMode`







.. method:: PySide.QtGui.QInputDialog.setTextValue(text)


    :param text: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.textValue` 


.. method:: PySide.QtGui.QInputDialog.testOption(option)


    :param option: :attr:`PySide.QtGui.QInputDialog.InputDialogOption`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the given ``option`` is enabled; otherwise, returns false.

    .. seealso::  :meth:`~PySide.QtGui.QInputDialog.options`  :meth:`PySide.QtGui.QInputDialog.setOption` 


.. method:: PySide.QtGui.QInputDialog.textEchoMode()


    :rtype: :attr:`PySide.QtGui.QLineEdit.EchoMode`




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setTextEchoMode` 


.. method:: PySide.QtGui.QInputDialog.textValue()


    :rtype: unicode




    .. seealso::  :meth:`PySide.QtGui.QInputDialog.setTextValue` 


.. method:: PySide.QtGui.QInputDialog.textValueChanged(text)


    :param text: unicode






.. method:: PySide.QtGui.QInputDialog.textValueSelected(text)


    :param text: unicode







