.. module:: PySide.QtXml
.. _QXmlAttributes:

QXmlAttributes
**************

.. inheritance-diagram:: QXmlAttributes
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`append<PySide.QtXml.QXmlAttributes.append>` (qName, uri, localPart, value)
*    def :meth:`clear<PySide.QtXml.QXmlAttributes.clear>` ()
*    def :meth:`count<PySide.QtXml.QXmlAttributes.count>` ()
*    def :meth:`index<PySide.QtXml.QXmlAttributes.index>` (qName)
*    def :meth:`index<PySide.QtXml.QXmlAttributes.index>` (uri, localPart)
*    def :meth:`length<PySide.QtXml.QXmlAttributes.length>` ()
*    def :meth:`localName<PySide.QtXml.QXmlAttributes.localName>` (index)
*    def :meth:`qName<PySide.QtXml.QXmlAttributes.qName>` (index)
*    def :meth:`type<PySide.QtXml.QXmlAttributes.type>` (index)
*    def :meth:`type<PySide.QtXml.QXmlAttributes.type>` (qName)
*    def :meth:`type<PySide.QtXml.QXmlAttributes.type>` (uri, localName)
*    def :meth:`uri<PySide.QtXml.QXmlAttributes.uri>` (index)
*    def :meth:`value<PySide.QtXml.QXmlAttributes.value>` (index)
*    def :meth:`value<PySide.QtXml.QXmlAttributes.value>` (qName)
*    def :meth:`value<PySide.QtXml.QXmlAttributes.value>` (uri, localName)


Detailed Description
--------------------



    The :class:`PySide.QtXml.QXmlAttributes` class provides XML attributes.

    If attributes are reported by :meth:`QXmlContentHandler.startElement()<PySide.QtXml.QXmlContentHandler.startElement>` this class is used to pass the attribute values.

    Use :meth:`PySide.QtXml.QXmlAttributes.index` to locate the position of an attribute in the list, :meth:`PySide.QtXml.QXmlAttributes.count` to retrieve the number of attributes, and :meth:`PySide.QtXml.QXmlAttributes.clear` to remove the attributes. New attributes can be added with :meth:`PySide.QtXml.QXmlAttributes.append` . Use :meth:`PySide.QtXml.QXmlAttributes.type` to get an attribute's type and :meth:`PySide.QtXml.QXmlAttributes.value` to get its value. The attribute's name is available from :meth:`PySide.QtXml.QXmlAttributes.localName` or :meth:`PySide.QtXml.QXmlAttributes.qName` , and its namespace URI from :meth:`PySide.QtXml.QXmlAttributes.uri` .


.. class:: QXmlAttributes()
           QXmlAttributes(QXmlAttributes)

    :param QXmlAttributes: :class:`PySide.QtXml.QXmlAttributes`

    Constructs an empty attribute list.




.. method:: PySide.QtXml.QXmlAttributes.append(qName, uri, localPart, value)


    :param qName: unicode
    :param uri: unicode
    :param localPart: unicode
    :param value: unicode




    Appends a new attribute entry to the list of attributes. The qualified name of the attribute is ``qName`` , the namespace URI is ``uri`` and the local name is ``localPart`` . The value of the attribute is ``value`` .

    .. seealso::  :meth:`PySide.QtXml.QXmlAttributes.qName`  :meth:`PySide.QtXml.QXmlAttributes.uri`  :meth:`PySide.QtXml.QXmlAttributes.localName`  :meth:`PySide.QtXml.QXmlAttributes.value` 


.. method:: PySide.QtXml.QXmlAttributes.clear()






    Clears the list of attributes.

    .. seealso::  :meth:`PySide.QtXml.QXmlAttributes.append` 


.. method:: PySide.QtXml.QXmlAttributes.count()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of attributes in the list. This function is equivalent to :meth:`PySide.QtXml.QXmlAttributes.length` .



.. method:: PySide.QtXml.QXmlAttributes.index(qName)


    :param qName: unicode
    :rtype: :class:`PySide.QtCore.int`




    Looks up the index of an attribute by the qualified name ``qName`` .

    Returns the index of the attribute or -1 if it wasn't found.

    .. seealso::  :ref:`Namespace Support via Features<xml-sax.html>` 


.. method:: PySide.QtXml.QXmlAttributes.index(uri, localPart)


    :param uri: unicode
    :param localPart: unicode
    :rtype: :class:`PySide.QtCore.int`




    This is an overloaded function.

    Looks up the index of an attribute by a namespace name.

    ``uri`` specifies the namespace URI, or an empty string if the name has no namespace URI. ``localPart`` specifies the attribute's local name.

    Returns the index of the attribute, or -1 if it wasn't found.

    .. seealso::  :ref:`Namespace Support via Features<xml-sax.html>` 


.. method:: PySide.QtXml.QXmlAttributes.length()


    :rtype: :class:`PySide.QtCore.int`




    Returns the number of attributes in the list.

    .. seealso::  :meth:`PySide.QtXml.QXmlAttributes.count` 


.. method:: PySide.QtXml.QXmlAttributes.localName(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: unicode




    Looks up an attribute's local name for the attribute at position ``index`` . If no namespace processing is done, the local name is an empty string.

    .. seealso::  :ref:`Namespace Support via Features<xml-sax.html>` 


.. method:: PySide.QtXml.QXmlAttributes.qName(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: unicode




    Looks up an attribute's XML 1.0 qualified name for the attribute at position ``index`` .

    .. seealso::  :ref:`Namespace Support via Features<xml-sax.html>` 


.. method:: PySide.QtXml.QXmlAttributes.type(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: unicode




    Looks up an attribute's type for the attribute at position ``index`` .

    Currently only "CDATA" is returned.



.. method:: PySide.QtXml.QXmlAttributes.type(uri, localName)


    :param uri: unicode
    :param localName: unicode
    :rtype: unicode




    This is an overloaded function.

    Looks up an attribute's type by namespace name.

    ``uri`` specifies the namespace URI and ``localName`` specifies the local name. If the name has no namespace URI, use an empty string for ``uri`` .

    Currently only "CDATA" is returned.



.. method:: PySide.QtXml.QXmlAttributes.type(qName)


    :param qName: unicode
    :rtype: unicode




    This is an overloaded function.

    Looks up an attribute's type for the qualified name ``qName`` .

    Currently only "CDATA" is returned.



.. method:: PySide.QtXml.QXmlAttributes.uri(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: unicode




    Looks up an attribute's namespace URI for the attribute at position ``index`` . If no namespace processing is done or if the attribute has no namespace, the namespace URI is an empty string.

    .. seealso::  :ref:`Namespace Support via Features<xml-sax.html>` 


.. method:: PySide.QtXml.QXmlAttributes.value(qName)


    :param qName: unicode
    :rtype: unicode




    This is an overloaded function.

    Returns an attribute's value for the qualified name ``qName`` , or an empty string if no attribute exists for the name given.

    .. seealso::  :ref:`Namespace Support via Features<xml-sax.html>` 


.. method:: PySide.QtXml.QXmlAttributes.value(uri, localName)


    :param uri: unicode
    :param localName: unicode
    :rtype: unicode




    This is an overloaded function.

    Returns an attribute's value by namespace name.

    ``uri`` specifies the namespace URI, or an empty string if the name has no namespace URI. ``localName`` specifies the attribute's local name.



.. method:: PySide.QtXml.QXmlAttributes.value(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: unicode




    Returns an attribute's value for the attribute at position ``index`` . The index must be a valid position (i.e., 0 <= ``index`` < :meth:`PySide.QtXml.QXmlAttributes.count` ).




