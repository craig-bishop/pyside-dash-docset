.. module:: PySide.QtXml
.. _QDomNodeList:

QDomNodeList
************

.. inheritance-diagram:: QDomNodeList
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtXml.QDomNodeList.__eq__>` (arg__1)
*    def :meth:`__ne__<PySide.QtXml.QDomNodeList.__ne__>` (arg__1)
*    def :meth:`at<PySide.QtXml.QDomNodeList.at>` (index)
*    def :meth:`count<PySide.QtXml.QDomNodeList.count>` ()
*    def :meth:`isEmpty<PySide.QtXml.QDomNodeList.isEmpty>` ()
*    def :meth:`item<PySide.QtXml.QDomNodeList.item>` (index)
*    def :meth:`length<PySide.QtXml.QDomNodeList.length>` ()
*    def :meth:`size<PySide.QtXml.QDomNodeList.size>` ()


Detailed Description
--------------------



    The :class:`PySide.QtXml.QDomNodeList` class is a list of :class:`PySide.QtXml.QDomNode` objects.

    Lists can be obtained by :meth:`QDomDocument.elementsByTagName()<PySide.QtXml.QDomDocument.elementsByTagName>` and :meth:`QDomNode.childNodes()<PySide.QtXml.QDomNode.childNodes>` . The Document Object Model (DOM) requires these lists to be "live": whenever you change the underlying document, the contents of the list will get updated.

    You can get a particular node from the list with :meth:`PySide.QtXml.QDomNodeList.item` . The number of items in the list is returned by :meth:`PySide.QtXml.QDomNodeList.length` .

    For further information about the Document Object Model see Level 1 and Level 2 Core. For a more general introduction of the DOM implementation see the :class:`PySide.QtXml.QDomDocument` documentation.

    .. seealso::  :meth:`QDomNode.childNodes()<PySide.QtXml.QDomNode.childNodes>`  :meth:`QDomDocument.elementsByTagName()<PySide.QtXml.QDomDocument.elementsByTagName>` 

.. class:: QDomNodeList()
           QDomNodeList(arg__1)

    :param arg__1: :class:`PySide.QtXml.QDomNodeList`

    Creates an empty node list.


    Constructs a copy of ``n`` .


.. method:: PySide.QtXml.QDomNodeList.at(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: :class:`PySide.QtXml.QDomNode`




    This function is provided for Qt API consistency. It is equivalent to :meth:`PySide.QtXml.QDomNodeList.item` .

    If ``index`` is negative or if ``index`` >= :meth:`PySide.QtXml.QDomNodeList.length` then a null node is returned (i.e. a node for which :meth:`QDomNode.isNull()<PySide.QtXml.QDomNode.isNull>` returns true).



.. method:: PySide.QtXml.QDomNodeList.count()


    :rtype: :class:`PySide.QtCore.int`




    This function is provided for Qt API consistency. It is equivalent to :meth:`PySide.QtXml.QDomNodeList.length` .



.. method:: PySide.QtXml.QDomNodeList.isEmpty()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the list contains no items; otherwise returns false. This function is provided for Qt API consistency.



.. method:: PySide.QtXml.QDomNodeList.item(index)


    :param index: :class:`PySide.QtCore.int`
    :rtype: :class:`PySide.QtXml.QDomNode`




    Returns the node at position ``index`` .

    If ``index`` is negative or if ``index`` >= :meth:`PySide.QtXml.QDomNodeList.length` then a null node is returned (i.e. a node for which :meth:`QDomNode.isNull()<PySide.QtXml.QDomNode.isNull>` returns true).

    .. seealso::  :meth:`PySide.QtXml.QDomNodeList.length` 


.. method:: PySide.QtXml.QDomNodeList.length()


    :rtype: :class:`PySide.QtCore.uint`




    Returns the number of nodes in the list.



.. method:: PySide.QtXml.QDomNodeList.__ne__(arg__1)


    :param arg__1: :class:`PySide.QtXml.QDomNodeList`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true the node list ``n`` and this node list are not equal; otherwise returns false.



.. method:: PySide.QtXml.QDomNodeList.__eq__(arg__1)


    :param arg__1: :class:`PySide.QtXml.QDomNodeList`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the node list ``n`` and this node list are equal; otherwise returns false.



.. method:: PySide.QtXml.QDomNodeList.size()


    :rtype: :class:`PySide.QtCore.int`




    This function is provided for Qt API consistency. It is equivalent to :meth:`PySide.QtXml.QDomNodeList.length` .




