.. module:: PySide.QtXmlPatterns
.. _QSourceLocation:

QSourceLocation
***************

.. inheritance-diagram:: QSourceLocation
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtXmlPatterns.QSourceLocation.__eq__>` (other)
*    def :meth:`__ne__<PySide.QtXmlPatterns.QSourceLocation.__ne__>` (other)
*    def :meth:`column<PySide.QtXmlPatterns.QSourceLocation.column>` ()
*    def :meth:`isNull<PySide.QtXmlPatterns.QSourceLocation.isNull>` ()
*    def :meth:`line<PySide.QtXmlPatterns.QSourceLocation.line>` ()
*    def :meth:`setColumn<PySide.QtXmlPatterns.QSourceLocation.setColumn>` (newColumn)
*    def :meth:`setLine<PySide.QtXmlPatterns.QSourceLocation.setLine>` (newLine)
*    def :meth:`setUri<PySide.QtXmlPatterns.QSourceLocation.setUri>` (newUri)
*    def :meth:`uri<PySide.QtXmlPatterns.QSourceLocation.uri>` ()


Detailed Description
--------------------



    The :class:`PySide.QtXmlPatterns.QSourceLocation` class identifies a location in a resource by URI, line, and column.

    :class:`PySide.QtXmlPatterns.QSourceLocation` is a simple value based class that has three properties, :meth:`PySide.QtXmlPatterns.QSourceLocation.uri` , :meth:`PySide.QtXmlPatterns.QSourceLocation.line` , and :meth:`PySide.QtXmlPatterns.QSourceLocation.column` , that, taken together, identify a certain point in a resource, e.g., a file or an in-memory document.

    :meth:`PySide.QtXmlPatterns.QSourceLocation.line` and :meth:`PySide.QtXmlPatterns.QSourceLocation.column` refer to character counts (not byte counts), and they both start from 1, as opposed to 0.


.. class:: QSourceLocation()
           QSourceLocation(other)
           QSourceLocation(uri[, line=-1[, column=-1]])

    :param line: :class:`PySide.QtCore.int`
    :param column: :class:`PySide.QtCore.int`
    :param uri: :class:`PySide.QtCore.QUrl`
    :param other: :class:`PySide.QtXmlPatterns.QSourceLocation`

    Construct a :class:`PySide.QtXmlPatterns.QSourceLocation` that doesn't identify anything at all.

    For a default constructed :meth:`PySide.QtXmlPatterns.QSourceLocation.QSourceLocation` , :meth:`PySide.QtXmlPatterns.QSourceLocation.isNull` returns ``true`` .


    Constructs a :class:`PySide.QtXmlPatterns.QSourceLocation` that is a copy of ``other`` .


    Constructs a :class:`PySide.QtXmlPatterns.QSourceLocation` with URI ``u`` , line ``l`` and column ``c`` .


.. method:: PySide.QtXmlPatterns.QSourceLocation.column()


    :rtype: :class:`PySide.QtCore.qint64`




    Returns the current column number. The column number refers to the count of characters, not bytes. The first column is column 1, not 0. The default value is -1, indicating the column number is unknown.

    .. seealso::  :meth:`PySide.QtXmlPatterns.QSourceLocation.setColumn` 


.. method:: PySide.QtXmlPatterns.QSourceLocation.isNull()


    :rtype: :class:`PySide.QtCore.bool`




    Returns ``true`` if this :class:`PySide.QtXmlPatterns.QSourceLocation` doesn't identify anything.

    For a default constructed :class:`PySide.QtXmlPatterns.QSourceLocation` , this function returns ``true`` . The same applies for any other :class:`PySide.QtXmlPatterns.QSourceLocation` whose :meth:`PySide.QtXmlPatterns.QSourceLocation.uri` is invalid.



.. method:: PySide.QtXmlPatterns.QSourceLocation.line()


    :rtype: :class:`PySide.QtCore.qint64`




    Returns the current line number. The first line number is 1, not 0. The default value is -1, indicating the line number is unknown.

    .. seealso::  :meth:`PySide.QtXmlPatterns.QSourceLocation.setLine` 


.. method:: PySide.QtXmlPatterns.QSourceLocation.__ne__(other)


    :param other: :class:`PySide.QtXmlPatterns.QSourceLocation`
    :rtype: :class:`PySide.QtCore.bool`




    Returns the opposite of applying operator==() for this :class:`PySide.QtXmlPatterns.QXmlName` and ``other`` .



.. method:: PySide.QtXmlPatterns.QSourceLocation.__eq__(other)


    :param other: :class:`PySide.QtXmlPatterns.QSourceLocation`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this :class:`PySide.QtXmlPatterns.QSourceLocation` is identical to ``other`` .

    Two :class:`PySide.QtXmlPatterns.QSourceLocation` instances are equal if their :meth:`PySide.QtXmlPatterns.QSourceLocation.uri` , :meth:`PySide.QtXmlPatterns.QSourceLocation.line` and :meth:`PySide.QtXmlPatterns.QSourceLocation.column` are equal.

    :class:`PySide.QtXmlPatterns.QSourceLocation` instances for which :meth:`PySide.QtXmlPatterns.QSourceLocation.isNull` returns true are considered equal.



.. method:: PySide.QtXmlPatterns.QSourceLocation.setColumn(newColumn)


    :param newColumn: :class:`PySide.QtCore.qint64`




    Sets the column number to ``newColumn`` . 0 is an invalid column number. The first column number is 1.

    .. seealso::  :meth:`PySide.QtXmlPatterns.QSourceLocation.column` 


.. method:: PySide.QtXmlPatterns.QSourceLocation.setLine(newLine)


    :param newLine: :class:`PySide.QtCore.qint64`




    Sets the line number to ``newLine`` . 0 is an invalid line number. The first line number is 1.

    .. seealso::  :meth:`PySide.QtXmlPatterns.QSourceLocation.line` 


.. method:: PySide.QtXmlPatterns.QSourceLocation.setUri(newUri)


    :param newUri: :class:`PySide.QtCore.QUrl`




    Sets the URI to ``newUri`` .

    .. seealso::  :meth:`PySide.QtXmlPatterns.QSourceLocation.uri` 


.. method:: PySide.QtXmlPatterns.QSourceLocation.uri()


    :rtype: :class:`PySide.QtCore.QUrl`




    Returns the resource that this :class:`PySide.QtXmlPatterns.QSourceLocation` refers to. For example, the resource could be a file in the local file system, if the URI scheme is ``file`` .

    .. seealso::  :meth:`PySide.QtXmlPatterns.QSourceLocation.setUri` 



