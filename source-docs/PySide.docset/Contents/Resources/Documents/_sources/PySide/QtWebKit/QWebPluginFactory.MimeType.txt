.. module:: PySide.QtWebKit
.. _QWebPluginFactory.MimeType:

QWebPluginFactory.MimeType
**************************

.. inheritance-diagram:: QWebPluginFactory.MimeType
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtWebKit.QWebPluginFactory.MimeType.__eq__>` (other)
*    def :meth:`__ne__<PySide.QtWebKit.QWebPluginFactory.MimeType.__ne__>` (other)


Detailed Description
--------------------



    The :class:`QWebPluginFactory.MimeType` structure describes a mime type supported by a plugin.


.. class:: PySide.QtWebKit.QWebPluginFactory.MimeType()
           PySide.QtWebKit.QWebPluginFactory.MimeType(MimeType)

    :param MimeType: :class:`PySide.QtWebKit.QWebPluginFactory::MimeType`





.. attribute:: PySide.QtWebKit.QWebPluginFactory.MimeType.description


.. attribute:: PySide.QtWebKit.QWebPluginFactory.MimeType.name


.. attribute:: PySide.QtWebKit.QWebPluginFactory.MimeType.fileExtensions


.. method:: PySide.QtWebKit.QWebPluginFactory.MimeType.__ne__(other)


    :param other: :class:`PySide.QtWebKit.QWebPluginFactory::MimeType`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this mimetype is different from the ``other`` mime type.



.. method:: PySide.QtWebKit.QWebPluginFactory.MimeType.__eq__(other)


    :param other: :class:`PySide.QtWebKit.QWebPluginFactory::MimeType`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this mimetype is the same as the ``other`` mime type.




