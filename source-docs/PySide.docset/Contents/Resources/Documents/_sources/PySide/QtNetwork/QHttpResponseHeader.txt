.. module:: PySide.QtNetwork
.. _QHttpResponseHeader:

QHttpResponseHeader
*******************

.. inheritance-diagram:: QHttpResponseHeader
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`reasonPhrase<PySide.QtNetwork.QHttpResponseHeader.reasonPhrase>` ()
*    def :meth:`setStatusLine<PySide.QtNetwork.QHttpResponseHeader.setStatusLine>` (code[, text=""[, majorVer=1[, minorVer=1]]])
*    def :meth:`statusCode<PySide.QtNetwork.QHttpResponseHeader.statusCode>` ()


Detailed Description
--------------------



    The :class:`PySide.QtNetwork.QHttpResponseHeader` class contains response header information for HTTP.

    This class is used by the :class:`PySide.QtNetwork.QHttp` class to report the header information that the client received from the server.

    HTTP responses have a status code that indicates the status of the response. This code is a 3-digit integer result code (for details see to RFC 1945). In addition to the status code, you can also specify a human-readable text that describes the reason for the code ("reason phrase"). This class allows you to get the status code and the reason phrase.

    .. seealso::  :class:`PySide.QtNetwork.QHttpRequestHeader`  :class:`PySide.QtNetwork.QHttp`  :ref:`HTTP Example<network/http>` 

.. class:: QHttpResponseHeader()
           QHttpResponseHeader(header)
           QHttpResponseHeader(str)
           QHttpResponseHeader(code[, text=""[, majorVer=1[, minorVer=1]]])

    :param majorVer: :class:`PySide.QtCore.int`
    :param str: unicode
    :param minorVer: :class:`PySide.QtCore.int`
    :param header: :class:`PySide.QtNetwork.QHttpResponseHeader`
    :param code: :class:`PySide.QtCore.int`
    :param text: unicode

    Constructs an empty HTTP response header.


    Constructs a copy of ``header`` .


    Constructs a HTTP response header from the string ``str`` . The string is parsed and the information is set. The ``str`` should consist of one or more "\r\n" delimited lines; the first line should be the status-line (format: HTTP-version, space, status-code, space, reason-phrase); each of remaining lines should have the format key, colon, space, value.


    Constructs a :class:`PySide.QtNetwork.QHttpResponseHeader` , setting the status code to ``code`` , the reason phrase to ``text`` and the protocol-version to ``majorVer`` and ``minorVer`` .

    .. seealso::  :meth:`PySide.QtNetwork.QHttpResponseHeader.statusCode`  :meth:`PySide.QtNetwork.QHttpResponseHeader.reasonPhrase`  :meth:`PySide.QtNetwork.QHttpResponseHeader.majorVersion`  :meth:`PySide.QtNetwork.QHttpResponseHeader.minorVersion` 

.. method:: PySide.QtNetwork.QHttpResponseHeader.reasonPhrase()


    :rtype: unicode




    Returns the reason phrase of the HTTP response header.

    .. seealso::  :meth:`PySide.QtNetwork.QHttpResponseHeader.statusCode`  :meth:`PySide.QtNetwork.QHttpResponseHeader.majorVersion`  :meth:`PySide.QtNetwork.QHttpResponseHeader.minorVersion` 


.. method:: PySide.QtNetwork.QHttpResponseHeader.setStatusLine(code[, text=""[, majorVer=1[, minorVer=1]]])


    :param code: :class:`PySide.QtCore.int`
    :param text: unicode
    :param majorVer: :class:`PySide.QtCore.int`
    :param minorVer: :class:`PySide.QtCore.int`




    Sets the status code to ``code`` , the reason phrase to ``text`` and the protocol-version to ``majorVer`` and ``minorVer`` .

    .. seealso::  :meth:`PySide.QtNetwork.QHttpResponseHeader.statusCode`  :meth:`PySide.QtNetwork.QHttpResponseHeader.reasonPhrase`  :meth:`PySide.QtNetwork.QHttpResponseHeader.majorVersion`  :meth:`PySide.QtNetwork.QHttpResponseHeader.minorVersion` 


.. method:: PySide.QtNetwork.QHttpResponseHeader.statusCode()


    :rtype: :class:`PySide.QtCore.int`




    Returns the status code of the HTTP response header.

    .. seealso::  :meth:`PySide.QtNetwork.QHttpResponseHeader.reasonPhrase`  :meth:`PySide.QtNetwork.QHttpResponseHeader.majorVersion`  :meth:`PySide.QtNetwork.QHttpResponseHeader.minorVersion` 



