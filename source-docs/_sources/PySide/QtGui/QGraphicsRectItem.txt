.. module:: PySide.QtGui
.. _QGraphicsRectItem:

QGraphicsRectItem
*****************

.. inheritance-diagram:: QGraphicsRectItem
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`rect<PySide.QtGui.QGraphicsRectItem.rect>` ()
*    def :meth:`setRect<PySide.QtGui.QGraphicsRectItem.setRect>` (rect)
*    def :meth:`setRect<PySide.QtGui.QGraphicsRectItem.setRect>` (x, y, w, h)


Detailed Description
--------------------



    The :class:`PySide.QtGui.QGraphicsRectItem` class provides a rectangle item that you can add to a :class:`PySide.QtGui.QGraphicsScene` .

    To set the item's rectangle, pass a :class:`PySide.QtCore.QRectF` to :class:`PySide.QtGui.QGraphicsRectItem` 's constructor, or call the :meth:`PySide.QtGui.QGraphicsRectItem.setRect` function. The :meth:`PySide.QtGui.QGraphicsRectItem.rect` function returns the current rectangle.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/graphicsview-rectitem.png

    :class:`PySide.QtGui.QGraphicsRectItem` uses the rectangle and the pen width to provide a reasonable implementation of :meth:`PySide.QtGui.QGraphicsRectItem.boundingRect` , :meth:`PySide.QtGui.QGraphicsRectItem.shape` , and :meth:`PySide.QtGui.QGraphicsRectItem.contains` . The :meth:`PySide.QtGui.QGraphicsRectItem.paint` function draws the rectangle using the item's associated pen and brush, which you can set by calling the :meth:`PySide.QtGui.QAbstractGraphicsShapeItem.setPen` and :meth:`PySide.QtGui.QAbstractGraphicsShapeItem.setBrush` functions.

    .. note::  The rendering of invalid rectangles, such as those with negative widths or heights, is undefined. If you cannot be sure that you are using valid rectangles (for example, if you are creating rectangles using data from an unreliable source) then you should use :meth:`QRectF.normalized()<PySide.QtCore.QRectF.normalized>` to create normalized rectangles, and use those instead.

    .. seealso::  :class:`PySide.QtGui.QGraphicsPathItem`  :class:`PySide.QtGui.QGraphicsEllipseItem`  :class:`PySide.QtGui.QGraphicsPolygonItem`  :class:`PySide.QtGui.QGraphicsTextItem`  :class:`PySide.QtGui.QGraphicsLineItem`  :class:`PySide.QtGui.QGraphicsPixmapItem`  :ref:`Graphics View Framework<graphicsview.html>` 

.. class:: QGraphicsRectItem([parent=None[, scene=None]])
           QGraphicsRectItem(rect[, parent=None[, scene=None]])
           QGraphicsRectItem(x, y, w, h[, parent=None[, scene=None]])

    :param w: :class:`PySide.QtCore.qreal`
    :param x: :class:`PySide.QtCore.qreal`
    :param y: :class:`PySide.QtCore.qreal`
    :param h: :class:`PySide.QtCore.qreal`
    :param rect: :class:`PySide.QtCore.QRectF`
    :param scene: :class:`PySide.QtGui.QGraphicsScene`
    :param parent: :class:`PySide.QtGui.QGraphicsItem`







.. method:: PySide.QtGui.QGraphicsRectItem.rect()


    :rtype: :class:`PySide.QtCore.QRectF`




    Returns the item's rectangle.

    .. seealso::  :meth:`PySide.QtGui.QGraphicsRectItem.setRect` 


.. method:: PySide.QtGui.QGraphicsRectItem.setRect(rect)


    :param rect: :class:`PySide.QtCore.QRectF`




    Sets the item's rectangle to be the given ``rectangle`` .

    .. seealso::  :meth:`PySide.QtGui.QGraphicsRectItem.rect` 


.. method:: PySide.QtGui.QGraphicsRectItem.setRect(x, y, w, h)


    :param x: :class:`PySide.QtCore.qreal`
    :param y: :class:`PySide.QtCore.qreal`
    :param w: :class:`PySide.QtCore.qreal`
    :param h: :class:`PySide.QtCore.qreal`




    Sets the item's rectangle to the rectangle defined by (``x`` , ``y`` ) and the given ``width`` and ``height`` .

    This convenience function is equivalent to calling ``setRect(QRectF(x, y, width, height))``\

    .. seealso::  :meth:`PySide.QtGui.QGraphicsRectItem.rect` 



