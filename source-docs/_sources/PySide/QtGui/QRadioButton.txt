.. module:: PySide.QtGui
.. _QRadioButton:

QRadioButton
************

.. inheritance-diagram:: QRadioButton
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`initStyleOption<PySide.QtGui.QRadioButton.initStyleOption>` (button)


Detailed Description
--------------------



    The :class:`PySide.QtGui.QRadioButton` widget provides a radio button with a text label.

    A :class:`PySide.QtGui.QRadioButton` is an option button that can be switched on (checked) or off (unchecked). Radio buttons typically present the user with a "one of many" choice. In a group of radio buttons only one radio button at a time can be checked; if the user selects another button, the previously selected button is switched off.

    Radio buttons are :meth:`PySide.QtGui.QAbstractButton.autoExclusive` by default. If auto-exclusive is enabled, radio buttons that belong to the same parent widget behave as if they were part of the same exclusive button group. If you need multiple exclusive button groups for radio buttons that belong to the same parent widget, put them into a :class:`PySide.QtGui.QButtonGroup` .

    Whenever a button is switched on or off it emits the :meth:`PySide.QtGui.QAbstractButton.toggled` signal. Connect to this signal if you want to trigger an action each time the button changes state. Use :meth:`PySide.QtGui.QAbstractButton.isChecked` to see if a particular button is selected.

    Just like :class:`PySide.QtGui.QPushButton` , a radio button displays text, and optionally a small icon. The icon is set with :meth:`PySide.QtGui.QAbstractButton.setIcon` . The text can be set in the constructor or with :meth:`PySide.QtGui.QAbstractButton.setText` . A shortcut key can be specified by preceding the preferred character with an ampersand in the text. For example:

    ::

        button = QRadioButton("Search from the &cursor", self)


    In this example the shortcut is *Alt+c* . See the :class:`QShortcut<~PySide.QtGui.QShortcut#mnemonic>` documentation for details (to display an actual ampersand, use '&&').

    Important inherited members: :meth:`PySide.QtGui.QAbstractButton.text` , :meth:`PySide.QtGui.QAbstractButton.setText` , :meth:`PySide.QtGui.QAbstractButton.text` , :meth:`PySide.QtGui.QAbstractButton.setDown` , :meth:`PySide.QtGui.QAbstractButton.isDown` , :meth:`PySide.QtGui.QAbstractButton.autoRepeat` , :meth:`PySide.QtGui.QAbstractButton.group` , :meth:`PySide.QtGui.QAbstractButton.setAutoRepeat` , :meth:`PySide.QtGui.QAbstractButton.toggle` , :meth:`PySide.QtGui.QAbstractButton.pressed` , :meth:`PySide.QtGui.QAbstractButton.released` , :meth:`PySide.QtGui.QAbstractButton.clicked` , and :meth:`PySide.QtGui.QAbstractButton.toggled` .

    +---------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/plastique-radiobutton.png|A radio button shown in the :ref:`Plastique widget style<gallery-plastique.html>` . |
    +---------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/windows-radiobutton.png  |A radio button shown in the :ref:`Windows XP widget style<gallery-windowsxp.html>` .|
    +---------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------+
    |.. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/macintosh-radiobutton.png|A radio button shown in the :ref:`Macintosh widget style<gallery-macintosh.html>` . |
    +---------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------+

    .. seealso::  :class:`PySide.QtGui.QPushButton`  :class:`PySide.QtGui.QToolButton`  :class:`PySide.QtGui.QCheckBox`  :ref:`GUI Design Handbook: Radio Button<guibooks.html>`  :ref:`Group Box Example<widgets/groupbox>` 

.. class:: QRadioButton([parent=None])
           QRadioButton(text[, parent=None])

    :param parent: :class:`PySide.QtGui.QWidget`
    :param text: unicode

    Constructs a radio button with the given ``parent`` , but with no text or pixmap.

    The ``parent`` argument is passed on to the :class:`PySide.QtGui.QAbstractButton` constructor.


    Constructs a radio button with the given ``parent`` and a ``text`` string.

    The ``parent`` argument is passed on to the :class:`PySide.QtGui.QAbstractButton` constructor.


.. method:: PySide.QtGui.QRadioButton.initStyleOption(button)


    :param button: :class:`PySide.QtGui.QStyleOptionButton`




    Initialize ``option`` with the values from this :class:`PySide.QtGui.QRadioButton` . This method is useful for subclasses when they need a :class:`PySide.QtGui.QStyleOptionButton` , but don't want to fill in all the information themselves.

    .. seealso::  :meth:`QStyleOption.initFrom()<PySide.QtGui.QStyleOption.initFrom>` 



