.. module:: PySide.QtGui
.. _QPainter.PixmapFragment:

QPainter.PixmapFragment
***********************

.. inheritance-diagram:: QPainter.PixmapFragment
    :parts: 2

.. note:: This class was introduced in Qt 4.7
Synopsis
--------

Static functions
^^^^^^^^^^^^^^^^
.. container:: function_list

*    def :meth:`create<PySide.QtGui.QPainter.PixmapFragment.create>` (pos, sourceRect[, scaleX=1[, scaleY=1[, rotation=0[, opacity=1]]]])


Detailed Description
--------------------



    This class is used in conjunction with the :meth:`QPainter.drawPixmapFragments()<PySide.QtGui.QPainter.drawPixmapFragments>` function to specify how a pixmap, or sub-rect of a pixmap, is drawn.

    The ``sourceLeft`` , ``sourceTop`` , ``width`` and ``height`` variables are used as a source rectangle within the pixmap passed into the :meth:`QPainter.drawPixmapFragments()<PySide.QtGui.QPainter.drawPixmapFragments>` function. The variables ``x`` , ``y`` , ``width`` and ``height`` are used to calculate the target rectangle that is drawn. ``x`` and ``y`` denotes the center of the target rectangle. The ``width`` and ``height`` in the target rectangle is scaled by the ``scaleX`` and ``scaleY`` values. The resulting target rectangle is then rotated ``rotation`` degrees around the ``x`` , ``y`` center point.

    .. seealso::  :meth:`QPainter.drawPixmapFragments()<PySide.QtGui.QPainter.drawPixmapFragments>` 

.. class:: PySide.QtGui.QPainter.PixmapFragment()
           PySide.QtGui.QPainter.PixmapFragment(PixmapFragment)

    :param PixmapFragment: :class:`PySide.QtGui.QPainter::PixmapFragment`





.. attribute:: PySide.QtGui.QPainter.PixmapFragment.width


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.scaleY


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.x


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.opacity


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.y


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.rotation


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.sourceLeft


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.height


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.sourceTop


.. attribute:: PySide.QtGui.QPainter.PixmapFragment.scaleX


.. staticmethod:: PySide.QtGui.QPainter.PixmapFragment.create(pos, sourceRect[, scaleX=1[, scaleY=1[, rotation=0[, opacity=1]]]])


    :param pos: :class:`PySide.QtCore.QPointF`
    :param sourceRect: :class:`PySide.QtCore.QRectF`
    :param scaleX: :class:`PySide.QtCore.qreal`
    :param scaleY: :class:`PySide.QtCore.qreal`
    :param rotation: :class:`PySide.QtCore.qreal`
    :param opacity: :class:`PySide.QtCore.qreal`
    :rtype: :class:`PySide.QtGui.QPainter::PixmapFragment`




    This is a convenience function that returns a :class:`QPainter.PixmapFragment` that is initialized with the ``pos`` , ``sourceRect`` , ``scaleX`` , ``scaleY`` , ``rotation`` , ``opacity`` parameters.




