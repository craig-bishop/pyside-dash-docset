.. module:: PySide.QtGui
.. _QShortcutEvent:

QShortcutEvent
**************

.. inheritance-diagram:: QShortcutEvent
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`isAmbiguous<PySide.QtGui.QShortcutEvent.isAmbiguous>` ()
*    def :meth:`key<PySide.QtGui.QShortcutEvent.key>` ()
*    def :meth:`shortcutId<PySide.QtGui.QShortcutEvent.shortcutId>` ()


Detailed Description
--------------------



    The :class:`PySide.QtGui.QShortcutEvent` class provides an event which is generated when the user presses a key combination.

    Normally you don't need to use this class directly; :class:`PySide.QtGui.QShortcut` provides a higher-level interface to handle shortcut keys.

    .. seealso::  :class:`PySide.QtGui.QShortcut` 

.. class:: QShortcutEvent(key, id[, ambiguous=false])

    :param key: :class:`PySide.QtGui.QKeySequence`
    :param id: :class:`PySide.QtCore.int`
    :param ambiguous: :class:`PySide.QtCore.bool`

    Constructs a shortcut event for the given ``key`` press, associated with the :class:`PySide.QtGui.QShortcut` ID ``id`` .

    ``ambiguous`` specifies whether there is more than one :class:`PySide.QtGui.QShortcut` for the same key sequence.


.. method:: PySide.QtGui.QShortcutEvent.isAmbiguous()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if the key sequence that triggered the event is ambiguous.

    .. seealso::  :meth:`QShortcut.activatedAmbiguously()<PySide.QtGui.QShortcut.activatedAmbiguously>` 


.. method:: PySide.QtGui.QShortcutEvent.key()


    :rtype: :class:`PySide.QtGui.QKeySequence`




    Returns the key sequence that triggered the event.



.. method:: PySide.QtGui.QShortcutEvent.shortcutId()


    :rtype: :class:`PySide.QtCore.int`




    Returns the ID of the :class:`PySide.QtGui.QShortcut` object for which this event was generated.

    .. seealso::  :meth:`QShortcut.id()<PySide.QtGui.QShortcut.id>` 



