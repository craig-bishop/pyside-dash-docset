.. module:: PySide.QtGui
.. _QPixmapCache.Key:

QPixmapCache.Key
****************

.. inheritance-diagram:: QPixmapCache.Key
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtGui.QPixmapCache.Key.__eq__>` (key)
*    def :meth:`__ne__<PySide.QtGui.QPixmapCache.Key.__ne__>` (key)


Detailed Description
--------------------



    The :class:`QPixmapCache.Key` class can be used for efficient access to the :class:`PySide.QtGui.QPixmapCache` .

    Use :meth:`QPixmapCache.insert()<PySide.QtGui.QPixmapCache.insert>` to receive an instance of Key generated by the pixmap cache. You can store the key in your own objects for a very efficient one-to-one object-to-pixmap mapping.


.. class:: PySide.QtGui.QPixmapCache.Key()
           PySide.QtGui.QPixmapCache.Key(other)

    :param other: :class:`PySide.QtGui.QPixmapCache::Key`

    Constructs an empty Key object.


    Constructs a copy of ``other`` .


.. method:: PySide.QtGui.QPixmapCache.Key.__ne__(key)


    :param key: :class:`PySide.QtGui.QPixmapCache::Key`
    :rtype: :class:`PySide.QtCore.bool`






.. method:: PySide.QtGui.QPixmapCache.Key.__eq__(key)


    :param key: :class:`PySide.QtGui.QPixmapCache::Key`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this key is the same as the given ``key`` ; otherwise returns false.




