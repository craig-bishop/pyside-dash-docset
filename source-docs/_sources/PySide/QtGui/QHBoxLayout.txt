.. module:: PySide.QtGui
.. _QHBoxLayout:

QHBoxLayout
***********

.. inheritance-diagram:: QHBoxLayout
    :parts: 2

Detailed Description
--------------------



    The :class:`PySide.QtGui.QHBoxLayout` class lines up widgets horizontally.

    This class is used to construct horizontal box layout objects. See :class:`PySide.QtGui.QBoxLayout` for details.

    The simplest use of the class is like this:

    ::

            window = QWidget()
            button1 = QPushButton("One")
            button2 = QPushButton("Two")
            button3 = QPushButton("Three")
            button4 = QPushButton("Four")
            button5 = QPushButton("Five")
        
            layout = QHBoxLayout()
            layout.addWidget(button1)
            layout.addWidget(button2)
            layout.addWidget(button3)
            layout.addWidget(button4)
            layout.addWidget(button5)

            window.setLayout(layout)
            window.show()


    First, we create the widgets we want in the layout. Then, we create the :class:`PySide.QtGui.QHBoxLayout` object and add the widgets into the layout. Finally, we call :meth:`QWidget.setLayout()<PySide.QtGui.QWidget.setLayout>` to install the :class:`PySide.QtGui.QHBoxLayout` object onto the widget. At that point, the widgets in the layout are reparented to have ``window`` as their parent.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/qhboxlayout-with-5-children.png

    .. seealso::  :class:`PySide.QtGui.QVBoxLayout`  :class:`PySide.QtGui.QGridLayout`  :class:`PySide.QtGui.QStackedLayout`  :ref:`Layout Management<layout.html>`  :ref:`Basic Layouts Example<layouts/basiclayouts>` 

.. class:: QHBoxLayout()
           QHBoxLayout(parent)

    :param parent: :class:`PySide.QtGui.QWidget`

    Constructs a new horizontal box. You must add it to another layout.


    Constructs a new top-level horizontal box with parent ``parent`` .



