.. module:: PySide.QtXml
.. _QDomNotation:

QDomNotation
************

.. inheritance-diagram:: QDomNotation
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`publicId<PySide.QtXml.QDomNotation.publicId>` ()
*    def :meth:`systemId<PySide.QtXml.QDomNotation.systemId>` ()


Detailed Description
--------------------



    The :class:`PySide.QtXml.QDomNotation` class represents an XML notation.

    A notation either declares, by name, the format of an unparsed entity (see section 4.7 of the XML 1.0 specification), or is used for formal declaration of processing instruction targets (see section 2.6 of the XML 1.0 specification).

    DOM does not support editing notation nodes; they are therefore read-only.

    A notation node does not have any parent.

    You can retrieve the :meth:`PySide.QtXml.QDomNotation.publicId` and :meth:`PySide.QtXml.QDomNotation.systemId` from a notation node.

    For further information about the Document Object Model see Level 1 and Level 2 Core. For a more general introduction of the DOM implementation see the :class:`PySide.QtXml.QDomDocument` documentation.


.. class:: QDomNotation()
           QDomNotation(x)

    :param x: :class:`PySide.QtXml.QDomNotation`

    Constructor.


    Constructs a copy of ``x`` .

    The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use :meth:`PySide.QtXml.QDomNode.cloneNode` .


.. method:: PySide.QtXml.QDomNotation.publicId()


    :rtype: unicode




    Returns the public identifier of this notation.



.. method:: PySide.QtXml.QDomNotation.systemId()


    :rtype: unicode




    Returns the system identifier of this notation.




