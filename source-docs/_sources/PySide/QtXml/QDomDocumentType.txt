.. module:: PySide.QtXml
.. _QDomDocumentType:

QDomDocumentType
****************

.. inheritance-diagram:: QDomDocumentType
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`entities<PySide.QtXml.QDomDocumentType.entities>` ()
*    def :meth:`internalSubset<PySide.QtXml.QDomDocumentType.internalSubset>` ()
*    def :meth:`name<PySide.QtXml.QDomDocumentType.name>` ()
*    def :meth:`notations<PySide.QtXml.QDomDocumentType.notations>` ()
*    def :meth:`publicId<PySide.QtXml.QDomDocumentType.publicId>` ()
*    def :meth:`systemId<PySide.QtXml.QDomDocumentType.systemId>` ()


Detailed Description
--------------------



    The :class:`PySide.QtXml.QDomDocumentType` class is the representation of the DTD in the document tree.

    The :class:`PySide.QtXml.QDomDocumentType` class allows read-only access to some of the data structures in the DTD: it can return a map of all :meth:`PySide.QtXml.QDomDocumentType.entities` and :meth:`PySide.QtXml.QDomDocumentType.notations` . In addition the function :meth:`PySide.QtXml.QDomDocumentType.name` returns the name of the document type as specified in the &lt;!DOCTYPE name&gt; tag. This class also provides the :meth:`PySide.QtXml.QDomDocumentType.publicId` , :meth:`PySide.QtXml.QDomDocumentType.systemId` and :meth:`PySide.QtXml.QDomDocumentType.internalSubset` functions.

    .. seealso::  :class:`PySide.QtXml.QDomDocument` 

.. class:: QDomDocumentType()
           QDomDocumentType(x)

    :param x: :class:`PySide.QtXml.QDomDocumentType`

    Creates an empty :class:`PySide.QtXml.QDomDocumentType` object.


    Constructs a copy of ``n`` .

    The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use :meth:`PySide.QtXml.QDomNode.cloneNode` .


.. method:: PySide.QtXml.QDomDocumentType.entities()


    :rtype: :class:`PySide.QtXml.QDomNamedNodeMap`




    Returns a map of all entities described in the DTD.



.. method:: PySide.QtXml.QDomDocumentType.internalSubset()


    :rtype: unicode




    Returns the internal subset of the document type or an empty string if there is no internal subset.

    .. seealso::  :meth:`PySide.QtXml.QDomDocumentType.publicId`  :meth:`PySide.QtXml.QDomDocumentType.systemId` 


.. method:: PySide.QtXml.QDomDocumentType.name()


    :rtype: unicode




    Returns the name of the document type as specified in the &lt;!DOCTYPE name&gt; tag.

    .. seealso::  :meth:`PySide.QtXml.QDomNode.nodeName` 


.. method:: PySide.QtXml.QDomDocumentType.notations()


    :rtype: :class:`PySide.QtXml.QDomNamedNodeMap`




    Returns a map of all notations described in the DTD.



.. method:: PySide.QtXml.QDomDocumentType.publicId()


    :rtype: unicode




    Returns the public identifier of the external DTD subset or an empty string if there is no public identifier.

    .. seealso::  :meth:`PySide.QtXml.QDomDocumentType.systemId`  :meth:`PySide.QtXml.QDomDocumentType.internalSubset`  :meth:`QDomImplementation.createDocumentType()<PySide.QtXml.QDomImplementation.createDocumentType>` 


.. method:: PySide.QtXml.QDomDocumentType.systemId()


    :rtype: unicode




    Returns the system identifier of the external DTD subset or an empty string if there is no system identifier.

    .. seealso::  :meth:`PySide.QtXml.QDomDocumentType.publicId`  :meth:`PySide.QtXml.QDomDocumentType.internalSubset`  :meth:`QDomImplementation.createDocumentType()<PySide.QtXml.QDomImplementation.createDocumentType>` 



