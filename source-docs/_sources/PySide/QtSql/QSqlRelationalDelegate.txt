.. module:: PySide.QtSql
.. _QSqlRelationalDelegate:

QSqlRelationalDelegate
**********************

.. inheritance-diagram:: QSqlRelationalDelegate
    :parts: 2

Detailed Description
--------------------



    The :class:`PySide.QtSql.QSqlRelationalDelegate` class provides a delegate that is used to display and edit data from a :class:`PySide.QtSql.QSqlRelationalTableModel` .

    Unlike the default delegate, :class:`PySide.QtSql.QSqlRelationalDelegate` provides a combobox for fields that are foreign keys into other tables. To use the class, simply call :meth:`QAbstractItemView.setItemDelegate()<PySide.QtGui.QAbstractItemView.setItemDelegate>` on the view with an instance of :class:`PySide.QtSql.QSqlRelationalDelegate` :

    ::

            view =  QTableView()
            view.setModel(model)
            view.setItemDelegate(QSqlRelationalDelegate(view))


    The :ref:`Relational Table Model<sql/relationaltablemodel>` example (shown below) illustrates how to use :class:`PySide.QtSql.QSqlRelationalDelegate` in conjunction with :class:`PySide.QtSql.QSqlRelationalTableModel` to provide tables with foreign key support.

    .. image:: ../../../../../../../src/qt-everywhere-opensource-src-4.7.2/doc/src/images/relationaltable.png

    .. seealso::  :class:`PySide.QtSql.QSqlRelationalTableModel`  :ref:`Model/View Programming<model-view-programming.html>` 

.. class:: QSqlRelationalDelegate([aParent=None])

    :param aParent: :class:`PySide.QtCore.QObject`

    Constructs a :class:`PySide.QtSql.QSqlRelationalDelegate` object with the given ``parent`` .



