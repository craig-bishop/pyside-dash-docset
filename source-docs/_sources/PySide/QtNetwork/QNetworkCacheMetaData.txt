.. module:: PySide.QtNetwork
.. _QNetworkCacheMetaData:

QNetworkCacheMetaData
*********************

.. inheritance-diagram:: QNetworkCacheMetaData
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<PySide.QtNetwork.QNetworkCacheMetaData.__eq__>` (other)
*    def :meth:`__ne__<PySide.QtNetwork.QNetworkCacheMetaData.__ne__>` (other)
*    def :meth:`attributes<PySide.QtNetwork.QNetworkCacheMetaData.attributes>` ()
*    def :meth:`expirationDate<PySide.QtNetwork.QNetworkCacheMetaData.expirationDate>` ()
*    def :meth:`isValid<PySide.QtNetwork.QNetworkCacheMetaData.isValid>` ()
*    def :meth:`lastModified<PySide.QtNetwork.QNetworkCacheMetaData.lastModified>` ()
*    def :meth:`rawHeaders<PySide.QtNetwork.QNetworkCacheMetaData.rawHeaders>` ()
*    def :meth:`saveToDisk<PySide.QtNetwork.QNetworkCacheMetaData.saveToDisk>` ()
*    def :meth:`setAttributes<PySide.QtNetwork.QNetworkCacheMetaData.setAttributes>` (attributes)
*    def :meth:`setExpirationDate<PySide.QtNetwork.QNetworkCacheMetaData.setExpirationDate>` (dateTime)
*    def :meth:`setLastModified<PySide.QtNetwork.QNetworkCacheMetaData.setLastModified>` (dateTime)
*    def :meth:`setRawHeaders<PySide.QtNetwork.QNetworkCacheMetaData.setRawHeaders>` (headers)
*    def :meth:`setSaveToDisk<PySide.QtNetwork.QNetworkCacheMetaData.setSaveToDisk>` (allow)
*    def :meth:`setUrl<PySide.QtNetwork.QNetworkCacheMetaData.setUrl>` (url)
*    def :meth:`url<PySide.QtNetwork.QNetworkCacheMetaData.url>` ()


Detailed Description
--------------------



    The :class:`PySide.QtNetwork.QNetworkCacheMetaData` class provides cache information.

    :class:`PySide.QtNetwork.QNetworkCacheMetaData` provides information about a cache file including the url, when it was last modified, when the cache file was created, headers for file and if the file should be saved onto a disk.

    .. seealso::  :class:`PySide.QtNetwork.QAbstractNetworkCache` 

.. class:: QNetworkCacheMetaData()
           QNetworkCacheMetaData(other)

    :param other: :class:`PySide.QtNetwork.QNetworkCacheMetaData`

    Constructs an invalid network cache meta data.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.isValid` 

    Constructs a copy of the ``other``\ :class:`PySide.QtNetwork.QNetworkCacheMetaData` .


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.attributes()


    :rtype: 




    Returns all the attributes stored with this cache item.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.setAttributes`  :attr:`QNetworkRequest.Attribute` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.expirationDate()


    :rtype: :class:`PySide.QtCore.QDateTime`




    Returns the date and time when the meta data expires.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.setExpirationDate` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.isValid()


    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this network cache meta data has attributes that have been set otherwise false.



.. method:: PySide.QtNetwork.QNetworkCacheMetaData.lastModified()


    :rtype: :class:`PySide.QtCore.QDateTime`




    Returns the date and time when the meta data was last modified.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.setLastModified` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.__ne__(other)


    :param other: :class:`PySide.QtNetwork.QNetworkCacheMetaData`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this meta data is not equal to the ``other`` meta data; otherwise returns false.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.operator==` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.__eq__(other)


    :param other: :class:`PySide.QtNetwork.QNetworkCacheMetaData`
    :rtype: :class:`PySide.QtCore.bool`




    Returns true if this meta data is equal to the ``other`` meta data; otherwise returns false.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.operator!=` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.rawHeaders()


    :rtype: 




    Returns a list of all raw headers that are set in this meta data. The list is in the same order that the headers were set.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.setRawHeaders` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.saveToDisk()


    :rtype: :class:`PySide.QtCore.bool`




    Returns is this cache should be allowed to be stored on disk.

    Some cache implementations can keep these cache items in memory for performance reasons, but for security reasons they should not be written to disk.

    Specifically with http, documents marked with Pragma: no-cache, or have a Cache-control set to no-store or no-cache or any https document that doesn't have "Cache-control: public" set will set the saveToDisk to false.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.setSaveToDisk` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.setAttributes(attributes)


    :param attributes: 







.. method:: PySide.QtNetwork.QNetworkCacheMetaData.setExpirationDate(dateTime)


    :param dateTime: :class:`PySide.QtCore.QDateTime`




    Sets the date and time when the meta data expires to ``dateTime`` .

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.expirationDate` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.setLastModified(dateTime)


    :param dateTime: :class:`PySide.QtCore.QDateTime`




    Sets the date and time when the meta data was last modified to ``dateTime`` .

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.lastModified` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.setRawHeaders(headers)


    :param headers: 







.. method:: PySide.QtNetwork.QNetworkCacheMetaData.setSaveToDisk(allow)


    :param allow: :class:`PySide.QtCore.bool`




    Sets whether this network cache meta data and associated content should be allowed to be stored on disk to ``allow`` .

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.saveToDisk` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.setUrl(url)


    :param url: :class:`PySide.QtCore.QUrl`




    Sets the URL this network cache meta data to to be ``url`` .

    The password and fragment are removed from the url.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.url` 


.. method:: PySide.QtNetwork.QNetworkCacheMetaData.url()


    :rtype: :class:`PySide.QtCore.QUrl`




    Returns the URL this network cache meta data is referring to.

    .. seealso::  :meth:`PySide.QtNetwork.QNetworkCacheMetaData.setUrl` 



